1
00:00:00,000 --> 00:00:07,000
好 我们在讲做语意分割之前的模型之前

2
00:00:07,000 --> 00:00:13,200
我们需要介绍另外一个新的操作叫做转制卷机

3
00:00:17,199 --> 00:00:18,699
就是什么意思呢

4
00:00:18,699 --> 00:00:20,500
就是说卷机啊

5
00:00:20,500 --> 00:00:24,000
我们之前有看到卷机通常来说

6
00:00:24,000 --> 00:00:27,199
你不会增大你的输入的高和宽

7
00:00:28,199 --> 00:00:32,200
就我们看到是说要么你保持高宽不变

8
00:00:32,200 --> 00:00:35,200
要么就是我们会把高宽减半

9
00:00:36,200 --> 00:00:39,200
我们很少说卷机可以把高宽变大了

10
00:00:40,200 --> 00:00:42,200
当然说你可以干这个事情

11
00:00:42,200 --> 00:00:43,200
你可以通过padding

12
00:00:43,200 --> 00:00:45,200
你可以padding很多东西

13
00:00:45,200 --> 00:00:46,200
但是你要想说

14
00:00:46,200 --> 00:00:47,200
如果你padding的太多的话

15
00:00:47,200 --> 00:00:48,200
你padding都是零

16
00:00:48,200 --> 00:00:50,200
所以你出来结果也是零

17
00:00:51,200 --> 00:00:56,200
所以你是无法通过padding能够很有效的把你的高宽增加

18
00:00:57,200 --> 00:00:58,200
但是呢

19
00:00:58,200 --> 00:01:00,200
语意分割有什么问题

20
00:01:00,200 --> 00:01:02,200
语意分割是我的输入

21
00:01:02,200 --> 00:01:05,200
最每个pixel level的像素级别的输出

22
00:01:06,200 --> 00:01:07,200
但是你的卷机

23
00:01:07,200 --> 00:01:12,200
你不断的把我的高宽减小减小减小减少到最后7x7的一个高宽的话

24
00:01:12,200 --> 00:01:17,200
那我怎么样去做我的每一个像素级别的输出呢

25
00:01:18,200 --> 00:01:19,200
所以啊

26
00:01:19,200 --> 00:01:21,200
所以我们需要另外一种卷机

27
00:01:21,200 --> 00:01:24,200
能够把你一个小的高宽变大

28
00:01:25,200 --> 00:01:27,200
就转制卷机就是干这个事情

29
00:01:28,200 --> 00:01:33,200
就转制卷机可以用来增大你的输入的高和宽

30
00:01:34,200 --> 00:01:36,200
我们来看一下他是怎么工作的

31
00:01:36,200 --> 00:01:38,200
就说他的

32
00:01:40,200 --> 00:01:42,200
他的逻辑也挺简单的

33
00:01:42,200 --> 00:01:43,200
他跟卷机很像

34
00:01:43,200 --> 00:01:45,200
首先看到是说啊

35
00:01:45,200 --> 00:01:47,200
我们假设有个2x2的输入

36
00:01:48,200 --> 00:01:49,200
有一个2x2的核啊

37
00:01:49,200 --> 00:01:53,200
这个输入核和我们是经常在之前讲

38
00:01:53,200 --> 00:01:55,200
卷机的设计师用了这个东西啊

39
00:01:56,200 --> 00:01:58,200
然后我们来看一下他怎么操作的

40
00:01:59,200 --> 00:02:00,200
首先啊还是一样的

41
00:02:00,200 --> 00:02:02,200
他这个核会滑动啊

42
00:02:02,200 --> 00:02:04,200
首先去看第一个元素

43
00:02:04,200 --> 00:02:05,200
0

44
00:02:06,200 --> 00:02:08,199
0和这个怎么作用呢

45
00:02:08,199 --> 00:02:09,199
就是说你看到啊

46
00:02:09,199 --> 00:02:12,199
首先我会看到一个0在这个地方

47
00:02:13,199 --> 00:02:20,199
0会跟卷机核中的每一个元素做按元素的乘法

48
00:02:21,200 --> 00:02:24,200
然后逐次写回到这个地方

49
00:02:27,200 --> 00:02:30,200
OK就是0乘以和的每一个元素

50
00:02:30,200 --> 00:02:32,200
然后呢对每个元素的写在对应的地方

51
00:02:33,200 --> 00:02:34,200
然后当然是说1啊

52
00:02:35,200 --> 00:02:36,200
1这个地方也是一样的啊

53
00:02:37,200 --> 00:02:42,200
1的话我们会跟你的和做按元素做

54
00:02:42,200 --> 00:02:44,200
然后呢在对应的地方啊

55
00:02:44,200 --> 00:02:46,200
1就是滑到这个地方来了

56
00:02:46,200 --> 00:02:48,200
可以看到在我们在就说

57
00:02:48,200 --> 00:02:50,200
在是input的滑的时候

58
00:02:50,200 --> 00:02:52,200
我们的输出地方也会滑

59
00:02:52,200 --> 00:02:55,200
这个是也是我们卷机是这么工作了

60
00:02:55,200 --> 00:02:56,200
就转制卷机也是一样

61
00:02:57,200 --> 00:02:58,200
但是呢他会滑在这个地方

62
00:02:58,200 --> 00:02:59,200
就是说你看啊

63
00:02:59,200 --> 00:03:01,200
1乘以0123就等于自己啊

64
00:03:01,200 --> 00:03:05,200
就是把这个卷机和啊重复写在这个地方

65
00:03:06,200 --> 00:03:07,200
然后同样道理啊

66
00:03:07,200 --> 00:03:08,200
我们对2这个操作啊

67
00:03:09,200 --> 00:03:11,200
2的话就是2跟所谓的和做按元素做乘法

68
00:03:11,200 --> 00:03:13,200
然后写在啊这个地方

69
00:03:14,200 --> 00:03:16,200
然后呢最后的话最后一个3啊

70
00:03:16,200 --> 00:03:18,200
就要有这个3啊

71
00:03:18,200 --> 00:03:19,200
写在这个地方

72
00:03:21,200 --> 00:03:25,200
所以这样的话我们就拿到了4个啊

73
00:03:26,200 --> 00:03:27,200
大一点的矩阵

74
00:03:29,200 --> 00:03:31,200
然后呢我们把这4个矩阵加起来

75
00:03:31,200 --> 00:03:32,200
就会得到我们的输出

76
00:03:35,200 --> 00:03:39,200
OK所以就是说他跟转制卷机是有点反过来的

77
00:03:39,200 --> 00:03:40,200
对吧啊

78
00:03:40,200 --> 00:03:42,200
就是跟卷机啊卷机这个是怎么做的

79
00:03:42,200 --> 00:03:45,200
卷机说假设我这是卷机的输入的话

80
00:03:45,200 --> 00:03:50,200
那么就是说这一个对应的这个框和他做按元素的乘法

81
00:03:50,200 --> 00:03:55,200
然后相加会去写回到对应的这个元素这个地方啊

82
00:03:57,200 --> 00:04:01,200
但转制剪辑是说我的输入的每一单个的元素

83
00:04:02,200 --> 00:04:04,200
跟你的和按元素做乘法

84
00:04:05,200 --> 00:04:07,200
但不想加就保持那个和的大小

85
00:04:08,200 --> 00:04:11,200
然后按元素啊写回到原始的地方

86
00:04:12,200 --> 00:04:13,200
所以当然可以看到他会变大

87
00:04:13,200 --> 00:04:14,200
对不对

88
00:04:14,200 --> 00:04:15,200
因为你一个元素

89
00:04:15,200 --> 00:04:20,200
他会就会生成一个对应的一个和的一个大小东西

90
00:04:20,200 --> 00:04:21,200
然后写回去了

91
00:04:22,200 --> 00:04:24,200
然后你如果按照公式来写的话

92
00:04:24,200 --> 00:04:27,200
那就是啊啊每一个就是Y啊

93
00:04:27,200 --> 00:04:28,200
你的输你的输出啊

94
00:04:28,200 --> 00:04:33,200
你的Y就是I加上你的和的高

95
00:04:33,200 --> 00:04:35,200
然后J呢就加上你的宽

96
00:04:35,200 --> 00:04:39,200
他是加等于你的输入那个元素

97
00:04:39,200 --> 00:04:41,200
跟你的卷机和做点乘

98
00:04:43,199 --> 00:04:45,199
OK这就是转制卷机啊

99
00:04:45,199 --> 00:04:48,199
当然是说你要做Padding怎么做

100
00:04:49,199 --> 00:04:52,199
Padding这个东西会比较有意思

101
00:04:52,199 --> 00:04:53,199
Padding呢

102
00:04:53,199 --> 00:04:54,199
嗯

103
00:04:54,199 --> 00:04:56,199
他其实是啊

104
00:04:57,199 --> 00:04:59,199
Padding在输出上面的

105
00:05:00,199 --> 00:05:04,199
就他要模拟的是反过来的一个啊东西啊

106
00:05:04,199 --> 00:05:05,199
就我们等会再讲Padding啊

107
00:05:05,199 --> 00:05:07,199
我们在代码上面讲Padding

108
00:05:07,199 --> 00:05:10,199
就带更更更好看一点

109
00:05:10,199 --> 00:05:11,199
就Straight怎么做呢

110
00:05:11,199 --> 00:05:12,199
Straight很容易了啊

111
00:05:12,199 --> 00:05:13,199
叫Straight就是说

112
00:05:13,199 --> 00:05:15,199
这是Straight为1

113
00:05:15,199 --> 00:05:16,199
如果你Straight为2的话

114
00:05:16,199 --> 00:05:18,199
那我这个输出会往后再跳一个

115
00:05:18,199 --> 00:05:21,199
就写在写在这个地方对吧

116
00:05:21,199 --> 00:05:22,199
如果你Straight等于2的话

117
00:05:22,199 --> 00:05:23,199
就会写在这个地方

118
00:05:24,199 --> 00:05:27,199
就是你不再是往后跳一啊

119
00:05:27,199 --> 00:05:29,199
列还是跳两列

120
00:05:29,199 --> 00:05:30,199
如果Straight等于2的话

121
00:05:30,199 --> 00:05:31,199
Straight更大的话

122
00:05:31,199 --> 00:05:32,199
你会跳的更大

123
00:05:32,199 --> 00:05:36,199
所以看到是说你Straight如果特别大的话

124
00:05:36,199 --> 00:05:39,199
那么就可以把你的输出的高宽变得特别大

125
00:05:39,199 --> 00:05:41,199
就成倍的增加你的高宽

126
00:05:41,199 --> 00:05:42,199
OK

127
00:05:42,199 --> 00:05:44,199
所以我们等会再通过代码

128
00:05:44,199 --> 00:05:45,199
再给大家仔细去看一下

129
00:05:45,199 --> 00:05:47,199
这个东西是怎么做的啊

130
00:05:47,199 --> 00:05:48,199
然后我们再看一下

131
00:05:48,199 --> 00:05:50,199
为什么他叫做转制呢

132
00:05:51,199 --> 00:05:53,199
就我们可以知道啊

133
00:05:53,199 --> 00:05:55,199
对卷迹来讲

134
00:05:55,199 --> 00:05:59,199
我们说我们Y等于X跟W做卷迹

135
00:05:59,199 --> 00:06:01,199
就是那个信号是卷迹的意思

136
00:06:01,199 --> 00:06:04,199
我们知道我们可以对W

137
00:06:04,199 --> 00:06:06,199
构造出一个V

138
00:06:06,199 --> 00:06:08,199
构造出一个比较大的矩阵

139
00:06:09,199 --> 00:06:10,199
然后呢

140
00:06:10,199 --> 00:06:13,199
把你的X拉成一条向量

141
00:06:13,199 --> 00:06:15,199
把你的Y拉成一条向量

142
00:06:15,199 --> 00:06:17,199
我们的向量版本叫做X一撇

143
00:06:17,199 --> 00:06:19,199
你的Y也叫做Y一撇

144
00:06:19,199 --> 00:06:22,199
那么你这个卷迹操作啊

145
00:06:22,199 --> 00:06:25,199
这个卷迹操作就等价于这个矩阵乘法

146
00:06:27,199 --> 00:06:29,199
就等价于

147
00:06:30,199 --> 00:06:32,199
V就是你通过W的变化版本

148
00:06:32,199 --> 00:06:35,199
乘以你拉过的向量到你的Y

149
00:06:35,199 --> 00:06:36,199
OK

150
00:06:36,199 --> 00:06:39,199
这就是卷迹可以等价成矩阵乘法

151
00:06:39,199 --> 00:06:40,199
在早期啊

152
00:06:40,199 --> 00:06:42,199
在早期深度学习框架里面的卷迹

153
00:06:42,199 --> 00:06:43,199
就是这么实现的

154
00:06:43,199 --> 00:06:44,199
就是啊

155
00:06:44,199 --> 00:06:46,199
因为卷迹没有大家发现

156
00:06:46,199 --> 00:06:49,199
卷迹自己手写CUDA科农还不如用

157
00:06:49,199 --> 00:06:51,199
用Cublast提供的那个矩阵乘法

158
00:06:51,199 --> 00:06:53,199
所以他就直接变成这个形状

159
00:06:53,199 --> 00:06:55,199
然后做成矩阵乘法

160
00:06:55,199 --> 00:06:57,199
然后再弄回去啊

161
00:06:57,199 --> 00:06:58,199
同样道理的话

162
00:06:58,199 --> 00:07:00,199
现在你说这种AC科呀

163
00:07:00,199 --> 00:07:02,199
这种东西都是这么通过这个变化

164
00:07:02,199 --> 00:07:05,199
来把卷迹变成矩阵乘法了

165
00:07:06,199 --> 00:07:08,199
那么转制干什么事情呢

166
00:07:09,199 --> 00:07:11,199
转制是说

167
00:07:11,199 --> 00:07:13,199
同样的我可以把我的W

168
00:07:13,199 --> 00:07:15,199
构造成一个V

169
00:07:15,199 --> 00:07:17,199
用同样的方式构造成V

170
00:07:17,199 --> 00:07:19,199
但是我的等价的时候

171
00:07:19,199 --> 00:07:21,199
我不再是等价于Y一撇

172
00:07:21,199 --> 00:07:24,199
等于Y一撇等于V乘以X一撇

173
00:07:24,199 --> 00:07:29,199
而是Y一撇等于V的转制乘以X一撇

174
00:07:29,199 --> 00:07:33,199
Y一撇等于V的转制乘以X一撇

175
00:07:36,199 --> 00:07:38,199
OK所以看到是说

176
00:07:38,199 --> 00:07:41,199
因为转制我们知道就是把

177
00:07:43,199 --> 00:07:45,199
就是说

178
00:07:45,199 --> 00:07:47,199
你这个地方就是你的V

179
00:07:47,199 --> 00:07:49,199
从这里变成了V的一撇

180
00:07:49,199 --> 00:07:51,199
所以他叫做转制卷迹

181
00:07:52,199 --> 00:07:54,199
然后当然我们知道是说

182
00:07:54,199 --> 00:07:57,199
如果你这个地方是一个常为N的话

183
00:07:57,199 --> 00:07:59,199
然后你是一个M的话

184
00:07:59,199 --> 00:08:02,199
那么V就是一个N乘以M的一个向量

185
00:08:02,199 --> 00:08:04,199
一个矩阵对吧

186
00:08:04,199 --> 00:08:05,199
所以你在这个地方

187
00:08:05,199 --> 00:08:09,199
你的V撇V的转制就是一个M乘以N

188
00:08:09,199 --> 00:08:12,199
那么你的X就会变成了一个M

189
00:08:12,199 --> 00:08:13,199
然后呢

190
00:08:15,199 --> 00:08:16,199
写错了

191
00:08:16,199 --> 00:08:19,199
你的你的X就会变成一个N

192
00:08:19,199 --> 00:08:21,199
你的Y会变成一个M

193
00:08:21,199 --> 00:08:24,199
所以基本上看到你的X和你的Y的

194
00:08:24,199 --> 00:08:26,199
那个形状被交换了

195
00:08:28,199 --> 00:08:29,199
所以就是说

196
00:08:29,199 --> 00:08:34,200
如果一个卷迹能将输入从HW

197
00:08:34,200 --> 00:08:37,200
变成H一撇和W一撇的话

198
00:08:38,200 --> 00:08:43,200
那么你使用同样超参数的转制卷迹

199
00:08:43,200 --> 00:08:45,200
就是跟你卷迹是参数是一样的话

200
00:08:45,200 --> 00:08:48,200
就会从W一撇就反过来

201
00:08:48,200 --> 00:08:50,200
就是把你从W一撇

202
00:08:50,200 --> 00:08:53,200
H一撇W一撇变成了H和W

203
00:08:53,200 --> 00:08:54,200
就假设你一个卷迹

204
00:08:54,200 --> 00:08:58,200
假设你一个卷迹把一个高宽从2×2变成了4×4的话

205
00:08:58,200 --> 00:08:59,200
卷迹你不能这么变

206
00:08:59,200 --> 00:09:02,200
卷迹从一个4×4变成了一个2×2的话

207
00:09:02,200 --> 00:09:04,200
那么你使用Exactly一样的

208
00:09:04,200 --> 00:09:08,200
Kernel Size Padding Stride的转制卷迹

209
00:09:08,200 --> 00:09:11,200
就会把2×2变成4×4

210
00:09:12,200 --> 00:09:14,200
OK就说你从直观上理解的话

211
00:09:14,200 --> 00:09:16,200
就是把你那个反过来

212
00:09:16,200 --> 00:09:18,200
这就会让大家更好理解

213
00:09:18,200 --> 00:09:20,200
他那个东西怎么设置的

