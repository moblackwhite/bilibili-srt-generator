1
00:00:00,000 --> 00:00:03,200
现在我们有所有我们要的东西了

2
00:00:03,200 --> 00:00:04,280
Transformer的东西

3
00:00:04,280 --> 00:00:08,240
包括了Position Coding, Multi-Head

4
00:00:08,240 --> 00:00:10,400
然后之前我们讲过Tension

5
00:00:10,400 --> 00:00:12,839
现在我们就可以实现我们的Transformer

6
00:00:12,839 --> 00:00:13,960
我们Data也是一样的

7
00:00:13,960 --> 00:00:16,080
我们Data用的seq,to seq那个Data

8
00:00:16,080 --> 00:00:17,480
所以也不需要重新讲

9
00:00:17,480 --> 00:00:18,199
OK

10
00:00:18,199 --> 00:00:20,839
所以我们就直接要讲剩下Transformer

11
00:00:20,839 --> 00:00:21,879
最后那一点点

12
00:00:21,879 --> 00:00:24,000
就怎么样把东西给你合起来

13
00:00:26,400 --> 00:00:28,480
首先这个东西就是Point

14
00:00:28,640 --> 00:00:30,600
Position wise FFm

15
00:00:31,519 --> 00:00:32,840
说白了就是一个

16
00:00:32,840 --> 00:00:35,280
你看到就是一个全连线程

17
00:00:35,280 --> 00:00:36,359
两个全连线程

18
00:00:36,359 --> 00:00:37,240
一个reloop

19
00:00:37,520 --> 00:00:39,560
当然你告诉我Hidden size

20
00:00:40,359 --> 00:00:41,159
然后它怎么做

21
00:00:41,280 --> 00:00:43,039
就是PyTorch的

22
00:00:43,039 --> 00:00:44,240
它的默认的实现

23
00:00:44,399 --> 00:00:45,719
Dense的默认实现

24
00:00:45,719 --> 00:00:46,439
就是说

25
00:00:46,439 --> 00:00:49,159
当你的输入不是一个二维的时候

26
00:00:49,600 --> 00:00:50,960
它把前面那些维度

27
00:00:50,960 --> 00:00:52,799
都当做是你的样本维

28
00:00:53,439 --> 00:00:54,560
所以后面那个维度

29
00:00:54,760 --> 00:00:56,600
就是当做是featured

30
00:00:56,600 --> 00:00:57,560
所以它就这么做

31
00:00:57,560 --> 00:00:58,840
所以说白了

32
00:00:59,400 --> 00:01:01,000
虽然它的名字叫这个

33
00:01:01,000 --> 00:01:02,760
它说白了就是一个MLP

34
00:01:02,920 --> 00:01:04,200
就是一个单影

35
00:01:04,200 --> 00:01:04,840
单影间

36
00:01:05,000 --> 00:01:06,879
它实际上你看就是一个MLP

37
00:01:07,120 --> 00:01:10,280
只是说它就是一个单影参数的MLP

38
00:01:10,280 --> 00:01:11,920
但是你的输入不再是一个二维

39
00:01:11,920 --> 00:01:13,680
你的输入是一个三维的东西

40
00:01:13,680 --> 00:01:15,240
所以它的名字叫做这个东西

41
00:01:15,840 --> 00:01:16,359
OK

42
00:01:16,359 --> 00:01:17,320
就是名字取得好

43
00:01:17,920 --> 00:01:19,480
就是Fancy

44
00:01:19,480 --> 00:01:21,719
但是实际上就是一个MLP

45
00:01:23,520 --> 00:01:24,240
这个我们就不管了

46
00:01:24,359 --> 00:01:25,680
这个东西反正就是

47
00:01:25,760 --> 00:01:27,320
你说我告诉你一个

48
00:01:27,320 --> 00:01:29,240
448的东西出去

49
00:01:29,800 --> 00:01:31,120
我说448就是说

50
00:01:31,120 --> 00:01:34,920
反正你就是一个234的东西出去

51
00:01:34,920 --> 00:01:36,640
那么就是把这个4会变成一个8

52
00:01:36,880 --> 00:01:40,000
就会对你后面维度发现一点变化

53
00:01:40,520 --> 00:01:41,000
OK

54
00:01:43,800 --> 00:01:44,840
另外一个是说

55
00:01:45,240 --> 00:01:46,640
LayerLong和BatchLong

56
00:01:46,960 --> 00:01:47,960
BatchLong你就可以看到

57
00:01:47,960 --> 00:01:49,040
是说反正是

58
00:01:49,800 --> 00:01:51,880
你一个同样一个东西出来

59
00:01:52,040 --> 00:01:53,280
就是说有东西进去

60
00:01:53,280 --> 00:01:54,200
就是说LayerLong

61
00:01:54,359 --> 00:01:55,840
就是把每个样本

62
00:01:56,040 --> 00:01:58,320
就变成了均值为0方程为1

63
00:01:58,320 --> 00:02:00,519
但是BatchLong就是每一个特征

64
00:02:00,640 --> 00:02:02,599
就是一列变成了这个东西

65
00:02:02,599 --> 00:02:04,599
所以它就是切的不一样

66
00:02:04,960 --> 00:02:07,680
用起来就是一个BatchLong和LayerLong

67
00:02:08,120 --> 00:02:09,400
反正参数都一样

68
00:02:09,719 --> 00:02:11,199
所以就是调用的时候不一样

69
00:02:13,199 --> 00:02:16,280
另外一个是用参商连接怎么做

70
00:02:16,759 --> 00:02:18,080
就给你一个

71
00:02:19,599 --> 00:02:20,680
你先不管这个东西

72
00:02:20,719 --> 00:02:21,840
你看一下是说

73
00:02:21,840 --> 00:02:23,920
我给一个X给一个Y的时候

74
00:02:23,920 --> 00:02:26,080
它就把Y

75
00:02:26,200 --> 00:02:30,200
就是你Transformer的中间一块的输出

76
00:02:30,319 --> 00:02:32,560
那个Y dropout一下

77
00:02:33,280 --> 00:02:34,520
加上你的输入

78
00:02:34,520 --> 00:02:36,159
就加上你的Y就是

79
00:02:36,480 --> 00:02:38,560
X进入某一个东西的输出

80
00:02:39,000 --> 00:02:40,680
所以resizure就是说

81
00:02:40,680 --> 00:02:42,760
本来就是把你的输入和输出加起来

82
00:02:42,760 --> 00:02:43,879
然后用了一个dropout

83
00:02:44,000 --> 00:02:45,960
然后再加一个LayerLong

84
00:02:46,560 --> 00:02:47,040
OK

85
00:02:47,080 --> 00:02:48,159
就是LayerLong

86
00:02:48,439 --> 00:02:48,680
OK

87
00:02:48,680 --> 00:02:50,000
这就是你那个AddLong

88
00:02:50,000 --> 00:02:51,560
就刚刚那个图里面的AddLong

89
00:02:51,560 --> 00:02:52,159
那个东西

90
00:02:54,479 --> 00:02:55,439
这个也不用管

91
00:02:55,439 --> 00:02:59,479
反正这个东西不会改变输出的形状

92
00:03:01,639 --> 00:03:02,199
好

93
00:03:02,199 --> 00:03:05,000
接下来看就是一个EncoderBlock

94
00:03:05,560 --> 00:03:08,520
就刚刚就是一个TransformerBlock

95
00:03:09,039 --> 00:03:09,759
里面什么东西

96
00:03:10,599 --> 00:03:11,479
有一个

97
00:03:11,599 --> 00:03:14,520
首先有一个Attention的一个

98
00:03:14,520 --> 00:03:15,840
Multi-head Attention

99
00:03:17,560 --> 00:03:17,920
然后

100
00:03:18,920 --> 00:03:20,280
有一个AddLong

101
00:03:20,440 --> 00:03:21,840
然后有个FFN

102
00:03:22,120 --> 00:03:23,080
又一个AddLong

103
00:03:23,840 --> 00:03:25,360
就这个东西就QuerySize

104
00:03:25,360 --> 00:03:26,000
就是说

105
00:03:26,160 --> 00:03:26,720
KeySize

106
00:03:26,720 --> 00:03:27,280
QuerySize

107
00:03:27,280 --> 00:03:28,200
ValueSize这东西

108
00:03:28,200 --> 00:03:29,560
反正就是挺啰里吧嗦的

109
00:03:29,560 --> 00:03:30,280
说白了

110
00:03:30,600 --> 00:03:31,200
最后的最后

111
00:03:31,320 --> 00:03:32,360
其实这些东西都长一样

112
00:03:32,360 --> 00:03:33,240
都是一个

113
00:03:33,280 --> 00:03:34,120
都等于一个数

114
00:03:34,280 --> 00:03:35,360
所以不要被他吓到

115
00:03:35,360 --> 00:03:36,040
其实说白了

116
00:03:36,040 --> 00:03:36,640
最后的

117
00:03:36,640 --> 00:03:38,320
虽然这么写是写了很多东西

118
00:03:38,760 --> 00:03:39,680
就各种参数

119
00:03:39,720 --> 00:03:40,960
其实最后就等于一个

120
00:03:40,960 --> 00:03:42,280
等于比如说1024

121
00:03:42,280 --> 00:03:43,960
还是等于768

122
00:03:43,960 --> 00:03:44,840
反正就是一个数

123
00:03:44,840 --> 00:03:45,680
所以你就

124
00:03:46,160 --> 00:03:47,440
虽然写起来很啰嗦

125
00:03:47,479 --> 00:03:48,680
实际上用的时候

126
00:03:48,680 --> 00:03:49,199
就

127
00:03:49,319 --> 00:03:50,599
你会看到这个东西很简单

128
00:03:50,599 --> 00:03:51,039
对吧

129
00:03:51,800 --> 00:03:52,719
就是说

130
00:03:53,840 --> 00:03:54,359
他怎么做

131
00:03:54,479 --> 00:03:55,199
Fold怎么做

132
00:03:58,159 --> 00:03:59,439
我换个行这里

133
00:04:04,719 --> 00:04:06,120
所谓的Self-Attention

134
00:04:06,120 --> 00:04:07,000
就是把Key

135
00:04:07,039 --> 00:04:07,520
Value

136
00:04:07,560 --> 00:04:07,960
Query

137
00:04:08,159 --> 00:04:10,280
就是把X放三下丢进去

138
00:04:10,319 --> 00:04:11,280
就是Self-Attention了

139
00:04:11,319 --> 00:04:11,759
对吧

140
00:04:12,520 --> 00:04:14,319
然后这个东西是Multi-head的

141
00:04:14,560 --> 00:04:15,159
反正Multi-head

142
00:04:15,199 --> 00:04:16,000
已经藏在里面了

143
00:04:16,000 --> 00:04:16,720
就是它

144
00:04:16,720 --> 00:04:17,360
内容

145
00:04:17,400 --> 00:04:18,360
自己把你做掉了

146
00:04:18,360 --> 00:04:18,880
就用起来

147
00:04:18,880 --> 00:04:20,320
跟用Attention是一样的

148
00:04:20,360 --> 00:04:21,520
然后把你Value的Length

149
00:04:21,520 --> 00:04:22,840
就是说你的X的Value的Length

150
00:04:22,840 --> 00:04:23,560
也传进去

151
00:04:23,560 --> 00:04:24,640
如果你有的话

152
00:04:25,360 --> 00:04:25,840
然后

153
00:04:26,600 --> 00:04:27,560
这是它的输出

154
00:04:27,840 --> 00:04:28,760
就是它这个Y

155
00:04:29,360 --> 00:04:31,320
它XY放到Add-a-Long里面

156
00:04:31,760 --> 00:04:32,040
好

157
00:04:32,040 --> 00:04:32,800
做成Y

158
00:04:33,120 --> 00:04:34,680
接下来你就把这个Y放到

159
00:04:35,160 --> 00:04:36,720
全连接层FFN里面

160
00:04:37,600 --> 00:04:39,080
然后和它的输入

161
00:04:39,080 --> 00:04:39,920
和它的输入

162
00:04:40,000 --> 00:04:41,320
又放到一个Add-a-Long里面

163
00:04:41,760 --> 00:04:42,400
OK

164
00:04:42,600 --> 00:04:43,440
这就实现完了

165
00:04:43,440 --> 00:04:44,160
就是说说白了

166
00:04:44,160 --> 00:04:44,640
就是刚刚

167
00:04:45,160 --> 00:04:46,400
就是一个Transformer block

168
00:04:46,400 --> 00:04:47,760
里面有一个不是有一个

169
00:04:47,760 --> 00:04:48,840
就是Encode的block

170
00:04:49,160 --> 00:04:50,240
Decode还没说

171
00:04:50,240 --> 00:04:51,360
Encode的就是一个

172
00:04:51,960 --> 00:04:52,840
Separation

173
00:04:53,240 --> 00:04:54,120
一个Add-a-Long

174
00:04:54,640 --> 00:04:55,880
然后再加一个FFN

175
00:04:55,880 --> 00:04:56,720
再加一个Add-a-Long

176
00:04:56,720 --> 00:04:57,280
就三下

177
00:04:57,280 --> 00:04:57,680
对吧

178
00:04:59,080 --> 00:04:59,640
OK

179
00:05:00,720 --> 00:05:02,000
然后你可以看一下

180
00:05:02,000 --> 00:05:02,800
就是反正

181
00:05:02,840 --> 00:05:03,520
就是说

182
00:05:05,560 --> 00:05:06,480
这个东西反正

183
00:05:06,480 --> 00:05:07,760
你可以不用太管这个东西

184
00:05:07,760 --> 00:05:08,560
反正就是

185
00:05:09,280 --> 00:05:11,360
一个长为Batch Size为2

186
00:05:11,640 --> 00:05:12,760
长度为100

187
00:05:12,760 --> 00:05:14,600
Dimension是24的东西进去

188
00:05:14,880 --> 00:05:15,920
出来之后

189
00:05:15,920 --> 00:05:16,879
还是一个Shape

190
00:05:16,879 --> 00:05:18,800
还是Batch Size为2

191
00:05:19,000 --> 00:05:20,160
Sequence Length100

192
00:05:20,400 --> 00:05:21,480
Dimension为24

193
00:05:21,720 --> 00:05:22,000
就是说

194
00:05:22,000 --> 00:05:23,439
虽然你这个东西看着也很复杂

195
00:05:23,439 --> 00:05:24,840
就2424什么

196
00:05:25,480 --> 00:05:26,240
但实际上来说

197
00:05:26,240 --> 00:05:26,680
一般来说

198
00:05:26,680 --> 00:05:27,439
反正就是

199
00:05:27,439 --> 00:05:28,720
你的Dimension为24的话

200
00:05:28,720 --> 00:05:29,920
出去反正都是

201
00:05:30,640 --> 00:05:32,720
都是24

202
00:05:33,040 --> 00:05:34,360
中间当然你可以说

203
00:05:34,639 --> 00:05:36,439
可以把一个隐藏层

204
00:05:36,439 --> 00:05:37,720
弄大一点是可以的

205
00:05:38,080 --> 00:05:39,240
或者Multi-head是8

206
00:05:39,240 --> 00:05:39,840
这个地方

207
00:05:40,639 --> 00:05:41,639
但是一般来说

208
00:05:41,639 --> 00:05:43,160
就是也挺简单的

209
00:05:43,160 --> 00:05:43,600
对吧

210
00:05:43,639 --> 00:05:45,120
就是输入输出不变

211
00:05:45,319 --> 00:05:47,120
主要是你要知道是说

212
00:05:47,720 --> 00:05:48,800
丢进一个Layer之后

213
00:05:48,800 --> 00:05:50,399
你不会对你的输入输出

214
00:05:50,399 --> 00:05:51,199
发生变化

215
00:05:51,480 --> 00:05:52,680
所以就导致你很容易

216
00:05:52,680 --> 00:05:53,800
把你N个东西

217
00:05:53,800 --> 00:05:54,519
给你弄起来

218
00:05:54,519 --> 00:05:55,160
就可以

219
00:05:56,240 --> 00:05:57,560
所以这样子

220
00:05:57,560 --> 00:05:58,120
我们就可以做

221
00:05:58,120 --> 00:06:00,040
我们的Transformer Encoder了

222
00:06:01,360 --> 00:06:02,720
Encoder里面

223
00:06:02,879 --> 00:06:03,720
基本上就是说

224
00:06:03,720 --> 00:06:04,560
你能看到

225
00:06:06,120 --> 00:06:07,000
一个重要的参数

226
00:06:07,000 --> 00:06:08,120
是Number of Hiddens

227
00:06:08,319 --> 00:06:09,840
就是你能隐藏的大小

228
00:06:10,280 --> 00:06:12,280
它输入

229
00:06:12,480 --> 00:06:14,240
输入首先基于Embedded

230
00:06:14,439 --> 00:06:15,519
我们之前都是一样的

231
00:06:15,519 --> 00:06:16,920
基于Embedded出来之后

232
00:06:16,920 --> 00:06:18,000
会得到一个

233
00:06:18,040 --> 00:06:19,040
Number of Hiddens

234
00:06:19,040 --> 00:06:20,040
长的一些向量

235
00:06:20,600 --> 00:06:23,120
然后会有个Position Encoding

236
00:06:23,759 --> 00:06:25,199
然后如果Number of Layers

237
00:06:25,199 --> 00:06:25,519
就是说

238
00:06:25,519 --> 00:06:27,560
你有多少个Transformer block

239
00:06:28,000 --> 00:06:29,280
然后把它全部存起来

240
00:06:29,280 --> 00:06:31,160
就是这种东西都存起来

241
00:06:32,120 --> 00:06:34,600
你Forward其实也挺简单的

242
00:06:34,600 --> 00:06:34,879
对吧

243
00:06:34,879 --> 00:06:35,439
你给看一下

244
00:06:38,360 --> 00:06:40,639
首先你的X进来

245
00:06:40,639 --> 00:06:41,879
就是那些Token进来

246
00:06:42,199 --> 00:06:43,879
先丢到Embedded层

247
00:06:44,720 --> 00:06:45,319
Embedded层

248
00:06:45,439 --> 00:06:46,680
这里有个比较有意思的东西

249
00:06:46,680 --> 00:06:46,960
是说

250
00:06:46,960 --> 00:06:48,319
它会乘以一个

251
00:06:48,319 --> 00:06:49,480
你的Hidden Size的

252
00:06:49,480 --> 00:06:50,400
Square Root

253
00:06:51,120 --> 00:06:52,079
是因为

254
00:06:53,439 --> 00:06:54,360
Embedded层

255
00:06:54,600 --> 00:06:55,120
它出来一个

256
00:06:55,120 --> 00:06:55,960
成为D的东西

257
00:06:56,319 --> 00:06:57,040
你可以经常

258
00:06:57,040 --> 00:06:58,120
我们会把那个东西的

259
00:06:58,120 --> 00:06:58,439
None

260
00:06:58,600 --> 00:06:59,400
就是L2 None

261
00:06:59,400 --> 00:07:00,040
缩成1

262
00:07:00,040 --> 00:07:00,800
所以它都是

263
00:07:00,800 --> 00:07:01,639
如果D越大

264
00:07:01,759 --> 00:07:03,160
它的数值越小

265
00:07:03,800 --> 00:07:05,120
但是Position Encoding

266
00:07:05,120 --> 00:07:05,720
都是一些

267
00:07:05,720 --> 00:07:06,920
正义到负义之间的东西

268
00:07:06,920 --> 00:07:07,759
就是说正义到负义之间

269
00:07:07,759 --> 00:07:09,280
都是正义到负义

270
00:07:09,439 --> 00:07:10,199
Scale的东西

271
00:07:10,360 --> 00:07:12,480
所以这种东西通常比较小

272
00:07:12,480 --> 00:07:13,480
特别D越大

273
00:07:13,480 --> 00:07:15,000
它的每个元素值越小

274
00:07:15,040 --> 00:07:16,400
所以你就把它乘一个

275
00:07:16,400 --> 00:07:16,800
这东西

276
00:07:16,920 --> 00:07:18,600
使得它这个东西

277
00:07:19,040 --> 00:07:20,759
跟你的Position Encoding

278
00:07:20,759 --> 00:07:21,319
那个P

279
00:07:21,480 --> 00:07:23,800
它的数值差不多大小

280
00:07:24,120 --> 00:07:24,840
所以就为什么

281
00:07:24,840 --> 00:07:25,360
乘了一个

282
00:07:25,360 --> 00:07:26,319
Square Root of

283
00:07:26,319 --> 00:07:27,360
那个D的东西

284
00:07:28,480 --> 00:07:28,920
这个东西

285
00:07:28,920 --> 00:07:30,200
是为了Visualization用的

286
00:07:30,360 --> 00:07:31,720
就是我们最后为了看用的

287
00:07:32,520 --> 00:07:33,960
然后你做

288
00:07:34,400 --> 00:07:35,480
你做Transformer

289
00:07:35,480 --> 00:07:36,280
就是

290
00:07:36,560 --> 00:07:38,439
你反正有N个Transformer Layer

291
00:07:39,319 --> 00:07:40,960
然后每一次就是

292
00:07:41,319 --> 00:07:42,720
把X丢进去

293
00:07:42,960 --> 00:07:43,760
出来一个X

294
00:07:43,760 --> 00:07:44,320
就是

295
00:07:44,760 --> 00:07:45,600
做完一下

296
00:07:46,760 --> 00:07:48,040
之所以我们这个地方

297
00:07:48,040 --> 00:07:49,320
没有用那个

298
00:07:49,720 --> 00:07:51,680
用N-Sequential把它串起来

299
00:07:51,680 --> 00:07:52,720
就纯粹是因为这样子

300
00:07:52,720 --> 00:07:53,440
我能够

301
00:07:54,720 --> 00:07:55,920
把你这个

302
00:07:56,760 --> 00:07:58,760
把这个东西给存起来

303
00:07:59,160 --> 00:07:59,720
就说白了

304
00:07:59,920 --> 00:08:00,720
反正就是

305
00:08:01,400 --> 00:08:02,640
就是一个Sequential的东西

306
00:08:02,720 --> 00:08:03,960
就是一层一层丢进去

307
00:08:03,960 --> 00:08:05,880
然后大小还不会

308
00:08:05,920 --> 00:08:07,520
就是说你的输入输出

309
00:08:07,520 --> 00:08:08,560
还不会发生变化

310
00:08:08,880 --> 00:08:10,040
这就是你的

311
00:08:11,040 --> 00:08:13,240
Transformer Encoder

312
00:08:13,400 --> 00:08:13,920
对吧

313
00:08:13,960 --> 00:08:15,640
就是Embedding

314
00:08:15,640 --> 00:08:16,680
加一个Position

315
00:08:17,080 --> 00:08:17,840
Encoding

316
00:08:17,879 --> 00:08:20,200
然后再输入到你的N层

317
00:08:20,400 --> 00:08:22,720
Transformer Layer里面

318
00:08:22,720 --> 00:08:24,000
就完事了

319
00:08:27,240 --> 00:08:29,120
然后你可以反正创建

320
00:08:29,120 --> 00:08:29,840
一堆东西出来

321
00:08:30,360 --> 00:08:31,240
创建一堆东西出来

322
00:08:31,240 --> 00:08:31,840
就是

323
00:08:32,440 --> 00:08:33,879
核心思想是说

324
00:08:33,920 --> 00:08:36,800
假设你的Hidden Size是24的话

325
00:08:38,440 --> 00:08:39,360
你的Multi-Head

326
00:08:39,360 --> 00:08:41,120
Multi-Head是不会改变

327
00:08:42,200 --> 00:08:42,720
输出的

328
00:08:42,879 --> 00:08:43,639
Multi-Head是说

329
00:08:43,639 --> 00:08:45,600
我要把它切成多少个

330
00:08:45,600 --> 00:08:46,120
在里面

331
00:08:46,480 --> 00:08:47,639
Multi-Head我们用的是8

332
00:08:47,759 --> 00:08:48,240
这个地方

333
00:08:48,600 --> 00:08:49,200
然后Layer

334
00:08:49,200 --> 00:08:50,320
Number of Layers用的是2

335
00:08:50,519 --> 00:08:51,480
0.5是dropout

336
00:08:52,399 --> 00:08:53,279
然后就是说

337
00:08:53,279 --> 00:08:54,560
你给一个2乘10

338
00:08:54,560 --> 00:08:55,840
就是说Batch Size是2

339
00:08:55,840 --> 00:08:57,000
然后长度是100

340
00:08:57,000 --> 00:08:57,960
东西进去的话

341
00:08:59,159 --> 00:09:01,080
那么你的出来就是Batch Size

342
00:09:01,360 --> 00:09:03,039
乘以长度100

343
00:09:03,080 --> 00:09:04,200
再乘以24

344
00:09:04,200 --> 00:09:05,920
24就是Hidden Size

345
00:09:06,120 --> 00:09:06,399
OK

346
00:09:06,399 --> 00:09:07,840
就是Encoder的输出

347
00:09:08,840 --> 00:09:09,600
Encoder输出

348
00:09:09,800 --> 00:09:11,120
就会放到Decoder里面

349
00:09:11,120 --> 00:09:11,519
对吧

350
00:09:12,040 --> 00:09:12,720
然后Decoder

351
00:09:13,000 --> 00:09:14,840
就是首先看一下Decoder Block

352
00:09:15,600 --> 00:09:16,720
它跟Encoder有点像

353
00:09:17,840 --> 00:09:19,480
但是稍微会麻烦一点点

354
00:09:19,480 --> 00:09:20,200
就是说

355
00:09:20,440 --> 00:09:22,800
首先它有一个Attention

356
00:09:23,720 --> 00:09:24,560
还有两个Attention

357
00:09:24,560 --> 00:09:26,240
就是中间那个Attention

358
00:09:27,000 --> 00:09:27,639
这个是一样的

359
00:09:27,639 --> 00:09:28,280
就是

360
00:09:29,200 --> 00:09:30,680
这样子会有三个Add-on

361
00:09:30,680 --> 00:09:31,639
和一个FFN

362
00:09:32,080 --> 00:09:32,440
OK

363
00:09:32,960 --> 00:09:35,200
然后它还得记一下I这个东西

364
00:09:35,200 --> 00:09:37,840
我给大家解释一下

365
00:09:37,840 --> 00:09:38,600
为什么GUI

366
00:09:40,879 --> 00:09:41,440
就首先

367
00:09:42,879 --> 00:09:44,640
首先它有个State传过来

368
00:09:44,640 --> 00:09:46,320
State是哪里来的呢

369
00:09:47,120 --> 00:09:48,480
State里面有

370
00:09:50,400 --> 00:09:52,320
State里面其实是有三个东西

371
00:09:52,480 --> 00:09:54,680
一个是你的Encoder的输出

372
00:09:54,720 --> 00:09:57,360
一个是你的Encoder的Valid Length

373
00:09:57,560 --> 00:09:58,320
第三个东西

374
00:09:58,320 --> 00:09:59,080
我们再解释

