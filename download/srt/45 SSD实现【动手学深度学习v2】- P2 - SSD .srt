1
00:00:00,000 --> 00:00:07,600
首先是我们在上个星期讲过了怎么样去处理一个毛框

2
00:00:07,600 --> 00:00:10,519
框之间它的相似度怎么算

3
00:00:10,519 --> 00:00:15,359
你怎么样去把以每个像素为中心

4
00:00:15,359 --> 00:00:18,000
去给大家做出很多个不一样的毛框出来

5
00:00:18,000 --> 00:00:20,320
另外一块我们也讲了说

6
00:00:20,320 --> 00:00:21,920
对于真实的标号

7
00:00:21,920 --> 00:00:24,320
那个叫做真实的边缘框

8
00:00:24,320 --> 00:00:26,839
然后是怎么样标注出来

9
00:00:26,839 --> 00:00:28,800
然后在数据里面读出来的

10
00:00:29,519 --> 00:00:33,960
然后我们在昨天的SSD有讲到是说

11
00:00:33,960 --> 00:00:39,079
SSD的一个做法是它做了多尺度的目标检测

12
00:00:39,320 --> 00:00:41,640
就是在不同的维度上去

13
00:00:41,640 --> 00:00:44,520
你的feature map有不同的大小

14
00:00:44,520 --> 00:00:46,519
然后它去看分别的位置

15
00:00:46,519 --> 00:00:50,519
这样子能够在底层能够去做比较小的物体

16
00:00:50,519 --> 00:00:52,439
上层能够做比较大的物体

17
00:00:53,200 --> 00:00:56,079
所以我们先干的事情就是说

18
00:00:56,079 --> 00:01:00,079
先给大家讲一下什么叫做多尺度的目标检测

19
00:01:00,079 --> 00:01:05,079
之所以讲这个东西取决于你之后的超参数是怎么设置的

20
00:01:06,000 --> 00:01:09,519
OK我们就开始看一下我们这一个计时本长什么样子

21
00:01:10,400 --> 00:01:15,840
首先我们当然是把我们最喜爱的猫和狗的图片给读出来

22
00:01:16,039 --> 00:01:19,239
这个就是告诉你大概是高是561

23
00:01:19,239 --> 00:01:21,879
宽是728

24
00:01:21,879 --> 00:01:23,200
就是高和宽

25
00:01:26,079 --> 00:01:31,840
然后我们就是说我们在特征图叫做feature map上面生成毛框

26
00:01:32,039 --> 00:01:35,519
就特征图就是你一个某一个卷积层的输出

27
00:01:35,679 --> 00:01:37,200
那个东西就叫特征图

28
00:01:37,719 --> 00:01:42,439
然后我们的毛框是以每个像素为单位

29
00:01:42,719 --> 00:01:45,519
然后每个像素是作为一个毛框的中心

30
00:01:46,079 --> 00:01:47,400
所以我们这里干什么事情

31
00:01:47,840 --> 00:01:50,560
这个事情是说我写个函数

32
00:01:51,560 --> 00:01:57,040
你告诉我你特征图的宽和特征图的高

33
00:01:57,760 --> 00:01:59,920
这样子我就知道你有多少个像素对吧

34
00:02:00,480 --> 00:02:02,719
然后以每个像素为中心

35
00:02:03,560 --> 00:02:09,520
生成你给我不同的size的不同的大小的毛框

36
00:02:09,759 --> 00:02:12,680
然后我们在这个ratio我们这个地方就固定住了

37
00:02:12,680 --> 00:02:14,199
我们其实固定住了

38
00:02:14,199 --> 00:02:16,560
等于可以给它换个行

39
00:02:17,599 --> 00:02:19,680
再换个行就能看清楚了

40
00:02:19,840 --> 00:02:21,040
ratio我们就简单一点

41
00:02:21,040 --> 00:02:22,319
我们固定住了说

42
00:02:22,520 --> 00:02:24,319
一个是1比1的宽

43
00:02:24,520 --> 00:02:26,480
一个是高是宽的两倍

44
00:02:26,480 --> 00:02:28,080
一个是宽是高的两倍

45
00:02:28,319 --> 00:02:31,240
所以就ratio就是这三个定死在这个地方

46
00:02:31,439 --> 00:02:34,520
我们能够选的是你毛框

47
00:02:34,760 --> 00:02:36,879
在你整个图片它的大小

48
00:02:38,319 --> 00:02:39,879
所以你这个地方干什么事情

49
00:02:40,240 --> 00:02:43,520
这地方是说我就生成一个假的一个feature map

50
00:02:43,800 --> 00:02:46,840
告诉我一个宽和高

51
00:02:46,920 --> 00:02:49,599
然后我们的通道数就是区别10

52
00:02:49,599 --> 00:02:51,000
我们的batch size区别1

53
00:02:51,000 --> 00:02:52,280
因为这两个是不关键的

54
00:02:52,280 --> 00:02:55,159
因为它只关心你的高宽是多少

55
00:02:55,360 --> 00:02:57,120
它通道数它是不关心的

56
00:02:58,480 --> 00:03:02,240
然后我们用的是我们在上个星期讲的代码

57
00:03:03,000 --> 00:03:08,759
怎么样去生成一堆以每个像素为中心的毛框

58
00:03:09,080 --> 00:03:11,840
所以我们告诉你就是一个feature map给你进去

59
00:03:11,840 --> 00:03:14,480
它其实也就是看里面的框很高是怎么样子

60
00:03:14,920 --> 00:03:18,800
然后你告诉我你需要哪一些大小

61
00:03:18,800 --> 00:03:23,120
然后哪一些ratio出来一堆anchor

62
00:03:23,800 --> 00:03:26,240
anchor它的话我们就把它画出来

63
00:03:26,440 --> 00:03:31,680
就是box scale就是根据你的w和h是真实图片

64
00:03:32,440 --> 00:03:33,600
就根据真实图片

65
00:03:33,600 --> 00:03:36,600
因为它出来的我们昨天有同学问过

66
00:03:36,600 --> 00:03:41,160
就是说它里面出来的东西都是0到1之间的一个数值

67
00:03:41,280 --> 00:03:43,000
所以你正在画它的时候

68
00:03:43,359 --> 00:03:47,759
真的取决于你的整个图片有多宽和多高

69
00:03:48,359 --> 00:03:52,319
所以这个地方我们要把scale传回去

70
00:03:52,319 --> 00:03:56,159
然后最后的话你画的时候我们就是

71
00:03:57,159 --> 00:04:00,079
你把你的毛框0就是取0

72
00:04:00,079 --> 00:04:01,800
就是因为我们的batch size的余

73
00:04:01,800 --> 00:04:02,719
1

74
00:04:03,199 --> 00:04:06,439
所以我们就把batch里面那一张图片取出来

75
00:04:06,439 --> 00:04:08,079
因为对每一张不同图片

76
00:04:08,079 --> 00:04:10,800
你都要生成一个对应的一些毛框

77
00:04:11,199 --> 00:04:13,199
所以我把它这一张图片拿出来

78
00:04:13,199 --> 00:04:16,000
然后乘以你真实图片的高和宽

79
00:04:16,000 --> 00:04:19,839
这样子我能够还原出你真实在真实图片中间的

80
00:04:19,839 --> 00:04:22,600
真正的大小像素值

81
00:04:22,600 --> 00:04:24,000
这样子我们把那画出来

82
00:04:24,839 --> 00:04:26,839
所以这个函数就是说你告诉我

83
00:04:26,839 --> 00:04:29,439
你的feature map的高宽和你的大小

84
00:04:29,439 --> 00:04:32,719
我就给你把你要的毛框全部给你生成出来

85
00:04:33,120 --> 00:04:36,079
这个函数主要是给大家直观上的理解说

86
00:04:36,079 --> 00:04:38,839
我们设的这些参数到底是什么样的意思

87
00:04:42,160 --> 00:04:42,760
好

88
00:04:42,760 --> 00:04:44,840
我们要重新运行一下才行的

89
00:04:50,160 --> 00:04:51,439
就首先我们干嘛

90
00:04:51,560 --> 00:04:55,920
我们就是说我们给假设你的特征的宽是4

91
00:04:55,920 --> 00:04:56,960
高也是4

92
00:04:58,240 --> 00:05:00,480
然后我们在原始图片画出来

93
00:05:01,200 --> 00:05:04,879
你的size我们就取了一个最简单的0.15

94
00:05:04,879 --> 00:05:09,320
就是占你的整个图片的15%的区域

95
00:05:10,319 --> 00:05:12,240
你可以看到是说

96
00:05:12,240 --> 00:05:14,560
因为你的高和宽都是4

97
00:05:14,800 --> 00:05:18,839
所以你最后是画出来是有16个像素

98
00:05:18,839 --> 00:05:19,360
对吧

99
00:05:19,399 --> 00:05:21,719
你看这每一个三个毛框

100
00:05:22,279 --> 00:05:23,959
它的中心点就是一个像素

101
00:05:24,839 --> 00:05:27,079
因为你这是在feature map上生出来的

102
00:05:27,399 --> 00:05:28,879
所以feature map是4x4

103
00:05:29,000 --> 00:05:31,240
你把它映射回去到回去的图片上

104
00:05:31,360 --> 00:05:33,680
当然是看上去就比较大一些了

105
00:05:33,680 --> 00:05:36,319
这个是返回到原始图片中

106
00:05:36,319 --> 00:05:38,600
你这个毛宽长多大

107
00:05:39,719 --> 00:05:43,519
然后可以看到是说你size0.15

108
00:05:43,519 --> 00:05:45,279
然后基本上可以看到说

109
00:05:45,279 --> 00:05:48,399
每一个图片占你的还行

110
00:05:48,399 --> 00:05:48,680
对吧

111
00:05:48,680 --> 00:05:51,000
就说占小块比较小的面积

112
00:05:51,120 --> 00:05:53,079
然后因为我只去了一个大小

113
00:05:53,079 --> 00:05:53,800
就是0.15

114
00:05:53,800 --> 00:05:56,560
就是所以你就是在每个中心点

115
00:05:56,560 --> 00:05:58,120
做了三个不同的ratio

116
00:05:58,199 --> 00:06:00,000
就一个框的一个方的

117
00:06:00,000 --> 00:06:01,519
一个长的一个别的

118
00:06:02,399 --> 00:06:05,600
所以这就是你这边就画出了16x3

119
00:06:05,960 --> 00:06:09,400
就是48个毛框的地方

120
00:06:11,360 --> 00:06:12,320
接下来我们看一下

121
00:06:12,320 --> 00:06:15,960
就是说当你的高宽更小一点

122
00:06:15,960 --> 00:06:16,480
怎么样子

123
00:06:16,480 --> 00:06:18,160
就是说你可以认为4x4

124
00:06:18,160 --> 00:06:20,439
已经是分辨率比较高的

125
00:06:20,439 --> 00:06:21,320
但实际上不是

126
00:06:21,520 --> 00:06:24,480
4x4是一个分辨率比较低的

127
00:06:24,480 --> 00:06:25,520
一个feature map

128
00:06:25,520 --> 00:06:26,960
但是为了画图方便

129
00:06:27,320 --> 00:06:29,680
因为我不可能给你画一个32x32的

130
00:06:29,680 --> 00:06:31,760
32x32画起来就太大了

131
00:06:31,760 --> 00:06:32,800
就是你看不清楚

132
00:06:33,360 --> 00:06:34,960
所以假设这个是说

133
00:06:35,360 --> 00:06:37,080
我认为4x4已经是分辨率

134
00:06:37,080 --> 00:06:38,720
比较高的一个feature map了

135
00:06:39,000 --> 00:06:41,520
那么我就可以取一个小一点的size

136
00:06:41,520 --> 00:06:42,240
0.15

137
00:06:42,280 --> 00:06:42,720
这样子

138
00:06:42,720 --> 00:06:45,840
我能够去框那些比较小的物体

139
00:06:47,080 --> 00:06:47,960
就基本上说

140
00:06:48,160 --> 00:06:50,080
当然我们猫和狗是比较大的物体

141
00:06:50,440 --> 00:06:51,680
但如果你这个图片

142
00:06:51,680 --> 00:06:52,560
你有比较鸟

143
00:06:52,800 --> 00:06:54,120
就背景上面的飞鸟

144
00:06:54,320 --> 00:06:56,480
或者什么路灯远处的行人

145
00:06:57,120 --> 00:06:58,840
这个大小看上去是刚刚好的

146
00:06:58,840 --> 00:06:59,320
对不对

147
00:07:00,520 --> 00:07:02,080
那么接下来就是说

148
00:07:02,319 --> 00:07:05,719
我们将特征的图的高宽减半

149
00:07:05,719 --> 00:07:07,439
然后我们再来运行一下

150
00:07:08,800 --> 00:07:09,719
就是说减半的话

151
00:07:09,879 --> 00:07:10,639
就是2x2了

152
00:07:10,639 --> 00:07:13,240
就是高和宽都是2x2

153
00:07:13,800 --> 00:07:14,639
然后你的size

154
00:07:14,800 --> 00:07:17,360
我们因为你已经是2x2了

155
00:07:17,360 --> 00:07:18,759
我们可以一个做法是说

156
00:07:18,759 --> 00:07:20,560
我可以把你做的比较大一点点

157
00:07:20,560 --> 00:07:21,560
就是0.4

158
00:07:22,240 --> 00:07:25,919
每一个模框占的原始图片的面积

159
00:07:25,919 --> 00:07:27,039
是占40%

160
00:07:27,919 --> 00:07:29,120
这基本上可以看到是说

161
00:07:29,120 --> 00:07:29,519
OK

162
00:07:29,519 --> 00:07:33,039
我比之前框要大很多

163
00:07:33,039 --> 00:07:33,399
对吧

164
00:07:36,159 --> 00:07:36,680
最后的话

165
00:07:36,680 --> 00:07:37,959
我可以更极端一点

166
00:07:37,959 --> 00:07:39,000
就是说

167
00:07:40,439 --> 00:07:42,159
1x1就是一个像素了

168
00:07:42,159 --> 00:07:44,959
我的最后我们整个图缩成了一个像素

169
00:07:45,199 --> 00:07:46,959
然后说我需要一个比较大的模框

170
00:07:46,959 --> 00:07:48,839
就是占图的80%

171
00:07:49,919 --> 00:07:52,279
就这个地方伸出去了

172
00:07:52,479 --> 00:07:54,639
就是说这个地方是出去了一点点

173
00:07:54,839 --> 00:07:56,560
就是说出去的地方

174
00:07:56,560 --> 00:07:57,359
我们就没画了

175
00:07:57,359 --> 00:07:58,680
因为出去地方没意义

176
00:07:58,680 --> 00:08:00,800
它其实是一个这样子的图在里面

177
00:08:00,800 --> 00:08:01,199
对吧

178
00:08:03,079 --> 00:08:03,959
是一个这样子的图

179
00:08:03,959 --> 00:08:05,480
真正的是说对吧

180
00:08:05,480 --> 00:08:06,720
因为我们把它截掉了

181
00:08:07,879 --> 00:08:09,160
就可以看到是说

182
00:08:09,639 --> 00:08:11,960
我当我的真的FishMap很小的时候

183
00:08:11,960 --> 00:08:15,120
我可以选择使用比较大的size

184
00:08:15,280 --> 00:08:18,439
这样子我真的能够去做比较大的模框

185
00:08:18,680 --> 00:08:19,680
可以把它圈起来

186
00:08:20,280 --> 00:08:22,199
所以当然是说你可以

187
00:08:22,680 --> 00:08:23,480
你也可以是说

188
00:08:23,480 --> 00:08:25,240
我在比较大的FishMap上

189
00:08:25,280 --> 00:08:26,560
比如4x4的时候

190
00:08:26,560 --> 00:08:30,000
我给你一个比较大的一个size0.8

191
00:08:30,000 --> 00:08:30,480
一样的

192
00:08:30,480 --> 00:08:31,759
我可以把你圈出来

193
00:08:31,759 --> 00:08:33,519
但你那样子做的一个

194
00:08:33,919 --> 00:08:35,519
不好的地方在于是说

195
00:08:35,519 --> 00:08:38,480
你导致每个像素之间的模框的overlap

196
00:08:38,480 --> 00:08:39,120
特别大

197
00:08:39,919 --> 00:08:41,879
所以是说你在后面一层

198
00:08:41,879 --> 00:08:44,120
在做比较大的模框的话

199
00:08:44,120 --> 00:08:46,480
相对于是说你的特征的

200
00:08:47,320 --> 00:08:51,799
对于全局的可能看得更好一点

201
00:08:51,799 --> 00:08:52,919
这样子你能做的

202
00:08:52,919 --> 00:08:54,320
可能做大物体更好一点

203
00:08:54,360 --> 00:08:56,879
在你下面的特征的时候

204
00:08:56,879 --> 00:08:59,080
可能看的东西更加局部一点

205
00:08:59,120 --> 00:09:00,920
所以你可以取小的模框

206
00:09:00,920 --> 00:09:03,800
尝试去识别一些小的物体

207
00:09:04,560 --> 00:09:04,879
OK

208
00:09:04,920 --> 00:09:07,720
这就是一个直观上的

209
00:09:07,720 --> 00:09:12,600
你的FishMap的高宽和你选size的时候

210
00:09:12,600 --> 00:09:14,920
我去把这些模框给大家画出来

211
00:09:14,920 --> 00:09:16,080
大家直观上这些模框

212
00:09:16,080 --> 00:09:18,480
到底是在图中间占一个什么样的比例

213
00:09:19,040 --> 00:09:19,400
OK

214
00:09:19,400 --> 00:09:22,000
这就是这也是会之后说

215
00:09:22,000 --> 00:09:24,799
SSD怎么样做多尺度识别的时候

216
00:09:24,840 --> 00:09:27,799
到底size是怎么取的

217
00:09:27,799 --> 00:09:29,600
这里给一个直观上的解释

218
00:09:29,600 --> 00:09:31,799
OK

219
00:09:34,039 --> 00:09:37,200
接下来我们就直接跳到SSD的实现

220
00:09:38,759 --> 00:09:40,200
就我们这个是一个相对来说

221
00:09:40,200 --> 00:09:41,799
比较简单的notebook

222
00:09:41,840 --> 00:09:44,279
我们就直接跳到

223
00:09:44,919 --> 00:09:46,120
SSD的实现

224
00:09:46,759 --> 00:09:48,360
相对来说实现

225
00:09:48,720 --> 00:09:50,600
因为是目标检测

226
00:09:50,720 --> 00:09:54,240
相对来说比图片识别稍微复杂一点点

227
00:09:54,440 --> 00:09:56,560
所以我们尽量给大家解释清楚

