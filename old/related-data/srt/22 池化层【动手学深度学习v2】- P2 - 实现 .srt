1
00:00:00,000 --> 00:00:05,879
OK 我们来首先来看一下我们怎么样来实现一个实话层

2
00:00:06,640 --> 00:00:11,759
就是我们首先实现成话层的正向传播的函数怎么做

3
00:00:12,120 --> 00:00:14,320
我们定一个函数叫Poor2D

4
00:00:15,160 --> 00:00:17,080
然后你的X是你的输入

5
00:00:18,080 --> 00:00:21,320
那PoorSize就是你的你那个窗口的大小

6
00:00:22,000 --> 00:00:26,280
让你的Mode你可以说我是Max或者我是AverageAVG

7
00:00:27,480 --> 00:00:29,400
那我们就看一下怎么实现它

8
00:00:29,400 --> 00:00:30,800
其实现在挺简单的对吧

9
00:00:30,800 --> 00:00:35,160
跟我们之前实现卷积层是一样的

10
00:00:35,760 --> 00:00:38,240
首先我们拿到我们PHPW

11
00:00:38,240 --> 00:00:41,400
就是实话的窗口的高和宽

12
00:00:42,359 --> 00:00:44,320
接下来我们创建我们的输出

13
00:00:44,960 --> 00:00:48,240
我们的输出就是跟这里我们就假设一个单通道

14
00:00:48,240 --> 00:00:51,120
就跟之前我们算卷积是一样的

15
00:00:51,160 --> 00:00:53,120
就等于是输入的高

16
00:00:53,400 --> 00:00:55,960
减去我的窗口的高

17
00:00:56,000 --> 00:00:56,880
再加上1

18
00:00:57,880 --> 00:01:00,200
我们有Straight就没有Padding

19
00:01:00,200 --> 00:01:00,840
没有Straight

20
00:01:01,760 --> 00:01:03,679
然后我的宽也是一样的

21
00:01:03,800 --> 00:01:06,240
就是减掉我的输入的宽

22
00:01:06,240 --> 00:01:07,879
减掉我的窗口的宽

23
00:01:07,879 --> 00:01:08,719
然后再加1

24
00:01:09,960 --> 00:01:12,480
然后你在做的时候也跟卷积是一样的

25
00:01:12,480 --> 00:01:13,920
你有两个For Loop在这里

26
00:01:14,200 --> 00:01:16,960
首先我们在高上面迭代

27
00:01:16,960 --> 00:01:18,120
就每行迭代

28
00:01:18,359 --> 00:01:20,320
然后在每列迭代

29
00:01:20,560 --> 00:01:24,040
然后我的Yij就等于X

30
00:01:25,000 --> 00:01:27,480
然后I到你窗口的高

31
00:01:28,320 --> 00:01:33,800
然后你的J就是你的列到窗口的宽

32
00:01:33,800 --> 00:01:34,880
就是哪一个区域

33
00:01:35,080 --> 00:01:37,719
然后拿出来之后我们取一个Max

34
00:01:38,400 --> 00:01:41,960
当你是最大伺化层的时候作用

35
00:01:42,400 --> 00:01:44,840
如果你是均值的话

36
00:01:44,840 --> 00:01:46,640
AVG的话就是等于命

37
00:01:46,640 --> 00:01:48,080
就返回一个命就是了

38
00:01:48,120 --> 00:01:48,600
对吧

39
00:01:48,960 --> 00:01:51,120
所以最后我们把Y返回回去

40
00:01:51,320 --> 00:01:53,160
这就是最简单的

41
00:01:53,200 --> 00:01:54,719
没有多通道

42
00:01:54,719 --> 00:01:56,040
没有Padding

43
00:01:56,040 --> 00:01:59,280
没有Straight的伺化层的实现

44
00:02:00,560 --> 00:02:01,840
跟我们之前解决的很像

45
00:02:04,359 --> 00:02:05,800
那么验证一下我们的值

46
00:02:06,120 --> 00:02:08,319
这个是说跟我们之前的

47
00:02:09,520 --> 00:02:11,280
slide里面写的是不是一样的

48
00:02:12,319 --> 00:02:15,159
就第一行是012345678

49
00:02:15,200 --> 00:02:16,759
返回的是4578

50
00:02:16,759 --> 00:02:17,000
对吧

51
00:02:17,000 --> 00:02:18,360
跟我们slide是一样的

52
00:02:18,960 --> 00:02:19,360
另外一个

53
00:02:19,360 --> 00:02:22,080
当然我可以把它替换成均值

54
00:02:22,320 --> 00:02:24,640
均值会看到是小了很多

55
00:02:24,920 --> 00:02:27,280
就是23就是4变2

56
00:02:27,280 --> 00:02:27,920
5变3

57
00:02:27,920 --> 00:02:28,880
7变5

58
00:02:28,920 --> 00:02:29,600
8变6

59
00:02:29,600 --> 00:02:32,160
就是平均基本上是小了2

60
00:02:33,120 --> 00:02:36,840
所以就是说平均值化成的输入

61
00:02:36,840 --> 00:02:39,640
通常值会比最大伺化层要小

62
00:02:39,840 --> 00:02:40,440
当然了

63
00:02:40,480 --> 00:02:42,640
因为你的均值永远是小于你的

64
00:02:42,640 --> 00:02:44,240
小于等于你的最大值了

65
00:02:46,000 --> 00:02:46,520
OK

66
00:02:47,320 --> 00:02:50,400
另外一个我们就是我们就不实现

67
00:02:50,400 --> 00:02:51,960
我们的填充和不符了

68
00:02:52,120 --> 00:02:54,280
我们就直接来看一下

69
00:02:54,280 --> 00:02:59,560
调用PyTorch里面的层来看一下

70
00:02:59,560 --> 00:03:00,520
我们实现的效果

71
00:03:01,800 --> 00:03:05,719
首先我们创建一个4×4的一个矩阵

72
00:03:05,760 --> 00:03:06,719
但是我们一样的

73
00:03:06,879 --> 00:03:08,320
这跟之前我们有多通道

74
00:03:08,439 --> 00:03:09,680
通道我们这里为1

75
00:03:09,719 --> 00:03:11,120
我们的p量大小是1

76
00:03:11,120 --> 00:03:12,840
所以我们就是一个简单

77
00:03:12,840 --> 00:03:14,520
为他就一个4×4的矩阵

78
00:03:16,520 --> 00:03:20,520
然后你然后调用你module里面的max

79
00:03:20,520 --> 00:03:21,439
pool2d

80
00:03:21,439 --> 00:03:23,320
就是max再放在前面

81
00:03:23,520 --> 00:03:24,920
然后pool就是pooling

82
00:03:25,000 --> 00:03:27,520
然后2d就是你的2d的东西

83
00:03:28,640 --> 00:03:34,680
3的意思就是你一个3×3的一个窗口

84
00:03:36,120 --> 00:03:40,920
然后因为你在框架里面

85
00:03:40,920 --> 00:03:45,280
取决于你们框架的实现了

86
00:03:45,280 --> 00:03:47,039
大家应该用的时候去看一下

87
00:03:47,039 --> 00:03:50,159
就是说你默认的padding和默认的

88
00:03:50,159 --> 00:03:52,400
stride是怎么设的

89
00:03:53,039 --> 00:03:54,120
这里我们有个注释

90
00:03:54,240 --> 00:03:55,400
其实我还没仔细看过

91
00:03:55,439 --> 00:03:56,520
是不是这样

92
00:03:56,520 --> 00:03:57,639
大家可以去验证一下

93
00:03:58,000 --> 00:03:59,920
PyTorch的不符合

94
00:03:59,920 --> 00:04:02,080
此话窗口的大小是相同的

95
00:04:02,639 --> 00:04:03,800
相同意味着什么

96
00:04:03,960 --> 00:04:05,080
相同意味着是说

97
00:04:05,080 --> 00:04:06,639
你看完这个窗口之后

98
00:04:07,080 --> 00:04:09,680
你下一个窗口跟他是没有重叠的

99
00:04:10,879 --> 00:04:12,560
就是你看完这个窗口

100
00:04:12,599 --> 00:04:14,680
然后移到下一块

101
00:04:14,680 --> 00:04:16,879
下一块跟之前是没有任何重叠部分

102
00:04:17,280 --> 00:04:20,160
所以这就是不符合窗口大小相同

103
00:04:20,160 --> 00:04:20,959
意味着什么

104
00:04:21,240 --> 00:04:21,959
不管怎么样

105
00:04:21,959 --> 00:04:24,199
我们看到是这个地方

106
00:04:24,240 --> 00:04:26,759
如果你是一个4×4的话

107
00:04:26,759 --> 00:04:28,240
你3×3的窗口

108
00:04:28,240 --> 00:04:31,879
那么就只会返回前面一个3×3矩阵了

109
00:04:31,920 --> 00:04:32,879
最大就是10

110
00:04:33,000 --> 00:04:34,240
下面可能就挑不了了

111
00:04:34,280 --> 00:04:35,519
因为后面不够了

112
00:04:35,639 --> 00:04:36,319
所以就没了

113
00:04:36,319 --> 00:04:37,079
就是一个

114
00:04:37,199 --> 00:04:38,759
就是一个标量了

115
00:04:38,759 --> 00:04:39,960
就是一个诚实的东西

116
00:04:40,799 --> 00:04:44,879
当然你可以手动指定了

117
00:04:45,120 --> 00:04:48,079
就是说我可以指定排领等于1

118
00:04:48,239 --> 00:04:49,439
stripe等于2

119
00:04:49,879 --> 00:04:52,519
当然它就是返回一个

120
00:04:53,519 --> 00:04:55,319
因为你前面加了两列

121
00:04:55,319 --> 00:04:56,639
stripe还是等于2的话

122
00:04:56,639 --> 00:04:57,399
3等于3的话

123
00:04:57,399 --> 00:04:58,839
刚好是一个2×2的矩阵

124
00:05:00,519 --> 00:05:01,199
最后的最后

125
00:05:01,199 --> 00:05:02,359
当然你可以说

126
00:05:02,399 --> 00:05:03,879
我可以不做方的

127
00:05:04,000 --> 00:05:05,279
我做一个扁的

128
00:05:05,599 --> 00:05:07,560
就是说我的窗口是2×3

129
00:05:07,800 --> 00:05:09,680
我的排领是1

130
00:05:09,680 --> 00:05:10,720
就排领是对称的

131
00:05:10,720 --> 00:05:11,360
我stripe的

132
00:05:11,360 --> 00:05:13,519
我说我跟窗口大小一样

133
00:05:13,519 --> 00:05:14,519
还是不充电

134
00:05:14,839 --> 00:05:16,680
所以这也是你可以自己可以设

135
00:05:16,680 --> 00:05:20,160
就是通过跟卷迹差不多的形式

136
00:05:20,160 --> 00:05:21,680
可以设padding和stripe

137
00:05:21,840 --> 00:05:23,560
第一个参数永远是你的

138
00:05:24,000 --> 00:05:25,360
窗口的大小

139
00:05:26,920 --> 00:05:27,439
行

140
00:05:28,879 --> 00:05:29,759
最后我们看一下

141
00:05:29,759 --> 00:05:32,759
就是说在每个通道上是怎么做的

142
00:05:33,639 --> 00:05:36,399
我们做一个2

143
00:05:36,440 --> 00:05:38,840
就3D的两个通道的东西出来

144
00:05:39,720 --> 00:05:40,440
双通道

145
00:05:40,440 --> 00:05:42,760
就是说第一个通道是之前

146
00:05:43,520 --> 00:05:45,280
第二个通道是我的x加1

147
00:05:47,640 --> 00:05:50,640
最后做出一个1×2×4×4的

148
00:05:51,520 --> 00:05:52,440
tensor出来

149
00:05:53,200 --> 00:05:54,640
然后我们还是用之前

150
00:05:54,760 --> 00:05:56,320
排领的1stripe等于2

151
00:05:56,680 --> 00:05:57,760
kernel size等于3

152
00:05:58,240 --> 00:05:59,480
可以看到是说

153
00:05:59,520 --> 00:06:01,640
那么这一个就是不变

154
00:06:01,640 --> 00:06:02,600
跟之前是不变的

155
00:06:02,600 --> 00:06:05,400
因为它直接作用在这个矩阵上

156
00:06:05,640 --> 00:06:07,640
跟前面我们这个样例是一样的

157
00:06:08,080 --> 00:06:09,360
这个数应该是一样的

158
00:06:10,040 --> 00:06:11,680
那么接下来就是说

159
00:06:12,200 --> 00:06:13,440
它的输出

160
00:06:14,760 --> 00:06:17,280
这个输出是直接通过

161
00:06:17,800 --> 00:06:19,640
第二个通道作用出来的

162
00:06:19,920 --> 00:06:21,280
可以看到第一个

163
00:06:21,440 --> 00:06:22,400
那就是

164
00:06:23,560 --> 00:06:24,280
但是

165
00:06:24,640 --> 00:06:25,560
排领等于1

166
00:06:25,720 --> 00:06:27,280
就是这里padd了两行

167
00:06:27,320 --> 00:06:28,720
然后所以你3×3

168
00:06:28,720 --> 00:06:31,600
其实只是看了一个2×2的自矩阵

169
00:06:31,680 --> 00:06:33,160
那么最大值是等于6的

170
00:06:33,440 --> 00:06:33,880
OK

171
00:06:34,120 --> 00:06:34,720
大家可以

172
00:06:34,720 --> 00:06:37,640
然后接下来你得跳2

173
00:06:37,960 --> 00:06:39,280
跳到这个地方

174
00:06:39,280 --> 00:06:40,720
然后就拿到一个8出来

175
00:06:40,720 --> 00:06:41,160
对吧

176
00:06:41,480 --> 00:06:42,080
所以

177
00:06:42,760 --> 00:06:43,560
通道

178
00:06:44,000 --> 00:06:44,840
第二个通道

179
00:06:44,840 --> 00:06:45,720
它的输出

180
00:06:45,720 --> 00:06:47,880
就是第二个通道的输入上面

181
00:06:47,880 --> 00:06:50,480
直接做我们之前定义的2d的

182
00:06:50,480 --> 00:06:51,840
pooling的结果

183
00:06:53,360 --> 00:06:53,680
好

184
00:06:53,680 --> 00:06:55,120
这就是我们的

185
00:06:55,680 --> 00:06:56,760
矽化层

