1
00:00:00,000 --> 00:00:03,000
问题11

2
00:00:03,000 --> 00:00:09,000
转制卷积得出来的结果的含义是什么

3
00:00:14,000 --> 00:00:17,000
我觉得你这个问题挺好的

4
00:00:20,000 --> 00:00:22,000
就是说

5
00:00:22,000 --> 00:00:24,000
就是说你可认为卷积是干嘛

6
00:00:24,000 --> 00:00:28,000
卷积就是去通过去匹配那个

7
00:00:28,000 --> 00:00:31,000
去识别那些local的模式对吧

8
00:00:31,000 --> 00:00:36,000
转制卷积你可以多多少少认为是说

9
00:00:36,000 --> 00:00:38,000
我在给了你说

10
00:00:38,000 --> 00:00:42,000
这一个像素它对应的模式是一只猫

11
00:00:42,000 --> 00:00:44,000
然后我的转制卷积就等于是说

12
00:00:44,000 --> 00:00:47,000
我告诉你这个像素在这一块是对于猫

13
00:00:47,000 --> 00:00:48,000
这个语音信息

14
00:00:48,000 --> 00:00:51,000
然后转制卷积就是把你这个东西真的变成一只猫

15
00:00:51,000 --> 00:00:56,000
你可以认为它多多少少想去干这个事情

16
00:00:56,000 --> 00:00:59,000
但是说你可以通过

17
00:01:01,000 --> 00:01:04,000
最简单就是说我的转制卷积最简单

18
00:01:04,000 --> 00:01:07,000
就是可以把一张可以实现是把一张图片变大

19
00:01:07,000 --> 00:01:09,000
对不对把它可以拉的很大

20
00:01:09,000 --> 00:01:11,000
所以我觉得

21
00:01:13,000 --> 00:01:17,000
含义这个东西就是说我们希望它能够干什么事情

22
00:01:17,000 --> 00:01:18,000
具体它能干什么事情

23
00:01:18,000 --> 00:01:21,000
这个反正它就是一个算法

24
00:01:21,000 --> 00:01:22,000
问题12

25
00:01:22,000 --> 00:01:25,000
转制卷积和反过来讲

26
00:01:25,000 --> 00:01:27,000
大家有什么更好的理解

27
00:01:27,000 --> 00:01:31,000
大家可以在留言里面给大家讲一讲

28
00:01:33,000 --> 00:01:35,000
转制卷积和反卷积有什么区别

29
00:01:35,000 --> 00:01:38,000
我觉得反卷积其实就是转制卷积

30
00:01:39,000 --> 00:01:43,000
反卷积是因为有些翻译翻译成反卷积

31
00:01:43,000 --> 00:01:47,000
我觉得我其实觉得他们两个应该是都是一个东西

32
00:01:48,000 --> 00:01:51,000
除非除非你的翻译就还有别的意思

33
00:01:51,000 --> 00:01:54,000
我知道有些人翻译成反卷积

34
00:01:54,000 --> 00:01:56,000
但我觉得是一个东西

35
00:01:57,000 --> 00:02:01,000
在上采用过程中还可以使用线性插值

36
00:02:01,000 --> 00:02:02,000
请问哪个更好

37
00:02:02,000 --> 00:02:04,000
这个问题挺好的

38
00:02:07,000 --> 00:02:11,000
就是说我们说当然说你可以上插值

39
00:02:11,000 --> 00:02:18,000
但是它就转制剪辑能够学出全用时的实现线性插值拉大的效果

40
00:02:18,000 --> 00:02:20,000
但它可以做更多

41
00:02:20,000 --> 00:02:22,000
你要想在做语音分割的时候

42
00:02:22,000 --> 00:02:26,000
我们并不是去让你去插值

43
00:02:27,000 --> 00:02:28,000
对吧

44
00:02:28,000 --> 00:02:30,000
语音分割它不仅仅是有个插值的效果

45
00:02:30,000 --> 00:02:33,000
它还要做一次语意的转换

46
00:02:33,000 --> 00:02:35,000
就标号的语意转换的过程

47
00:02:35,000 --> 00:02:39,000
但我们可以看到是我们会在明天的课里面的

48
00:02:39,000 --> 00:02:42,000
那个样式签译里面给大家讲说

49
00:02:42,000 --> 00:02:47,000
你可以通过用线性插值来初始化你的转制卷积

50
00:02:47,000 --> 00:02:48,000
那个和

51
00:02:48,000 --> 00:02:51,000
使得你可能得到更好的初始化效果

52
00:02:51,000 --> 00:02:53,000
假设你就是要放大图片的话

53
00:02:56,000 --> 00:02:58,000
通道如何理解啊

54
00:02:58,000 --> 00:02:59,000
通道如何理解

55
00:02:59,000 --> 00:03:02,000
大家去看一下我们之前的讲卷积的多通道啊

56
00:03:02,000 --> 00:03:04,000
我们有讲过很多

57
00:03:06,000 --> 00:03:09,000
15很难理解语意分割

58
00:03:09,000 --> 00:03:14,000
一开始用卷积不断做压缩提取特征全局特征

59
00:03:14,000 --> 00:03:18,000
然后用转制卷局恢复到输出一样的大小

60
00:03:18,000 --> 00:03:21,000
转制卷局这样子局部恢复不就丢掉了

61
00:03:21,000 --> 00:03:25,000
然后语意分割效果就不好了

62
00:03:28,000 --> 00:03:30,000
其实其实其实也没有啊

63
00:03:31,000 --> 00:03:35,000
就是语意分割你不是要还原成原图

64
00:03:35,000 --> 00:03:37,000
但你也能还原成原图

65
00:03:37,000 --> 00:03:39,000
为什么你卷积能够还原出回去

66
00:03:39,000 --> 00:03:41,000
是因为你有通道啊

67
00:03:41,000 --> 00:03:44,000
就是说你在高宽的地方压缩

68
00:03:44,000 --> 00:03:45,000
但是你的信息

69
00:03:45,000 --> 00:03:47,000
但是你有更多通道了

70
00:03:47,000 --> 00:03:49,000
之前你的RGB是三个通道

71
00:03:49,000 --> 00:03:52,000
现在你变成512或者1024个通道

72
00:03:52,000 --> 00:03:54,000
所以你的信息没有太损失

73
00:03:54,000 --> 00:03:58,000
你的信息只是说没有你的空间分辨率下降了

74
00:03:58,000 --> 00:03:59,000
但是你的通道

75
00:03:59,000 --> 00:04:00,000
你的特征维度是增加了

76
00:04:00,000 --> 00:04:02,000
所以你的信息是存在那里的

77
00:04:03,000 --> 00:04:06,000
第二个是说语意分割这个事情啊

78
00:04:06,000 --> 00:04:09,000
你不是还原图片还原图片一样的

79
00:04:09,000 --> 00:04:10,000
我们等会看语意

80
00:04:10,000 --> 00:04:11,000
就是说啊

81
00:04:14,000 --> 00:04:15,000
还原图片你是一样的可以做

82
00:04:15,000 --> 00:04:18,000
但是呢语意分割这个事情你要的是标号

83
00:04:19,000 --> 00:04:20,000
标号这个东西

84
00:04:20,000 --> 00:04:22,000
你不是每个像素都在变的

85
00:04:22,000 --> 00:04:25,000
标号是一个somewhat连续的过程

86
00:04:25,000 --> 00:04:26,000
就是说这一块

87
00:04:26,000 --> 00:04:29,000
就这一块脸这个地方都是属于一块脸啊

88
00:04:29,000 --> 00:04:33,000
所以你可以认为在卷积里面

89
00:04:33,000 --> 00:04:34,000
卷积会去多少看

90
00:04:34,000 --> 00:04:36,000
这些像素慢慢的summarize

91
00:04:36,000 --> 00:04:37,000
然后就是说

92
00:04:37,000 --> 00:04:40,000
说每一个通道可能说这一块对那是一个脸

93
00:04:40,000 --> 00:04:41,000
这一块也是脸

94
00:04:41,000 --> 00:04:44,000
就是说你在不同的通道里面

95
00:04:44,000 --> 00:04:47,000
会去把这些空间信息全部存在里面

96
00:04:47,000 --> 00:04:48,000
虽然你的高宽变小了

97
00:04:48,000 --> 00:04:50,000
但是他是做了一下总结

98
00:04:50,000 --> 00:04:52,000
然后你还是能够回去了

99
00:04:52,000 --> 00:04:55,000
这还是你可以通过把通道压别

100
00:04:55,000 --> 00:04:57,000
然后高宽压拉大拉回去了

101
00:04:57,000 --> 00:05:00,000
所以就是说你的局部信息啊

102
00:05:00,000 --> 00:05:04,000
你只能说你的feature map的高宽变小了啊

103
00:05:04,000 --> 00:05:06,000
但是你的局部信息

104
00:05:06,000 --> 00:05:07,000
其实你不需要

105
00:05:07,000 --> 00:05:10,000
就是你的这boundary不见得就丢失掉了

106
00:05:11,000 --> 00:05:12,000
OK

107
00:05:12,000 --> 00:05:14,000
因为你的通道有很多东西了

108
00:05:14,000 --> 00:05:15,000
哦

109
00:05:15,000 --> 00:05:17,000
你觉得为什么不图片变大

110
00:05:17,000 --> 00:05:18,000
就是因为

111
00:05:18,000 --> 00:05:21,000
就是因为我们要做对每个像素做pixel的

112
00:05:21,000 --> 00:05:23,000
预测啊

113
00:05:23,000 --> 00:05:26,000
就是说你需要得到每一个像素的信息

114
00:05:26,000 --> 00:05:29,000
所以我们一个办法是把这个图片拉回原来大小

115
00:05:29,000 --> 00:05:31,000
然后对每个feature map做prediction

116
00:05:31,000 --> 00:05:34,000
我们明天可以看到他怎么用的啊

117
00:05:34,000 --> 00:05:36,000
就我们明天看一下怎么用了

118
00:05:37,000 --> 00:05:38,000
就一般来说

119
00:05:38,000 --> 00:05:42,000
如果你想得到每个标号的啊

120
00:05:42,000 --> 00:05:43,000
每个像素级别的标号的话

121
00:05:43,000 --> 00:05:45,000
大家通常是用转制卷积

122
00:05:49,000 --> 00:05:51,000
就转制剪辑是如何把卷积还原

123
00:05:51,000 --> 00:05:53,000
转制剪辑不是还原啊

124
00:05:53,000 --> 00:05:57,000
我们刚刚只是说转制卷积会把卷积

125
00:05:57,000 --> 00:05:59,000
那个形状发生变化

126
00:05:59,000 --> 00:06:02,000
但是它的值不是还原关系啊

127
00:06:02,000 --> 00:06:04,000
我们并没有说

128
00:06:04,000 --> 00:06:06,000
给定一个k

129
00:06:06,000 --> 00:06:08,000
给定个x

130
00:06:08,000 --> 00:06:11,000
就k和x做完卷积得到y

131
00:06:11,000 --> 00:06:15,000
但y和k做转制卷积还原不到x

132
00:06:18,000 --> 00:06:21,000
就是说当你可以通过构造合适的k

133
00:06:21,000 --> 00:06:22,000
也许是能还原回去

134
00:06:22,000 --> 00:06:23,000
但是呢

135
00:06:23,000 --> 00:06:26,000
我们转制卷积不是去还原卷积

136
00:06:26,000 --> 00:06:30,000
就不是想去还原出卷积之前的输出的那个值

137
00:06:30,000 --> 00:06:32,000
只是说我们可以把通

138
00:06:32,000 --> 00:06:35,000
把那个形状还原成以前那个形状

139
00:06:36,000 --> 00:06:37,000
所以

140
00:06:39,000 --> 00:06:40,000
不是还原值

141
00:06:40,000 --> 00:06:41,000
只是形状的一个map

142
00:06:41,000 --> 00:06:42,000
你可以认为

143
00:06:45,000 --> 00:06:46,000
问题18

144
00:06:46,000 --> 00:06:48,000
转制卷积可以理解一张图片

145
00:06:48,000 --> 00:06:51,000
通过一个实现模糊的颗脑做卷积得到图片

146
00:06:51,000 --> 00:06:52,000
但要原来的

147
00:06:52,000 --> 00:06:54,000
就是还原原来图片

148
00:06:54,000 --> 00:06:57,000
就是说转制卷积确实你可以说

149
00:06:57,000 --> 00:06:59,000
我可以还原

150
00:06:59,000 --> 00:07:01,000
可以可以可以用来

151
00:07:01,000 --> 00:07:03,000
就是说转转制卷积

152
00:07:03,000 --> 00:07:07,000
你可以通过去学习合适的参数

153
00:07:07,000 --> 00:07:09,000
来去做一个还原操作

154
00:07:09,000 --> 00:07:10,000
你可以通过

155
00:07:10,000 --> 00:07:12,000
因为他参数可以学的

156
00:07:12,000 --> 00:07:13,000
但是

157
00:07:15,000 --> 00:07:17,000
但是他不是用来去还原图片

158
00:07:17,000 --> 00:07:18,000
还是说

159
00:07:18,000 --> 00:07:20,000
我们明天会看到说

160
00:07:20,000 --> 00:07:21,000
我们不是去还

161
00:07:21,000 --> 00:07:22,000
我们要去

162
00:07:22,000 --> 00:07:24,000
我们刚刚那个鱼分割干嘛

163
00:07:24,000 --> 00:07:27,000
鱼分割是要对每个像素做label的预测

164
00:07:27,000 --> 00:07:28,000
所以转制卷积

165
00:07:28,000 --> 00:07:31,000
唯一的目的就是去去预测

166
00:07:31,000 --> 00:07:33,000
每一个像素对应的标号

167
00:07:33,000 --> 00:07:35,000
他不是去预测

168
00:07:35,000 --> 00:07:38,000
原来图片每个像素的RGB值

169
00:07:38,000 --> 00:07:39,000
所以他不是还原

170
00:07:39,000 --> 00:07:40,000
OK

171
00:07:41,000 --> 00:07:42,000
但是说你可以说

172
00:07:42,000 --> 00:07:45,000
这种shuffle采样就上采样

173
00:07:45,000 --> 00:07:46,000
转制卷积

174
00:07:46,000 --> 00:07:48,000
他不算是做上采样

175
00:07:50,000 --> 00:07:54,000
OK他只是要得到一个pixel label的输出

176
00:07:54,000 --> 00:07:56,000
具体输出是什么样子

177
00:07:56,000 --> 00:07:57,000
你可以说我要可以

178
00:07:57,000 --> 00:07:59,000
可以学到权重来做上采样

179
00:07:59,000 --> 00:08:00,000
可以说

180
00:08:02,000 --> 00:08:03,000
不选

181
00:08:03,000 --> 00:08:04,000
不做这个事情

182
00:08:04,000 --> 00:08:05,000
问题20

183
00:08:05,000 --> 00:08:07,000
转卷积加转制卷积

184
00:08:07,000 --> 00:08:08,000
是不是有一点

185
00:08:08,000 --> 00:08:09,000
incode decode的感觉

186
00:08:09,000 --> 00:08:10,000
是的

187
00:08:10,000 --> 00:08:11,000
你可以这么觉得

188
00:08:11,000 --> 00:08:12,000
你可以这么觉得

189
00:08:12,000 --> 00:08:13,000
是的

190
00:08:16,000 --> 00:08:17,000
你可以

191
00:08:17,000 --> 00:08:19,000
我们之后会讲

192
00:08:19,000 --> 00:08:21,000
就是说incode decode

193
00:08:21,000 --> 00:08:22,000
你可以觉得是有一点

194
00:08:22,000 --> 00:08:23,000
这个效果了

195
00:08:23,000 --> 00:08:25,000
确实是这样子的

196
00:08:25,000 --> 00:08:27,000
小图片放大或者图片模糊

197
00:08:27,000 --> 00:08:29,000
细化是用转制卷积做的吗

198
00:08:29,000 --> 00:08:30,000
就是你是说图片的

199
00:08:30,000 --> 00:08:31,000
就是说超分辨率

200
00:08:31,000 --> 00:08:33,000
super resolution

201
00:08:33,000 --> 00:08:35,000
super resolution有用卷积做的

202
00:08:35,000 --> 00:08:37,000
有用转制卷积做的

203
00:08:37,000 --> 00:08:38,000
是有的

204
00:08:39,000 --> 00:08:40,000
你可以看

205
00:08:40,000 --> 00:08:41,000
super resolution我们也没讲

206
00:08:41,000 --> 00:08:43,000
就是也是一个挺好玩的一个应用

207
00:08:43,000 --> 00:08:44,000
就是说我给你一张

208
00:08:44,000 --> 00:08:46,000
128x128的图片

209
00:08:46,000 --> 00:08:47,000
你给我还原成一张

210
00:08:47,000 --> 00:08:49,000
1024x1024的图片

211
00:08:49,000 --> 00:08:50,000
而且效果挺好的

212
00:08:50,000 --> 00:08:53,000
就是说你是你是通过大量图片

213
00:08:53,000 --> 00:08:56,000
去学会怎么样去去补那些细节

214
00:08:56,000 --> 00:09:00,000
评估一个硬件平台

215
00:09:00,000 --> 00:09:01,000
能不能做

216
00:09:01,000 --> 00:09:04,000
分割算法应该送哪些

217
00:09:04,000 --> 00:09:06,000
就是说

218
00:09:06,000 --> 00:09:08,000
你会认为分割算法

219
00:09:08,000 --> 00:09:10,000
其实本质上是一个CN

220
00:09:10,000 --> 00:09:11,000
我们明天会看到

221
00:09:11,000 --> 00:09:12,000
就是说本质于取决

222
00:09:12,000 --> 00:09:14,000
你用什么backbone

223
00:09:14,000 --> 00:09:15,000
就本质取决

224
00:09:15,000 --> 00:09:17,000
你那个CN的模型的性能怎么样

225
00:09:17,000 --> 00:09:22,000
就你认为他不会比你的图片分类贵太多

226
00:09:22,000 --> 00:09:24,000
因为他的那个CN

227
00:09:24,000 --> 00:09:26,000
其实是大家都是长一样

228
00:09:26,000 --> 00:09:28,000
所以你就是说你应该去看说

229
00:09:28,000 --> 00:09:31,000
什么样的CN来运行在哪个平台上面

230
00:09:31,000 --> 00:09:33,000
就NVIDIA NX是一个很好的平台

231
00:09:33,000 --> 00:09:34,000
当然可以做

232
00:09:34,000 --> 00:09:36,000
绝对没问题的

233
00:09:36,000 --> 00:09:38,000
这很很好的都能做

234
00:09:38,000 --> 00:09:41,000
就是说但取决你要做多大的图片

235
00:09:41,000 --> 00:09:44,000
预分都可以做做很大

236
00:09:44,000 --> 00:09:47,000
然后你要是不是要做到每秒做真

237
00:09:47,000 --> 00:09:48,000
要不要做实时

238
00:09:48,000 --> 00:09:49,000
这些东西

239
00:09:49,000 --> 00:09:51,000
但我觉得你主要可以去看

240
00:09:51,000 --> 00:09:53,000
主要是看那个CN的模型的性能

241
00:09:53,000 --> 00:09:54,000
谢谢大家

