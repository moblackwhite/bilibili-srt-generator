1
00:00:00,000 --> 00:00:02,640
我们再快速给大家讲一下

2
00:00:02,640 --> 00:00:05,320
就在代码上编码器解码器

3
00:00:05,320 --> 00:00:07,480
你可以用个什么样的API来实现

4
00:00:07,839 --> 00:00:08,279
OK

5
00:00:08,279 --> 00:00:09,480
其实也挺简单的

6
00:00:09,480 --> 00:00:10,919
就是说你的encoder

7
00:00:11,240 --> 00:00:13,919
就是说它继承自于NN的模具

8
00:00:14,280 --> 00:00:15,240
它干什么事情

9
00:00:16,000 --> 00:00:18,120
它其实就是一个正常的网络

10
00:00:18,120 --> 00:00:18,559
对吧

11
00:00:18,679 --> 00:00:20,440
给我一个x

12
00:00:21,440 --> 00:00:23,719
我会输出一个你的状态就行了

13
00:00:23,719 --> 00:00:25,120
就我们正常是这么做的

14
00:00:25,120 --> 00:00:26,519
所以它就是一个很简单的

15
00:00:26,519 --> 00:00:28,679
我们之前都长这样的东西

16
00:00:29,359 --> 00:00:31,519
主要是解码器

17
00:00:33,079 --> 00:00:33,840
解码器

18
00:00:34,079 --> 00:00:34,880
首先解码器

19
00:00:35,039 --> 00:00:37,280
你可以认为它有个中间的状态

20
00:00:37,280 --> 00:00:39,079
就是说编码器的东西

21
00:00:39,200 --> 00:00:40,679
怎么样传给它

22
00:00:41,560 --> 00:00:42,840
然后你可以看到传给它

23
00:00:42,840 --> 00:00:43,359
就是说

24
00:00:43,359 --> 00:00:45,000
这个是你的encoder

25
00:00:45,000 --> 00:00:46,200
所谓的输出

26
00:00:46,760 --> 00:00:49,159
它拿到encoder的输出

27
00:00:49,359 --> 00:00:50,000
encoder输入

28
00:00:50,000 --> 00:00:50,840
如果是NN的话

29
00:00:50,840 --> 00:00:52,840
你有输出和你的状态

30
00:00:52,840 --> 00:00:53,480
两种都有

31
00:00:54,159 --> 00:00:56,200
然后你去初始化你的状态

32
00:00:56,200 --> 00:00:57,519
就是说把你的encoder

33
00:00:57,520 --> 00:00:58,880
那边拿东西记下来

34
00:00:58,880 --> 00:01:00,640
然后看看转成你要的形式

35
00:01:00,680 --> 00:01:02,600
就是init state

36
00:01:03,920 --> 00:01:05,719
然后解码器它是干嘛

37
00:01:05,840 --> 00:01:06,879
它可以

38
00:01:07,799 --> 00:01:10,680
然后它可以来一个额外的输入

39
00:01:10,960 --> 00:01:11,240
对吧

40
00:01:11,240 --> 00:01:11,960
输入x

41
00:01:11,960 --> 00:01:13,200
它自己有自己的输入

42
00:01:13,439 --> 00:01:15,200
这个state就是它自己

43
00:01:15,200 --> 00:01:17,520
它一开始要拿从encoder那里拿过来

44
00:01:17,920 --> 00:01:20,040
之后可以不断的更新这些state

45
00:01:20,040 --> 00:01:23,200
就是说用来维护跟之前看到的东西

46
00:01:23,240 --> 00:01:24,600
然后这样子做输出

47
00:01:24,960 --> 00:01:25,520
OK

48
00:01:25,519 --> 00:01:27,920
所以就是编码器和解码器的架构

49
00:01:27,959 --> 00:01:29,679
然后如果你把它做一个网络

50
00:01:29,679 --> 00:01:30,519
把它放在一起

51
00:01:30,719 --> 00:01:31,519
就是说你的

52
00:01:31,759 --> 00:01:33,640
完整的网络是有两个东西

53
00:01:33,640 --> 00:01:34,599
一个是encoder

54
00:01:34,599 --> 00:01:35,719
一个是一个decoder

55
00:01:37,039 --> 00:01:38,840
然后你的做forward的时候

56
00:01:38,840 --> 00:01:40,319
其实你有encoder有输入

57
00:01:40,640 --> 00:01:42,039
decoder也有输入

58
00:01:42,719 --> 00:01:44,599
然后你的编码器输入的话

59
00:01:44,599 --> 00:01:45,679
你就是你看

60
00:01:45,799 --> 00:01:46,439
就是

61
00:01:46,679 --> 00:01:50,759
encoder输入编码器的输入给它

62
00:01:50,959 --> 00:01:53,239
它会变成编码器的输出

63
00:01:53,960 --> 00:01:56,800
然后你就把编码器的输出

64
00:01:58,160 --> 00:02:01,160
拿到解码器的init state里面

65
00:02:02,000 --> 00:02:04,640
变成了解码器的状态

66
00:02:05,760 --> 00:02:07,120
然后在解码器的时候

67
00:02:07,120 --> 00:02:09,520
把解码器的输入和state

68
00:02:09,560 --> 00:02:10,600
全部拿进去

69
00:02:10,600 --> 00:02:12,600
然后得到最终的输出

70
00:02:13,920 --> 00:02:14,480
OK

71
00:02:14,640 --> 00:02:15,920
所以基本上就是说

72
00:02:16,120 --> 00:02:17,640
编码器解码器的架构

73
00:02:17,640 --> 00:02:18,560
就长这样子

74
00:02:18,840 --> 00:02:20,960
唯一的是说你要去

75
00:02:21,280 --> 00:02:22,680
这个模型就是固定住了

76
00:02:22,680 --> 00:02:23,520
就不会变了

77
00:02:23,520 --> 00:02:24,879
但你唯一的是说

78
00:02:25,159 --> 00:02:26,920
我不同的实现里面

79
00:02:26,920 --> 00:02:28,400
我怎么样做forward

80
00:02:28,800 --> 00:02:30,800
怎么样我来出时候的状态

81
00:02:31,360 --> 00:02:31,680
OK

82
00:02:31,680 --> 00:02:35,080
这就是我们之后会讲几个例子来讲

83
00:02:35,080 --> 00:02:37,080
说具体怎么样实现你的

84
00:02:37,080 --> 00:02:38,159
encoder decoder

85
00:02:38,159 --> 00:02:40,240
在接下来就是NLP这一块

86
00:02:40,360 --> 00:02:42,760
基本上都是用这个架构来实现的

