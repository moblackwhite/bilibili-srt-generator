1
00:00:00,000 --> 00:00:04,160
最后我们来看一下怎么样读写文件

2
00:00:04,160 --> 00:00:07,640
就是说你训练好的东西怎么样存下来

3
00:00:08,080 --> 00:00:09,519
这个也是很关键的一个事情

4
00:00:09,519 --> 00:00:14,759
首先我们看一下怎么样存一个矩阵

5
00:00:15,599 --> 00:00:18,600
我们就是说这里就是我们构造一个range

6
00:00:18,800 --> 00:00:20,519
一个常规色的一个向量

7
00:00:21,000 --> 00:00:22,960
然后我们要touch点save

8
00:00:23,719 --> 00:00:28,080
把这个矩阵就是这个向量了

9
00:00:28,080 --> 00:00:29,240
存在这个文件

10
00:00:29,240 --> 00:00:31,800
就是这个文件的名字叫x-file

11
00:00:31,800 --> 00:00:34,160
它就会当前目录下存下来

12
00:00:35,359 --> 00:00:37,200
接下来你可以把它load进来

13
00:00:37,200 --> 00:00:37,560
对吧

14
00:00:38,120 --> 00:00:40,000
你用touch点load

15
00:00:40,400 --> 00:00:43,320
它会返回一个也是一个tensor

16
00:00:43,520 --> 00:00:44,560
你打印一下XR

17
00:00:44,560 --> 00:00:46,840
那应该是跟X是一样的东西了

18
00:00:46,840 --> 00:00:47,960
就是013

19
00:00:52,400 --> 00:00:55,719
然后接下来你可以说我可以存一个list

20
00:00:55,879 --> 00:00:59,280
就是说我不仅仅存一个单一的一个tensor

21
00:00:59,280 --> 00:01:00,320
我就是存一个list

22
00:01:00,320 --> 00:01:02,320
就是说这个里面有个X和Y

23
00:01:03,439 --> 00:01:05,000
我们存下去之后

24
00:01:05,000 --> 00:01:06,000
我们load的时候

25
00:01:06,000 --> 00:01:08,039
它就会返回一个listXY

26
00:01:08,640 --> 00:01:11,079
我们把它放在XR和YR里面

27
00:01:11,319 --> 00:01:12,280
把它打印出来

28
00:01:12,519 --> 00:01:14,439
它就是第一个X是我们之前的

29
00:01:14,799 --> 00:01:16,319
Y就是我们的全名

30
00:01:18,439 --> 00:01:19,519
当然是说你要list

31
00:01:19,519 --> 00:01:22,159
那支持一个字典也是很正常的

32
00:01:22,840 --> 00:01:24,319
那就是说我构造一个字典

33
00:01:24,800 --> 00:01:29,080
X对应的是我的X的矩阵

34
00:01:29,080 --> 00:01:31,920
Y对应的是Y的tensor

35
00:01:32,160 --> 00:01:34,520
然后我们把dictionary给存起来

36
00:01:34,520 --> 00:01:35,920
存在mydic里面

37
00:01:36,680 --> 00:01:37,600
load回来之后

38
00:01:37,600 --> 00:01:38,720
你可以看到是load回来

39
00:01:38,720 --> 00:01:40,080
是我们一样的一个dictionary

40
00:01:40,680 --> 00:01:41,240
OK

41
00:01:41,400 --> 00:01:44,840
这就是说怎么样通过touchsave和load

42
00:01:44,840 --> 00:01:48,480
做一个单个tensor的存储和读取

43
00:01:48,480 --> 00:01:49,680
一个list也可以

44
00:01:49,680 --> 00:01:51,280
一个dictionary也可以

45
00:01:51,560 --> 00:01:54,000
这就是一个最简单的存储

46
00:01:54,320 --> 00:01:59,680
那么接下来就是说

47
00:02:01,400 --> 00:02:02,280
MLP

48
00:02:02,640 --> 00:02:04,720
再说我有一个MLP的话怎么办

49
00:02:05,480 --> 00:02:06,920
首先你要想一下

50
00:02:06,920 --> 00:02:09,719
我对一个神机网络我要存什么东西

51
00:02:11,960 --> 00:02:12,680
就是说

52
00:02:13,319 --> 00:02:14,360
因为是PyTorch

53
00:02:15,400 --> 00:02:17,520
因为它是用的imperative的话

54
00:02:17,640 --> 00:02:21,280
它不方便把整个网络的模型存下来

55
00:02:21,439 --> 00:02:23,360
所以它是有一定的局限性

56
00:02:23,360 --> 00:02:25,800
它跟Tensorflow或者MSNet不一样一点

57
00:02:25,840 --> 00:02:29,440
它不能把整个模型的定义给存下来

58
00:02:29,480 --> 00:02:30,760
它有别的办法存

59
00:02:30,880 --> 00:02:32,440
我们这里就不详细介绍

60
00:02:32,480 --> 00:02:33,920
比如说touchscript可以存

61
00:02:34,720 --> 00:02:35,640
我们就是说

62
00:02:35,960 --> 00:02:38,840
这不详细介绍的话

63
00:02:38,880 --> 00:02:40,600
那么对这样子的话

64
00:02:40,600 --> 00:02:41,520
我们要存的

65
00:02:41,520 --> 00:02:44,560
其实我们只要把它的权重给存下来就行了

66
00:02:44,680 --> 00:02:46,080
计算那一部分就不存了

67
00:02:46,520 --> 00:02:48,520
所以我们这样跟之前一样

68
00:02:48,800 --> 00:02:50,200
定义一个MLP

69
00:02:50,360 --> 00:02:51,480
它有两个先行层

70
00:02:51,520 --> 00:02:52,880
forward我们就不管了

71
00:02:52,960 --> 00:02:53,719
跟之前一样

72
00:02:53,840 --> 00:02:56,840
这也是说测试一下这个东西是不是对的

73
00:02:57,439 --> 00:02:59,599
我们是说给定一个随机的x

74
00:02:59,639 --> 00:03:00,759
我们放进来

75
00:03:01,280 --> 00:03:03,079
计算一个y我们之后会用

76
00:03:06,079 --> 00:03:08,039
然后我们怎么存

77
00:03:08,240 --> 00:03:10,800
记得我们是可以通过state

78
00:03:10,800 --> 00:03:14,199
dict来得到所有的parameter

79
00:03:14,319 --> 00:03:19,199
它的一个字符串到它的parameter的一个映射

80
00:03:19,919 --> 00:03:21,919
我们就把state dict拿出来

81
00:03:23,000 --> 00:03:26,280
然后把它用touchsave跟之前的一样的API

82
00:03:26,280 --> 00:03:28,039
存在我们的parameter里面

83
00:03:28,759 --> 00:03:29,280
OK

84
00:03:29,519 --> 00:03:33,400
这就是说把我整个MLP里面所有的参数

85
00:03:33,400 --> 00:03:36,240
存成一个字典

86
00:03:36,359 --> 00:03:39,639
这个字典是参数名字到后面的一个映射

87
00:03:42,719 --> 00:03:43,280
OK

88
00:03:43,960 --> 00:03:45,919
我们怎么load回来呢

89
00:03:46,800 --> 00:03:48,639
load回来这里注意一下

90
00:03:49,079 --> 00:03:50,680
我们是需要

91
00:03:51,040 --> 00:03:55,120
就是说假设你真的用在别的地方的话

92
00:03:55,120 --> 00:03:58,240
你不仅要把你点primes

93
00:03:58,240 --> 00:04:01,200
就是说我存的参数的文件给带走

94
00:04:01,240 --> 00:04:04,000
你还得把MLP的定义给带走

95
00:04:04,280 --> 00:04:07,000
因为你首先得声明一下MLP

96
00:04:07,560 --> 00:04:09,120
把网络给生成出来

97
00:04:09,640 --> 00:04:12,040
在这里面的参数已经被随机舒适化了

98
00:04:12,840 --> 00:04:14,640
就是说这个我们但是我们不用管

99
00:04:14,800 --> 00:04:18,399
接下来我们是说要用node state dict

100
00:04:19,399 --> 00:04:22,079
来把这个东西

101
00:04:23,719 --> 00:04:26,199
从文件里面读出来字典

102
00:04:26,239 --> 00:04:27,000
放进去

103
00:04:27,000 --> 00:04:30,519
就是overwrite掉我们自己初始化的东西

104
00:04:31,399 --> 00:04:33,479
也就意味着说跟之前一样的

105
00:04:33,479 --> 00:04:34,959
我们拿到一个定义

106
00:04:35,000 --> 00:04:39,519
然后把我们存在字盘上的参数

107
00:04:40,839 --> 00:04:42,479
写回到我们的网络

108
00:04:43,959 --> 00:04:44,519
OK

109
00:04:45,239 --> 00:04:46,599
然后我们还有一个

110
00:04:47,320 --> 00:04:48,520
可以看一下这个函数

111
00:04:48,520 --> 00:04:50,480
就是说就会长成这个样子

112
00:04:51,120 --> 00:04:54,160
那么我们怎么去验证一下

113
00:04:54,280 --> 00:04:55,160
验证也挺简单

114
00:04:55,160 --> 00:04:55,439
对吧

115
00:04:55,439 --> 00:04:59,879
我们对clone这个网络

116
00:05:00,200 --> 00:05:02,480
然后输入到同样的跟之前一样

117
00:05:02,720 --> 00:05:04,879
随机x拿到它的y

118
00:05:04,920 --> 00:05:08,480
跟我们之前存之前的结果比一下

119
00:05:08,480 --> 00:05:10,760
你可以看到是应该是都是相等的

120
00:05:11,160 --> 00:05:13,080
所以这个意味着说

121
00:05:13,120 --> 00:05:15,439
clone这一个

122
00:05:15,479 --> 00:05:18,599
它跟之前的参数是一样的

123
00:05:18,879 --> 00:05:22,519
它因为它是来自于同一个类的实例

124
00:05:22,519 --> 00:05:23,879
所以它的计算也是一样的

125
00:05:24,000 --> 00:05:25,959
理论上这两个网络就是一样的

126
00:05:25,959 --> 00:05:27,319
那就是完成了一次

127
00:05:27,360 --> 00:05:31,159
模型到字盘的存取和读回来的一个操作

128
00:05:32,519 --> 00:05:33,039
OK

129
00:05:34,479 --> 00:05:34,759
好

130
00:05:34,759 --> 00:05:37,919
这就是我们的模型的读取

131
00:05:37,959 --> 00:05:39,199
其实也就挺简单

132
00:05:39,199 --> 00:05:39,680
对吧

133
00:05:39,719 --> 00:05:42,360
就是通过save和node这个函数

134
00:05:42,360 --> 00:05:45,800
可以对一些tensor进行读取

135
00:05:45,840 --> 00:05:47,280
然后对于网络的话

136
00:05:47,400 --> 00:05:49,080
就是拿到state

137
00:05:49,080 --> 00:05:49,680
dict

138
00:05:49,680 --> 00:05:50,800
拿到所有的参数

139
00:05:50,800 --> 00:05:53,040
然后把它存回去

140
00:05:53,040 --> 00:05:54,199
最后我们要读的话

141
00:05:54,199 --> 00:05:55,480
我们先把参数读回来

142
00:05:55,480 --> 00:05:59,840
然后再overwrite掉我们新的网络的一些

143
00:05:59,960 --> 00:06:00,960
自己的参数

144
00:06:00,960 --> 00:06:03,600
这就完成了我们的模型的读取

