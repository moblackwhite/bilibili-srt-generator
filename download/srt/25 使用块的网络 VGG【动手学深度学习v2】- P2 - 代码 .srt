1
00:00:00,000 --> 00:00:02,000
好VGG

2
00:00:02,000 --> 00:00:06,000
就是说刚刚AlexNet他最大的问题是什么呢

3
00:00:06,000 --> 00:00:10,000
最大的问题是说他这个长得不规则

4
00:00:10,000 --> 00:00:13,000
就是说他说我是一个变大的Nernet

5
00:00:13,000 --> 00:00:15,000
但是他那个感觉很随意对吧

6
00:00:15,000 --> 00:00:17,000
就是说这里加一点那里加一点

7
00:00:17,000 --> 00:00:20,000
就是说那么你的结构不那么清晰

8
00:00:20,000 --> 00:00:22,000
大家问了很多问题就是为什么要这样

9
00:00:22,000 --> 00:00:23,000
为什么要那样

10
00:00:23,000 --> 00:00:25,000
如果我怎么变深怎么变宽

11
00:00:25,000 --> 00:00:27,000
我都不知道怎么变怎么办

12
00:00:28,000 --> 00:00:30,000
所以就是说

13
00:00:30,000 --> 00:00:33,000
我如果想要变更深更大

14
00:00:33,000 --> 00:00:36,000
我需要更好的设计思想

15
00:00:36,000 --> 00:00:41,000
就是说我需要把整个框架搞得更加的regulated

16
00:00:41,000 --> 00:00:44,000
这就是VGG的一个思路

17
00:00:46,000 --> 00:00:51,000
就是说他的想法是说你AlexNet比Nernet更深更大更好

18
00:00:51,000 --> 00:00:55,000
那么整个深度学习就是说更深更大

19
00:00:56,000 --> 00:00:57,000
数据更多

20
00:00:57,000 --> 00:01:00,000
就是现在就算是今天的今天

21
00:01:00,000 --> 00:01:01,000
大家还是在干这个事情

22
00:01:01,000 --> 00:01:06,000
你说最新的那些GPT-3的模型都是更大

23
00:01:06,000 --> 00:01:09,000
更深数据更多

24
00:01:09,000 --> 00:01:11,000
就是说发展了几十年

25
00:01:11,000 --> 00:01:13,000
十年都是一直是这样子

26
00:01:13,000 --> 00:01:15,000
可能未来几年还是这样子

27
00:01:15,000 --> 00:01:17,000
所以当时VGG的人说2013年的时候

28
00:01:17,000 --> 00:01:19,000
想我们来想一下这个问题

29
00:01:19,000 --> 00:01:23,000
就怎么样更好的更深更大

30
00:01:23,000 --> 00:01:25,000
他有那么多个选项

31
00:01:25,000 --> 00:01:28,000
一个是说你有更多的全连阶层

32
00:01:28,000 --> 00:01:30,000
全连阶层是一个很贵的事情

33
00:01:30,000 --> 00:01:31,000
他特别占内存

34
00:01:31,000 --> 00:01:32,000
因为他很大

35
00:01:32,000 --> 00:01:35,000
而且质量量也不那么便宜

36
00:01:35,000 --> 00:01:39,000
第二个选项是说你可以使用更多的卷积层

37
00:01:39,000 --> 00:01:43,000
但是你AlexNet的卷积层做的不是那么好

38
00:01:43,000 --> 00:01:45,000
就是说他先把Nernet两个弄大

39
00:01:45,000 --> 00:01:47,000
然后再加三个卷积层

40
00:01:47,000 --> 00:01:49,000
所以这个东西的感觉上

41
00:01:49,000 --> 00:01:51,000
你怎么再加新的呢

42
00:01:51,000 --> 00:01:53,000
然后你把这个3300卷积层

43
00:01:53,000 --> 00:01:54,000
然后再复制十下吗

44
00:01:54,000 --> 00:01:55,000
这个不好做

45
00:01:55,000 --> 00:01:58,000
所以VGG的思想是说

46
00:01:58,000 --> 00:02:02,000
他想把整个东西组成一些小块

47
00:02:02,000 --> 00:02:03,000
一些卷积块

48
00:02:03,000 --> 00:02:05,000
然后再把卷积块挪上去

49
00:02:05,000 --> 00:02:09,000
就是说你等于是你拼乐高一样的

50
00:02:09,000 --> 00:02:10,000
你让我先拼小块

51
00:02:10,000 --> 00:02:12,000
然后同样东西跟你重复几次

52
00:02:12,000 --> 00:02:16,000
这个大家就码砖不都是这种码吗

53
00:02:17,000 --> 00:02:21,000
所以就是说他提出了叫VGG块的一个东西

54
00:02:21,000 --> 00:02:26,000
就他其实就是AlexNet的那一个思路的一个拓展

55
00:02:26,000 --> 00:02:28,000
举个例子

56
00:02:28,000 --> 00:02:30,000
AlexNet刚刚有讲过

57
00:02:30,000 --> 00:02:34,000
就是三个连续三个卷积层

58
00:02:34,000 --> 00:02:38,000
一模一样的卷积层放在一起

59
00:02:38,000 --> 00:02:40,000
最后加一个赤化层

60
00:02:40,000 --> 00:02:44,000
VGG说我把这个idea拓展一下

61
00:02:44,000 --> 00:02:49,000
就是说我允许你说做三乘三的卷积层

62
00:02:49,000 --> 00:02:51,000
然后你的padding等于一

63
00:02:51,000 --> 00:02:53,000
就是输入和输出的高宽是一样的

64
00:02:53,000 --> 00:02:56,000
然后这里的话你要选多少个都行

65
00:02:56,000 --> 00:02:59,000
就是你可以重复N次

66
00:02:59,000 --> 00:03:01,000
然后呢

67
00:03:01,000 --> 00:03:03,000
所以这是有N层

68
00:03:03,000 --> 00:03:04,000
这是第一个超参数

69
00:03:04,000 --> 00:03:07,000
第二个是说你有M个通道

70
00:03:07,000 --> 00:03:10,000
就是说你的输入和输出通道都是一样的

71
00:03:10,000 --> 00:03:11,000
这里AlexNet是384

72
00:03:11,000 --> 00:03:13,000
VGG说我可以让你配

73
00:03:13,000 --> 00:03:15,000
你可以随便选什么都行

74
00:03:15,000 --> 00:03:17,000
那么接下来就是说

75
00:03:17,000 --> 00:03:20,000
他又用回了Nernet那个2×2的

76
00:03:20,000 --> 00:03:22,000
最大赤化层的那个窗口

77
00:03:22,000 --> 00:03:24,000
然后你的stride还是等于2

78
00:03:24,000 --> 00:03:26,000
所以AlexNet是三乘三

79
00:03:26,000 --> 00:03:27,000
他用的是2×2

80
00:03:27,000 --> 00:03:32,000
所以这一个东西叫做一个VGG快

81
00:03:32,000 --> 00:03:33,000
他的核心思想是说

82
00:03:33,000 --> 00:03:37,000
我用大量的三乘三的东西给你堆起来

83
00:03:37,000 --> 00:03:40,000
然后再堆多个VGG快

84
00:03:40,000 --> 00:03:43,000
来得到我的最后的网络

85
00:03:43,000 --> 00:03:44,000
所以他为什么用的是三乘三

86
00:03:44,000 --> 00:03:45,000
而不是五乘五

87
00:03:45,000 --> 00:03:48,000
是因为他们发现是说

88
00:03:48,000 --> 00:03:51,000
他也试过用五乘五来做这个快

89
00:03:51,000 --> 00:03:54,000
但是发现五乘五因为你计算量大

90
00:03:54,000 --> 00:03:56,000
所以你可能得浅一点点

91
00:03:56,000 --> 00:03:57,000
他发现是说

92
00:03:57,000 --> 00:04:01,000
在同样的计算开销的情况下

93
00:04:01,000 --> 00:04:04,000
我堆更多的三乘三的效果

94
00:04:04,000 --> 00:04:07,000
比你用少一点的五乘五的效果会好

95
00:04:07,000 --> 00:04:09,000
就是说你模型更深

96
00:04:09,000 --> 00:04:11,000
但是你那个窗口更小

97
00:04:11,000 --> 00:04:12,000
更窄一点效果更好

98
00:04:12,000 --> 00:04:14,000
这是他们的发现

99
00:04:14,000 --> 00:04:16,000
所以最后的最后就是VGG快

100
00:04:16,000 --> 00:04:20,000
就是两个超N层

101
00:04:20,000 --> 00:04:22,000
通道数都是一样的

102
00:04:22,000 --> 00:04:23,000
三乘三的卷积

103
00:04:23,000 --> 00:04:24,000
最后加一个最大次化层

104
00:04:24,000 --> 00:04:27,000
就是一个叫VGG快的概念

105
00:04:27,000 --> 00:04:30,000
那么接下来的VGG架构就是说

106
00:04:30,000 --> 00:04:33,000
他其实就是替换掉你的AlexNet

107
00:04:33,000 --> 00:04:36,000
整个这个卷积这一层的架构

108
00:04:36,000 --> 00:04:38,000
AlexNet是一个大的Net对吧

109
00:04:38,000 --> 00:04:43,000
所以VGG把它替换成N个VGG快

110
00:04:43,000 --> 00:04:44,000
把你串在一起

111
00:04:44,000 --> 00:04:47,000
你可以串不同的

112
00:04:47,000 --> 00:04:51,000
不同大小得到你不同的架构

113
00:04:51,000 --> 00:04:52,000
什么VGG16了

114
00:04:52,000 --> 00:04:53,000
就16个卷积层

115
00:04:53,000 --> 00:04:54,000
我都不知道

116
00:04:54,000 --> 00:04:57,000
我记得16是包没包好

117
00:04:57,000 --> 00:04:59,000
包没包过最后两个全面阶层

118
00:04:59,000 --> 00:05:01,000
大家可以去查一下

119
00:05:01,000 --> 00:05:03,000
VGG是有就是多一点点

120
00:05:03,000 --> 00:05:05,000
就多加一个快

121
00:05:06,000 --> 00:05:08,000
所以另外一个他还是一样

122
00:05:08,000 --> 00:05:10,000
最后是有两个全面阶层

123
00:05:10,000 --> 00:05:12,000
4096 4096最后得到输出

124
00:05:12,000 --> 00:05:14,000
所以可认为VGG快

125
00:05:14,000 --> 00:05:17,000
VGG对于AlexNet最大的改进是说

126
00:05:17,000 --> 00:05:19,000
把Alex的这一块

127
00:05:19,000 --> 00:05:21,000
中间新加的这一块东西

128
00:05:21,000 --> 00:05:23,000
抽出了一个模式

129
00:05:23,000 --> 00:05:24,000
叫做VGG快

130
00:05:24,000 --> 00:05:27,000
然后干掉了前面这两块

131
00:05:27,000 --> 00:05:28,000
不是那么规则的东西

132
00:05:28,000 --> 00:05:31,000
使得你最后就是N块东西

133
00:05:31,000 --> 00:05:32,000
串在一起就行了

134
00:05:33,000 --> 00:05:34,000
OK

135
00:05:34,000 --> 00:05:36,000
这就是VGG的概念

136
00:05:36,000 --> 00:05:38,000
所以我们来回顾一下

137
00:05:38,000 --> 00:05:41,000
就是从90年代的Nernet

138
00:05:41,000 --> 00:05:42,000
两个卷积层

139
00:05:42,000 --> 00:05:44,000
使化层加两个全面阶层

140
00:05:44,000 --> 00:05:46,000
到AlexNet更大更深

141
00:05:46,000 --> 00:05:47,000
到VGG

142
00:05:47,000 --> 00:05:48,000
VGG你可认为就是一个

143
00:05:48,000 --> 00:05:50,000
更大更深的AlexNet对吧

144
00:05:50,000 --> 00:05:53,000
就把你的中间新加的东西留下来

145
00:05:53,000 --> 00:05:56,000
复制三天几次

146
00:05:56,000 --> 00:05:58,000
把前面的几个卷积丢掉

147
00:05:58,000 --> 00:06:00,000
后面还是保留

148
00:06:00,000 --> 00:06:01,000
别的东西都一样

149
00:06:01,000 --> 00:06:02,000
所以就是

150
00:06:02,000 --> 00:06:04,000
它就是一个更大更深的AlexNet

151
00:06:05,000 --> 00:06:06,000
我们可以看一下

152
00:06:06,000 --> 00:06:08,000
就是说现在的进度

153
00:06:08,000 --> 00:06:11,000
这是一个GNOME CV里面的

154
00:06:11,000 --> 00:06:14,000
Model Zoo的一个东西

155
00:06:14,000 --> 00:06:16,000
可以看到首先你的X轴是说

156
00:06:16,000 --> 00:06:17,000
不同的模型

157
00:06:17,000 --> 00:06:19,000
它的每秒钟做Inference

158
00:06:19,000 --> 00:06:21,000
它每秒钟能做个数

159
00:06:21,000 --> 00:06:23,000
越到这边越快

160
00:06:23,000 --> 00:06:26,000
你的Y轴是你在ImageNet上的Accuracy

161
00:06:26,000 --> 00:06:28,000
但越高越好

162
00:06:28,000 --> 00:06:30,000
首先你看到AlexNet

163
00:06:31,000 --> 00:06:32,000
AlexNet是

164
00:06:32,000 --> 00:06:34,000
它是很快的一个网络

165
00:06:34,000 --> 00:06:36,000
它每秒钟能够做到

166
00:06:36,000 --> 00:06:39,000
这形式是大概是5000多次的样子

167
00:06:39,000 --> 00:06:40,000
对吧我们刚刚大概也是

168
00:06:40,000 --> 00:06:42,000
训练也是5000多

169
00:06:42,000 --> 00:06:43,000
4000的样子

170
00:06:43,000 --> 00:06:44,000
然后

171
00:06:45,000 --> 00:06:47,000
它的进度其实不高了

172
00:06:47,000 --> 00:06:48,000
它的进度是Top1的Accuracy

173
00:06:48,000 --> 00:06:50,000
当然是0.5几的样子

174
00:06:50,000 --> 00:06:51,000
0.56的样子

175
00:06:51,000 --> 00:06:54,000
VGG对AlexNet其实提升很大了

176
00:06:54,000 --> 00:06:56,000
但是它的代价是

177
00:06:56,000 --> 00:06:57,000
它会慢很多

178
00:06:57,000 --> 00:06:58,000
慢个五六倍的样子

179
00:06:58,000 --> 00:06:59,000
因为它更深了

180
00:07:01,000 --> 00:07:02,000
第二个是说VGG

181
00:07:02,000 --> 00:07:03,000
你可以看到这个区间

182
00:07:03,000 --> 00:07:06,000
这个大小是表示你的内存的使用

183
00:07:06,000 --> 00:07:09,000
VGG是一个非常占内存的一个网络

184
00:07:09,000 --> 00:07:10,000
所以你可以看到它

185
00:07:10,000 --> 00:07:12,000
越大就表示占用内存越多

186
00:07:12,000 --> 00:07:14,000
但是你可以看到是

187
00:07:14,000 --> 00:07:15,000
因为它VGG有不同的选项

188
00:07:15,000 --> 00:07:19,000
你可以选择你复制三天的次数

189
00:07:19,000 --> 00:07:21,000
所以它有一系列的模型

190
00:07:21,000 --> 00:07:22,000
不同的模型

191
00:07:22,000 --> 00:07:24,000
它的快一点的模型

192
00:07:24,000 --> 00:07:25,000
当然进度低一点

193
00:07:25,000 --> 00:07:26,000
慢一点的模型

194
00:07:26,000 --> 00:07:27,000
大一点的模型

195
00:07:27,000 --> 00:07:28,000
进度高一点

196
00:07:28,000 --> 00:07:29,000
所以这是VGG

197
00:07:29,000 --> 00:07:31,000
所以可以看到是说

198
00:07:31,000 --> 00:07:33,000
它确实还是能提升AlexNet

199
00:07:33,000 --> 00:07:34,000
对吧

200
00:07:34,000 --> 00:07:37,000
它进度好了很多

201
00:07:37,000 --> 00:07:38,000
虽然慢了很多

202
00:07:38,000 --> 00:07:41,000
但是因为硬件一直在涨

203
00:07:41,000 --> 00:07:42,000
所以问题不大

204
00:07:42,000 --> 00:07:44,000
当然你看到的这些东西

205
00:07:44,000 --> 00:07:45,000
我们还没讲到

206
00:07:45,000 --> 00:07:46,000
这些东西我们之后会讲

207
00:07:46,000 --> 00:07:47,000
说新的网络

208
00:07:47,000 --> 00:07:49,000
基本上跟他们比

209
00:07:49,000 --> 00:07:50,000
新的网络

210
00:07:50,000 --> 00:07:54,000
VGG在性能和进度上都不占优势

211
00:07:54,000 --> 00:07:58,000
但是因为那是最早的几个网络之一

212
00:07:58,000 --> 00:07:59,000
那是13年的

213
00:07:59,000 --> 00:08:01,000
我记得VGG是13年的冠军

214
00:08:01,000 --> 00:08:03,000
所以这些东西都是16年

215
00:08:03,000 --> 00:08:05,000
17年提出来的网络

216
00:08:05,000 --> 00:08:09,000
所以确实它也是一个老前辈了

217
00:08:11,000 --> 00:08:12,000
OK

218
00:08:12,000 --> 00:08:13,000
总结一下

219
00:08:13,000 --> 00:08:17,000
VGG就是想用可以重复使用的卷积块

220
00:08:17,000 --> 00:08:20,000
来构建深度卷积升级网络

221
00:08:20,000 --> 00:08:22,000
然后他就是把AlexNet那一块东西

222
00:08:22,000 --> 00:08:23,000
给拎出来

223
00:08:23,000 --> 00:08:24,000
做成一个VGG块

224
00:08:24,000 --> 00:08:26,000
然后你可以配置不同的

225
00:08:26,000 --> 00:08:28,000
VGG块的个数

226
00:08:28,000 --> 00:08:29,000
以及通道数来得到

227
00:08:29,000 --> 00:08:32,000
不同算法复杂度的变种

228
00:08:32,000 --> 00:08:35,000
这一个思想在之后会被大量的使用

229
00:08:35,000 --> 00:08:36,000
就是说

230
00:08:36,000 --> 00:08:39,000
使用可重复的块来构建深度卷积网络

231
00:08:39,000 --> 00:08:40,000
这是第一个思想

232
00:08:40,000 --> 00:08:42,000
第二个思想是说

233
00:08:42,000 --> 00:08:43,000
不同的配置

234
00:08:43,000 --> 00:08:44,000
你买个车还有高配低配

235
00:08:44,000 --> 00:08:45,000
对吧

236
00:08:45,000 --> 00:08:47,000
所以VGG也是一样的

237
00:08:47,000 --> 00:08:49,000
之后很多网络都有高配版低配版

238
00:08:49,000 --> 00:08:50,000
低配版就是跑得快

239
00:08:50,000 --> 00:08:51,000
进度差

240
00:08:51,000 --> 00:08:53,000
高配版就是跑得慢

241
00:08:53,000 --> 00:08:54,000
我用来刷榜

242
00:08:55,000 --> 00:08:58,000
所以这是两个非常重要的思想

243
00:08:58,000 --> 00:09:02,000
影响了后面所有的深度卷积网络的设计

