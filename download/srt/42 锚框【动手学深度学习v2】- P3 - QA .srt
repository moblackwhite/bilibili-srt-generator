1
00:00:00,000 --> 00:00:02,000
好,我们接下来讲

2
00:00:02,000 --> 00:00:08,000
我们刚刚的那些毛框相关的技术是如何一步一步实现出来的

3
00:00:08,000 --> 00:00:11,000
这里面有很多技术细节的东西

4
00:00:11,000 --> 00:00:13,000
我们就不会给大家一行一行去读了

5
00:00:13,000 --> 00:00:17,000
给大家一个简单的思路到底是怎么做的

6
00:00:17,000 --> 00:00:18,000
OK

7
00:00:20,000 --> 00:00:22,000
接下来是说

8
00:00:23,000 --> 00:00:26,000
一个毛框的生成办法是什么样子呢

9
00:00:26,000 --> 00:00:35,000
就是说我们对于每一个像素为中心

10
00:00:35,000 --> 00:00:40,000
然后生成不同高宽度不同的毛框

11
00:00:40,000 --> 00:00:43,000
这个函数干的事情就是说

12
00:00:44,000 --> 00:00:48,000
比如说对每一个data就是一个data就是你的图片

13
00:00:48,000 --> 00:00:52,000
你图片会有一个高和有个宽

14
00:00:52,000 --> 00:00:54,000
那么对于它每一个像素

15
00:00:54,000 --> 00:00:56,000
以它为中心

16
00:00:57,000 --> 00:01:04,000
生成不同的宽度和高度的分别是

17
00:01:04,000 --> 00:01:09,000
ws乘以√r和hs除以√的东西

18
00:01:09,000 --> 00:01:12,000
这个wh是你的高和宽

19
00:01:12,000 --> 00:01:14,000
你的s和r是什么呢

20
00:01:14,000 --> 00:01:18,000
s就表示你的毛框的大小

21
00:01:19,000 --> 00:01:23,000
毛框占你这个图片的百分之多少

22
00:01:23,000 --> 00:01:26,000
是百分之十还是百分之二十还是百分之八十

23
00:01:26,000 --> 00:01:32,000
然后你的r是你毛框的高低比

24
00:01:32,000 --> 00:01:33,000
就是高宽比

25
00:01:33,000 --> 00:01:37,000
我们在做图片的随机crop的时候

26
00:01:37,000 --> 00:01:38,000
有讲过这两个参数

27
00:01:38,000 --> 00:01:41,000
就是在做image augmentation的时候

28
00:01:41,000 --> 00:01:46,000
s和r就是size和ratio是两个参数

29
00:01:46,000 --> 00:01:49,000
当时我们说我会给一个系列的

30
00:01:49,000 --> 00:01:51,000
比如说给5个s给5个r

31
00:01:51,000 --> 00:01:53,000
就是说它不会说一组合

32
00:01:53,000 --> 00:01:57,000
一组合就因为如果你给5个s给5个r

33
00:01:57,000 --> 00:01:59,000
那么组合下来就是25个组合

34
00:01:59,000 --> 00:02:01,000
然后你再乘以高宽

35
00:02:01,000 --> 00:02:02,000
高宽是100的话

36
00:02:02,000 --> 00:02:04,000
就是100乘以100就是1万

37
00:02:04,000 --> 00:02:08,000
1万乘以25就是25万个组合

38
00:02:08,000 --> 00:02:12,000
那就是一张图片会生成25万个毛框

39
00:02:12,000 --> 00:02:13,000
这个有点多

40
00:02:14,000 --> 00:02:15,000
所以通常来说

41
00:02:15,000 --> 00:02:18,000
现在大家一个常见的做法是

42
00:02:18,000 --> 00:02:20,000
你不要一组合

43
00:02:20,000 --> 00:02:25,000
首先我全部用第一个size

44
00:02:25,000 --> 00:02:27,000
就是我觉得最合适的size

45
00:02:27,000 --> 00:02:29,000
然后把那个ratio变一变

46
00:02:29,000 --> 00:02:32,000
就是从r1到rm

47
00:02:32,000 --> 00:02:34,000
然后接下来我们把这个ratio

48
00:02:34,000 --> 00:02:37,000
通常r1就是一个1比1的ratio

49
00:02:37,000 --> 00:02:40,000
然后再把所有的size过滤一遍

50
00:02:40,000 --> 00:02:41,000
所以我们就这里的话

51
00:02:41,000 --> 00:02:46,000
就会只会生成你给我不同的大小

52
00:02:46,000 --> 00:02:49,000
不同的高宽比

53
00:02:49,000 --> 00:02:51,000
那么我的生成每一个pixel

54
00:02:51,000 --> 00:02:53,000
会生成的毛框的数字

55
00:02:53,000 --> 00:02:55,000
是你的size加上你的ratio减一

56
00:02:55,000 --> 00:02:57,000
OK假设还是5个大小

57
00:02:57,000 --> 00:02:58,000
5个高宽比的话

58
00:02:58,000 --> 00:03:00,000
那么会生成9个毛框

59
00:03:00,000 --> 00:03:02,000
那么如果是100乘以100的话

60
00:03:02,000 --> 00:03:03,000
那么就是生成9万个

61
00:03:03,000 --> 00:03:05,000
而不是25万个

62
00:03:05,000 --> 00:03:06,000
OK

63
00:03:06,000 --> 00:03:08,000
所以就是说反过来讲

64
00:03:08,000 --> 00:03:11,000
这是一个非常的贵的一个毛框生成

65
00:03:11,000 --> 00:03:13,000
因为它对每一个像素为中心

66
00:03:13,000 --> 00:03:16,000
生成了n个不一样的高宽

67
00:03:17,000 --> 00:03:18,000
对吧

68
00:03:18,000 --> 00:03:19,000
如果你图片很大的话

69
00:03:19,000 --> 00:03:21,000
你是一个4K的图片的话

70
00:03:21,000 --> 00:03:22,000
那么就是

71
00:03:22,000 --> 00:03:24,000
因为在图片检测里面

72
00:03:24,000 --> 00:03:26,000
其实大家会用比较大的

73
00:03:26,000 --> 00:03:28,000
株的尺寸图片

74
00:03:28,000 --> 00:03:30,000
因为你的物体相对比较小

75
00:03:30,000 --> 00:03:31,000
特别是你无人驾驶

76
00:03:31,000 --> 00:03:33,000
你可能4K的图片做检测

77
00:03:33,000 --> 00:03:34,000
那就是

78
00:03:34,000 --> 00:03:37,000
那么你的像素

79
00:03:37,000 --> 00:03:39,000
就是100万个像素的话

80
00:03:39,000 --> 00:03:41,000
4K可能4K是1000万

81
00:03:41,000 --> 00:03:45,000
就是在几百万像素的话

82
00:03:45,000 --> 00:03:47,000
那么你的毛框就是

83
00:03:47,000 --> 00:03:49,000
几千万个毛框出来

84
00:03:49,000 --> 00:03:51,000
所以这是一个非常可怕的

85
00:03:51,000 --> 00:03:53,000
一个毛框的生成

86
00:03:53,000 --> 00:03:54,000
但实际上也是大家是

87
00:03:54,000 --> 00:03:55,000
也是都是这么用的

88
00:03:55,000 --> 00:03:57,000
所以这个函数就干

89
00:03:57,000 --> 00:03:58,000
干这个事情

90
00:03:58,000 --> 00:04:00,000
就是我就不给大家一句

91
00:04:00,000 --> 00:04:01,000
讲这个东西了

92
00:04:01,000 --> 00:04:03,000
就是说他把每个像素

93
00:04:03,000 --> 00:04:04,000
他的center

94
00:04:04,000 --> 00:04:05,000
弄出来

95
00:04:05,000 --> 00:04:06,000
然后呢

96
00:04:06,000 --> 00:04:11,000
把那个size和ratio变一遍

97
00:04:11,000 --> 00:04:14,000
然后生成一个巨大的一个毛框出来

98
00:04:15,000 --> 00:04:17,000
就我们就带有兴趣可以看一下

99
00:04:17,000 --> 00:04:18,000
我们具体来看一下

100
00:04:18,000 --> 00:04:20,000
他是长什么样子

101
00:04:20,000 --> 00:04:22,000
就给一个猫头图片读进来

102
00:04:22,000 --> 00:04:23,000
然后呢

103
00:04:23,000 --> 00:04:25,000
我们就是说

104
00:04:25,000 --> 00:04:27,000
我们的

105
00:04:27,000 --> 00:04:28,000
我们的X就构造一个

106
00:04:28,000 --> 00:04:29,000
这样子的批量

107
00:04:29,000 --> 00:04:32,000
就是批量大小是1

108
00:04:32,000 --> 00:04:33,000
他跟批量无关

109
00:04:33,000 --> 00:04:34,000
因为你不管是批量大多少

110
00:04:34,000 --> 00:04:35,000
他都是生成

111
00:04:35,000 --> 00:04:37,000
每个图片只要形状一样

112
00:04:37,000 --> 00:04:38,000
他的生成毛框都是一样

113
00:04:38,000 --> 00:04:39,000
这个方法里面

114
00:04:39,000 --> 00:04:40,000
然后RGBX呢

115
00:04:40,000 --> 00:04:42,000
他其实也不管

116
00:04:42,000 --> 00:04:44,000
主要是管的是高宽

117
00:04:44,000 --> 00:04:45,000
丢进去

118
00:04:45,000 --> 00:04:47,000
我们这里做的是

119
00:04:47,000 --> 00:04:49,000
我们的size

120
00:04:49,000 --> 00:04:51,000
这里取的是

121
00:04:51,000 --> 00:04:53,000
首先生成一个毛框

122
00:04:53,000 --> 00:04:56,000
是你整个图片的75%的大小

123
00:04:56,000 --> 00:04:57,000
然后是50%

124
00:04:57,000 --> 00:04:58,000
25%

125
00:04:58,000 --> 00:04:59,000
就1 4分之大小

126
00:04:59,000 --> 00:05:01,000
接下来是你的ratio

127
00:05:01,000 --> 00:05:02,000
ratio就是说

128
00:05:02,000 --> 00:05:03,000
1是1比1

129
00:05:03,000 --> 00:05:05,000
2比1和1比2

130
00:05:05,000 --> 00:05:07,000
然后你可以看一下我的

131
00:05:07,000 --> 00:05:09,000
Y的shape

132
00:05:09,000 --> 00:05:11,000
首先我这个输入是一个

133
00:05:11,000 --> 00:05:12,000
561乘以728

134
00:05:12,000 --> 00:05:14,000
这个图片不小了

135
00:05:14,000 --> 00:05:16,000
将近是

136
00:05:16,000 --> 00:05:18,000
那个

137
00:05:18,000 --> 00:05:19,000
十几万的像

138
00:05:19,000 --> 00:05:20,000
十几万的像素了

139
00:05:20,000 --> 00:05:22,000
几十万像素了

140
00:05:22,000 --> 00:05:23,000
那么你生成出来的话

141
00:05:23,000 --> 00:05:25,000
那么就是这里就是

142
00:05:25,000 --> 00:05:27,000
200万个毛框

143
00:05:29,000 --> 00:05:30,000
OK

144
00:05:30,000 --> 00:05:32,000
第一个维度你不管是批量大小

145
00:05:32,000 --> 00:05:35,000
这个是你有多少个毛框

146
00:05:36,000 --> 00:05:37,000
4呢就是每个毛框

147
00:05:37,000 --> 00:05:39,000
它的位置

148
00:05:40,000 --> 00:05:41,000
OK

149
00:05:41,000 --> 00:05:42,000
就是说这个图片

150
00:05:42,000 --> 00:05:43,000
我们生产200万个毛框

151
00:05:43,000 --> 00:05:45,000
意味着说来一张图片

152
00:05:45,000 --> 00:05:47,000
我们会生产200万个

153
00:05:47,000 --> 00:05:49,000
新的样本出来

154
00:05:50,000 --> 00:05:51,000
接下来就是说

155
00:05:51,000 --> 00:05:53,000
你可以看到这个200万是怎么来的

156
00:05:53,000 --> 00:05:55,000
它就是一个

157
00:05:55,000 --> 00:05:57,000
你把它reshape一下

158
00:05:57,000 --> 00:05:58,000
就是

159
00:05:58,000 --> 00:06:00,000
它就是每一个

160
00:06:00,000 --> 00:06:02,000
reshape的高宽

161
00:06:02,000 --> 00:06:03,000
就每一个像素

162
00:06:03,000 --> 00:06:05,000
它都会生成五个

163
00:06:05,000 --> 00:06:06,000
这样子的毛框

164
00:06:06,000 --> 00:06:08,000
因为你刚刚我们给的是

165
00:06:09,000 --> 00:06:10,000
三和三对吧

166
00:06:10,000 --> 00:06:12,000
三加三减一等于五

167
00:06:12,000 --> 00:06:14,000
所以生成每个像素

168
00:06:14,000 --> 00:06:15,000
生成五个毛框

169
00:06:15,000 --> 00:06:18,000
这个四就是它的那个值了

170
00:06:18,000 --> 00:06:19,000
那么我们就可以把

171
00:06:19,000 --> 00:06:22,000
以250和250为中心的

172
00:06:22,000 --> 00:06:24,000
第一个毛框给你拎出来

173
00:06:24,000 --> 00:06:26,000
就是把250250

174
00:06:26,000 --> 00:06:27,000
然后呢

175
00:06:27,000 --> 00:06:28,000
0就是它第一个毛框

176
00:06:28,000 --> 00:06:30,000
那么这后面这个数字

177
00:06:30,000 --> 00:06:31,000
就是你的坐标

178
00:06:31,000 --> 00:06:32,000
看到是说

179
00:06:32,000 --> 00:06:34,000
它的应该这是

180
00:06:34,000 --> 00:06:36,000
左上和右下的

181
00:06:36,000 --> 00:06:38,000
但是已经除了你的高宽了

182
00:06:38,000 --> 00:06:40,000
变成零和一之间的实数了

183
00:06:40,000 --> 00:06:41,000
它这个毛框

184
00:06:41,000 --> 00:06:43,000
它是长这个样子的

185
00:06:44,000 --> 00:06:46,000
当我可以给你画一下

186
00:06:46,000 --> 00:06:48,000
就是说这个函数就不给大家过一遍了

187
00:06:48,000 --> 00:06:49,000
就是说

188
00:06:49,000 --> 00:06:51,000
给我给我一堆bounty box

189
00:06:51,000 --> 00:06:52,000
我把你画出来

190
00:06:52,000 --> 00:06:54,000
我就不给大家讲了

191
00:06:54,000 --> 00:06:56,000
因为时间有限

192
00:06:57,000 --> 00:06:59,000
好就画怎么画呢

193
00:06:59,000 --> 00:07:01,000
就是说我们把以

194
00:07:02,000 --> 00:07:05,000
250和250像素为中心的

195
00:07:06,000 --> 00:07:09,000
所有的毛框都画出来

196
00:07:09,000 --> 00:07:11,000
这个东西你可不用管

197
00:07:11,000 --> 00:07:12,000
就是乘以高宽了

198
00:07:13,000 --> 00:07:14,000
然后我们还会给你画一下

199
00:07:14,000 --> 00:07:15,000
就是这个东西

200
00:07:15,000 --> 00:07:18,000
就是我们在刚刚的slice

201
00:07:18,000 --> 00:07:20,000
里面给大家过的图片

202
00:07:20,000 --> 00:07:21,000
可以看到是说

203
00:07:21,000 --> 00:07:23,000
我们在生成了五个毛框

204
00:07:23,000 --> 00:07:24,000
给大家稍微看一眼

205
00:07:25,000 --> 00:07:26,000
首先呢

206
00:07:26,000 --> 00:07:28,000
黄色红色的

207
00:07:28,000 --> 00:07:30,000
就是size是1 4分之一

208
00:07:30,000 --> 00:07:32,000
然后的ratio是1

209
00:07:32,000 --> 00:07:33,000
另外一个绿色

210
00:07:33,000 --> 00:07:35,000
就是size就变成了2分之一

211
00:07:35,000 --> 00:07:40,000
最后这个蓝色是size就等于75%

212
00:07:40,000 --> 00:07:42,000
但是这三个都ratio等于1

213
00:07:43,000 --> 00:07:44,000
接下来就是说

214
00:07:44,000 --> 00:07:45,000
在固定

215
00:07:46,000 --> 00:07:48,000
接下来就是固定住size

216
00:07:48,000 --> 00:07:49,000
等于0.75

217
00:07:49,000 --> 00:07:51,000
就是0.75是第一个我们的size

218
00:07:52,000 --> 00:07:53,000
然后呢

219
00:07:53,000 --> 00:07:54,000
把ratio变一下

220
00:07:54,000 --> 00:07:56,000
ratio变成0.5

221
00:07:56,000 --> 00:07:59,000
就是高一个数字的一个框

222
00:07:59,000 --> 00:08:00,000
然后ratio等于2

223
00:08:00,000 --> 00:08:02,000
就是一个扁的框

224
00:08:02,000 --> 00:08:03,000
OK

225
00:08:03,000 --> 00:08:04,000
所以这就是说

226
00:08:04,000 --> 00:08:06,000
我们以这个像素为中心

227
00:08:06,000 --> 00:08:08,000
他生成的五个毛框长什么样子

228
00:08:08,000 --> 00:08:09,000
基本上可以看到说

229
00:08:09,000 --> 00:08:10,000
这个

230
00:08:11,000 --> 00:08:12,000
其中有一个毛框还不错

231
00:08:12,000 --> 00:08:13,000
这个蓝色的毛框

232
00:08:13,000 --> 00:08:14,000
还是挺好的质量

233
00:08:14,000 --> 00:08:17,000
基本上能够把这只狗给盖住了

234
00:08:18,000 --> 00:08:20,000
所以可以看到是说

235
00:08:21,000 --> 00:08:24,000
当你没有特别好的想法

236
00:08:24,000 --> 00:08:25,000
就是说我到底那个物体

237
00:08:25,000 --> 00:08:27,000
会在什么地方的时候呢

238
00:08:27,000 --> 00:08:29,000
那我就是对每个像素为中心

239
00:08:29,000 --> 00:08:31,000
生成大小不一样的毛框

240
00:08:31,000 --> 00:08:35,000
希望其中有一些能够尽可能去覆盖

241
00:08:35,000 --> 00:08:36,000
这一个样本

242
00:08:37,000 --> 00:08:38,000
但是你有权衡

243
00:08:39,000 --> 00:08:40,000
就是我可以生成很多

244
00:08:40,000 --> 00:08:41,000
很多我可以生成1000万

245
00:08:41,000 --> 00:08:44,000
或者上一个亿的毛框

246
00:08:45,000 --> 00:08:47,000
这样子我当然覆盖就比较好了

247
00:08:47,000 --> 00:08:48,000
但反过来讲

248
00:08:49,000 --> 00:08:51,000
你生成的越多

249
00:08:51,000 --> 00:08:52,000
你的计算量就越大

250
00:08:52,000 --> 00:08:54,000
你做预测的时候计算量越大

251
00:08:54,000 --> 00:08:55,000
计算量越大

252
00:08:55,000 --> 00:08:57,000
所以毛框的质量

253
00:08:57,000 --> 00:08:59,000
其实挺关键的一个东西

254
00:09:00,000 --> 00:09:04,000
基本上在所有的目标建设算法里面

255
00:09:04,000 --> 00:09:08,000
他都会去针对怎么样生成高质量的毛框

256
00:09:08,000 --> 00:09:10,000
这里我们就给大家介绍一个简简单单

257
00:09:10,000 --> 00:09:12,000
就是以每个像素为中心

258
00:09:12,000 --> 00:09:13,000
生成不一样的毛框

259
00:09:15,000 --> 00:09:17,000
OK另外一个我们定义的一个

260
00:09:17,000 --> 00:09:18,000
怎么算IOU

261
00:09:19,000 --> 00:09:20,000
给一个

262
00:09:21,000 --> 00:09:24,000
这个是一堆box和另外一堆box

263
00:09:24,000 --> 00:09:25,000
两两的去算

264
00:09:26,000 --> 00:09:27,000
我们就不给大家过了

265
00:09:27,000 --> 00:09:28,000
就是说白了

266
00:09:28,000 --> 00:09:29,000
就是说你最简单

267
00:09:29,000 --> 00:09:31,000
就是说把到现在

268
00:09:31,000 --> 00:09:34,000
把这边的毛框一的

269
00:09:34,000 --> 00:09:37,000
就框一的面积算出来

270
00:09:37,000 --> 00:09:38,000
框二的面积算出来

271
00:09:38,000 --> 00:09:43,000
然后继续把他们的交集中间小框算出来

272
00:09:44,000 --> 00:09:46,000
最后那么就是inner area

273
00:09:46,000 --> 00:09:47,000
就是他的

274
00:09:48,000 --> 00:09:49,000
他的小框

275
00:09:49,000 --> 00:09:50,000
就是

276
00:09:51,000 --> 00:09:54,000
就是他的小框面积

277
00:09:54,000 --> 00:09:57,000
他的union就是各自的面积减去

278
00:09:57,000 --> 00:09:58,000
他中间的交集

279
00:09:58,000 --> 00:09:59,000
然后一除就行了

280
00:09:59,000 --> 00:10:01,000
大家可以去看一下算法上

281
00:10:01,000 --> 00:10:02,000
是挺简单的

282
00:10:04,000 --> 00:10:06,000
好接下来下面这个算法

283
00:10:06,000 --> 00:10:07,000
就是说

284
00:10:07,000 --> 00:10:09,000
怎么给我的ground truth

285
00:10:09,000 --> 00:10:11,000
就是我的bonding box

286
00:10:11,000 --> 00:10:12,000
和给我的

287
00:10:13,000 --> 00:10:15,000
刚刚提出来的各个毛框

288
00:10:15,000 --> 00:10:17,000
然后怎么去分配

289
00:10:17,000 --> 00:10:18,000
device

290
00:10:18,000 --> 00:10:19,000
你可以说我在

291
00:10:20,000 --> 00:10:22,000
在GPU上做还是CPU上做

292
00:10:24,000 --> 00:10:26,000
最后一个是说你的threshold

293
00:10:27,000 --> 00:10:28,000
我们先不讲threshold

294
00:10:28,000 --> 00:10:29,000
我们先说

295
00:10:29,000 --> 00:10:30,000
你可以看到说

296
00:10:32,000 --> 00:10:36,000
就是我们对所有的毛框和真实边框

297
00:10:36,000 --> 00:10:38,000
他的IOU全部算出来

298
00:10:39,000 --> 00:10:40,000
然后这里面找

299
00:10:40,000 --> 00:10:43,000
然后基本上就是说去里面找

300
00:10:43,000 --> 00:10:44,000
里面找

301
00:10:44,000 --> 00:10:45,000
每次找里面max

302
00:10:46,000 --> 00:10:48,000
就是说把里面的最大的找出来

303
00:10:49,000 --> 00:10:50,000
然后

304
00:10:56,000 --> 00:10:59,000
然后就把index弄出来之后

305
00:10:59,000 --> 00:11:01,000
就是把这一行删掉

306
00:11:01,000 --> 00:11:02,000
把这一行删掉

307
00:11:02,000 --> 00:11:05,000
把这一列给删掉

308
00:11:05,000 --> 00:11:06,000
叫row

309
00:11:06,000 --> 00:11:07,000
这个只是等于

310
00:11:08,000 --> 00:11:09,000
就是一个

311
00:11:09,000 --> 00:11:11,000
一个等于负1的一个向量

312
00:11:11,000 --> 00:11:12,000
就把它删掉

313
00:11:12,000 --> 00:11:13,000
然后不断去重复这个事情

314
00:11:13,000 --> 00:11:15,000
然后这样子会得到一个map

315
00:11:15,000 --> 00:11:18,000
也是刚刚我们所说的那一个值

316
00:11:19,000 --> 00:11:20,000
OK

317
00:11:20,000 --> 00:11:23,000
然后当然是说另外一个是

318
00:11:25,000 --> 00:11:26,000
IOU threshold

319
00:11:26,000 --> 00:11:27,000
就是说给一个值

320
00:11:27,000 --> 00:11:29,000
说你如果一个

321
00:11:29,000 --> 00:11:30,000
如果一个框

322
00:11:30,000 --> 00:11:33,000
你如果你的跟任何真实边框的IOU

323
00:11:33,000 --> 00:11:34,000
threshold都小于0.5的话

324
00:11:34,000 --> 00:11:37,000
就就基本上就当背景了

325
00:11:37,000 --> 00:11:38,000
就不要了

326
00:11:38,000 --> 00:11:39,000
OK

327
00:11:42,000 --> 00:11:43,000
好

328
00:11:43,000 --> 00:11:44,000
另外一个是说

329
00:11:44,000 --> 00:11:47,000
你怎么样标记边缘

330
00:11:48,000 --> 00:11:49,000
就是说这里面

331
00:11:49,000 --> 00:11:52,000
这里面比较有意思的是说

332
00:11:53,000 --> 00:11:54,000
你呢

333
00:11:54,000 --> 00:11:56,000
给定一个模框

334
00:11:57,000 --> 00:11:58,000
和呢

335
00:11:58,000 --> 00:12:01,000
它对应分配到的真实边缘框

336
00:12:02,000 --> 00:12:03,000
我们去算那个

337
00:12:03,000 --> 00:12:05,000
怎么样把模框换算过去

338
00:12:05,000 --> 00:12:06,000
那个偏移

339
00:12:07,000 --> 00:12:08,000
但最简单的做法

340
00:12:08,000 --> 00:12:10,000
就是说你把这个四个值

341
00:12:10,000 --> 00:12:11,000
一减就行了

342
00:12:12,000 --> 00:12:14,000
但实际上这不好

343
00:12:14,000 --> 00:12:15,000
因为呢

344
00:12:16,000 --> 00:12:18,000
减出来东西

345
00:12:18,000 --> 00:12:19,000
你他们之间的

346
00:12:19,000 --> 00:12:20,000
可能它的换算

347
00:12:20,000 --> 00:12:22,000
不那么用于好预测

348
00:12:24,000 --> 00:12:25,000
所以一般的做法

349
00:12:25,000 --> 00:12:26,000
我们就不在这里给大家过了

350
00:12:26,000 --> 00:12:27,000
就是说

351
00:12:27,000 --> 00:12:29,000
它的做法其实是说

352
00:12:29,000 --> 00:12:32,000
用高宽和左上坐标来做的

353
00:12:32,000 --> 00:12:33,000
就是用的是

354
00:12:34,000 --> 00:12:35,000
center那个坐标

355
00:12:35,000 --> 00:12:39,000
就是说用中心点和它的高宽来做的

356
00:12:39,000 --> 00:12:40,000
中心点呢

357
00:12:40,000 --> 00:12:42,000
它用的是相对中心点

358
00:12:42,000 --> 00:12:43,000
还成了一个十

359
00:12:43,000 --> 00:12:44,000
减了一些东西

360
00:12:44,000 --> 00:12:45,000
然后它的高宽呢

361
00:12:45,000 --> 00:12:46,000
还用了一个

362
00:12:46,000 --> 00:12:47,000
取了一个log

363
00:12:47,000 --> 00:12:48,000
除了一下取log

364
00:12:49,000 --> 00:12:50,000
就这一块东西

365
00:12:50,000 --> 00:12:51,000
我们在书里面

366
00:12:51,000 --> 00:12:53,000
有详细讲述的公式怎么算的

367
00:12:53,000 --> 00:12:54,000
但是呢

368
00:12:54,000 --> 00:12:56,000
我这里不给大家仔细讲

369
00:12:56,000 --> 00:12:58,000
给大家的原因是说

370
00:12:58,000 --> 00:13:00,000
就这个东西干的原因是说

371
00:13:00,000 --> 00:13:03,000
你尽量使得这个offsite

372
00:13:03,000 --> 00:13:06,000
比较好让你的

373
00:13:07,000 --> 00:13:09,000
Machinery算法去预测

374
00:13:10,000 --> 00:13:11,000
所谓的什么好预测

375
00:13:11,000 --> 00:13:13,000
就是说你最好是在

376
00:13:14,000 --> 00:13:15,000
0

377
00:13:15,000 --> 00:13:16,000
就是说均值为0

378
00:13:16,000 --> 00:13:18,000
就是说在0的左右

379
00:13:18,000 --> 00:13:19,000
然后呢

380
00:13:19,000 --> 00:13:21,000
你们尽量分的比较开

381
00:13:21,000 --> 00:13:22,000
就尽量那些值

382
00:13:22,000 --> 00:13:24,000
不要在基本上聚在一起

383
00:13:25,000 --> 00:13:27,000
如果你那些聚色值都聚在一起的话

384
00:13:27,000 --> 00:13:29,000
它不适合用来做分类

385
00:13:29,000 --> 00:13:30,000
因为那就是

386
00:13:30,000 --> 00:13:31,000
你就是说

387
00:13:31,000 --> 00:13:32,000
你不能有特别大的值

388
00:13:32,000 --> 00:13:34,000
你也不要把值放在一起

389
00:13:34,000 --> 00:13:35,000
所以整个这个函数说

390
00:13:35,000 --> 00:13:37,000
尽量使得你这个offsite

391
00:13:37,000 --> 00:13:38,000
这些值是

392
00:13:38,000 --> 00:13:39,000
因为它是用预测的

393
00:13:39,000 --> 00:13:42,000
所以使得它分的比较开

394
00:13:42,000 --> 00:13:44,000
这样子适合用

395
00:13:44,000 --> 00:13:45,000
我们的

396
00:13:45,000 --> 00:13:46,000
就是说你的数值大小

397
00:13:46,000 --> 00:13:48,000
你的这个均值

398
00:13:48,000 --> 00:13:49,000
方差都长得比较好

399
00:13:49,000 --> 00:13:50,000
适合做预测

400
00:13:50,000 --> 00:13:52,000
就是说这里面有一些

401
00:13:52,000 --> 00:13:54,000
一般来说根据这10

402
00:13:54,000 --> 00:13:55,000
5

403
00:13:55,000 --> 00:13:56,000
可以看一下书上面是

404
00:13:56,000 --> 00:13:57,000
怎么给大家讲的

405
00:13:57,000 --> 00:13:58,000
这是根据

406
00:13:58,000 --> 00:14:01,000
基本上是根据你实际数据里面

407
00:14:01,000 --> 00:14:02,000
看一眼这个长什么值

408
00:14:02,000 --> 00:14:03,000
这等于在是说

409
00:14:03,000 --> 00:14:04,000
对你那个feature

410
00:14:04,000 --> 00:14:05,000
做了那些

411
00:14:07,000 --> 00:14:08,000
规划的事情

412
00:14:10,000 --> 00:14:11,000
最后这个函数

413
00:14:11,000 --> 00:14:12,000
其实就是说

414
00:14:12,000 --> 00:14:14,000
给定一个anchor

415
00:14:14,000 --> 00:14:15,000
给定一个label

416
00:14:15,000 --> 00:14:17,000
我是怎么样把它

417
00:14:17,000 --> 00:14:19,000
生成我们真实的

418
00:14:19,000 --> 00:14:21,000
就是这个是我们标注的那些

419
00:14:21,000 --> 00:14:22,000
东西

420
00:14:22,000 --> 00:14:25,000
我们要生成我们用黑用来预测的东西

421
00:14:25,000 --> 00:14:26,000
我就不给大家完全讲了

422
00:14:26,000 --> 00:14:27,000
就是说给大家

423
00:14:27,000 --> 00:14:29,000
返回一个什么东西呢

424
00:14:29,000 --> 00:14:31,000
返回的是每一个anchor

425
00:14:31,000 --> 00:14:33,000
他到真实的

426
00:14:33,000 --> 00:14:35,000
标注块那个offsite

427
00:14:35,000 --> 00:14:37,000
offset

428
00:14:37,000 --> 00:14:38,000
和mask

429
00:14:38,000 --> 00:14:41,000
就是说这个标记框是

430
00:14:41,000 --> 00:14:43,000
如果mask等于0的话

431
00:14:43,000 --> 00:14:45,000
那么表示这个模框

432
00:14:45,000 --> 00:14:47,000
就是一个背景模框

433
00:14:47,000 --> 00:14:48,000
不用了

434
00:14:48,000 --> 00:14:50,000
不用预测它的那个偏移值

435
00:14:50,000 --> 00:14:51,000
如果是等于1的话

436
00:14:51,000 --> 00:14:52,000
就表示这个模框

437
00:14:52,000 --> 00:14:56,000
其实是对应了一个真实的边框

438
00:14:56,000 --> 00:14:57,000
以及最后这个是说

439
00:14:57,000 --> 00:14:58,000
你这个模框

440
00:14:58,000 --> 00:15:00,000
它的对应的那个lay的标号

441
00:15:01,000 --> 00:15:02,000
OK

442
00:15:02,000 --> 00:15:04,000
这就是说给定模框

443
00:15:04,000 --> 00:15:07,000
我们来生成他要的标号

444
00:15:07,000 --> 00:15:08,000
用来训练的

445
00:15:10,000 --> 00:15:11,000
然后我们来看一下

446
00:15:11,000 --> 00:15:12,000
就是说看一个样例

447
00:15:12,000 --> 00:15:14,000
就是说我们没有给大家一一的去讲

448
00:15:14,000 --> 00:15:15,000
这一行代码

449
00:15:15,000 --> 00:15:18,000
就给大家一个主要是给大家一个直观的理解

450
00:15:18,000 --> 00:15:20,000
就每个函数在干什么事情

451
00:15:20,000 --> 00:15:21,000
以及说

452
00:15:21,000 --> 00:15:24,000
里面大概算算什么样子

453
00:15:25,000 --> 00:15:26,000
我们给个样例

454
00:15:26,000 --> 00:15:29,000
就是说我们先生成一个ground truth的bonnet box

455
00:15:29,000 --> 00:15:30,000
就是这两个

456
00:15:30,000 --> 00:15:31,000
就是说这个黑的

457
00:15:31,000 --> 00:15:32,000
我们画出来的黑的

458
00:15:32,000 --> 00:15:34,000
狗和猫这两个黑的

459
00:15:35,000 --> 00:15:36,000
然后呢

460
00:15:37,000 --> 00:15:39,000
anchor就是我们生出来的东西

461
00:15:39,000 --> 00:15:41,000
就是说我们生成了0

462
00:15:41,000 --> 00:15:43,000
1 2 3 4

463
00:15:43,000 --> 00:15:44,000
就是四个

464
00:15:45,000 --> 00:15:47,000
anchor就是我们生成出来的

465
00:15:47,000 --> 00:15:48,000
我们画在这个地方

466
00:15:50,000 --> 00:15:51,000
然后我们又运行这个函数的话

467
00:15:51,000 --> 00:15:53,000
会得到什么东西呢

468
00:15:53,000 --> 00:15:56,000
就把它放进去

469
00:15:56,000 --> 00:15:58,000
unsqueeze就是我们加一个维度

470
00:15:58,000 --> 00:16:00,000
要加一个p量维度进来

471
00:16:00,000 --> 00:16:02,000
因为我们要模拟出一个p量

472
00:16:02,000 --> 00:16:04,000
模拟出一个p量打下为1

473
00:16:05,000 --> 00:16:06,000
首先label2

474
00:16:06,000 --> 00:16:08,000
就label里面有三个东西

475
00:16:08,000 --> 00:16:10,000
最后一个东西对应的是

476
00:16:10,000 --> 00:16:13,000
每个毛框它的类别

477
00:16:13,000 --> 00:16:15,000
可以看到我们有五个毛框

478
00:16:16,000 --> 00:16:18,000
0是背景类

479
00:16:19,000 --> 00:16:20,000
0对应的是背景

480
00:16:20,000 --> 00:16:21,000
就没有东西

481
00:16:21,000 --> 00:16:23,000
1应该是对应的是

482
00:16:23,000 --> 00:16:25,000
1对应的是狗还是猫

483
00:16:25,000 --> 00:16:28,000
2反正是1和2对应的是狗还是猫

484
00:16:28,000 --> 00:16:30,000
我们可以回过头来看一下为什么

485
00:16:30,000 --> 00:16:31,000
首先第一个

486
00:16:32,000 --> 00:16:33,000
0这个东西

487
00:16:33,000 --> 00:16:35,000
这个框是给了背景类

488
00:16:35,000 --> 00:16:37,000
基本上什么都没框到

489
00:16:38,000 --> 00:16:39,000
1给的是什么

490
00:16:39,000 --> 00:16:42,000
1给的是狗

491
00:16:43,000 --> 00:16:44,000
因为1的话

492
00:16:44,000 --> 00:16:45,000
为什么给狗

493
00:16:45,000 --> 00:16:46,000
虽然它框的不好

494
00:16:46,000 --> 00:16:48,000
但是它没有更好的了

495
00:16:48,000 --> 00:16:49,000
对吧

496
00:16:49,000 --> 00:16:50,000
就没有另外一个更好的

497
00:16:50,000 --> 00:16:51,000
可以给狗了

498
00:16:52,000 --> 00:16:53,000
所以就是说

499
00:16:53,000 --> 00:16:55,000
就算你这个框

500
00:16:55,000 --> 00:16:57,000
确实跟我的狗差别还有点远

501
00:16:57,000 --> 00:16:58,000
但是因为

502
00:16:58,000 --> 00:16:59,000
如果除了你之外

503
00:16:59,000 --> 00:17:02,000
没有别的anchor能够到狗了

504
00:17:02,000 --> 00:17:03,000
如果不给的话

505
00:17:03,000 --> 00:17:05,000
我觉得这个标号就没用了

506
00:17:05,000 --> 00:17:06,000
所以我还是给你

507
00:17:07,000 --> 00:17:08,000
接下来就是说

508
00:17:09,000 --> 00:17:12,000
第三我也给的是2

509
00:17:13,000 --> 00:17:15,000
就是说3给的也是2

510
00:17:16,000 --> 00:17:17,000
4呢

511
00:17:21,000 --> 00:17:23,000
0122给的是2

512
00:17:23,000 --> 00:17:25,000
2给的是猫

513
00:17:25,000 --> 00:17:27,000
3给的是背景

514
00:17:27,000 --> 00:17:28,000
4给的还是2

515
00:17:28,000 --> 00:17:30,000
是因为3给的是背景

516
00:17:30,000 --> 00:17:31,000
是因为说

517
00:17:31,000 --> 00:17:33,000
虽然就3跟

518
00:17:33,000 --> 00:17:37,000
因为你的cat已经有2和4

519
00:17:37,000 --> 00:17:40,000
它给你map住了

520
00:17:40,000 --> 00:17:42,000
所以3

521
00:17:42,000 --> 00:17:44,000
它跟你的IOU

522
00:17:44,000 --> 00:17:45,000
已经在0.5以下了

523
00:17:45,000 --> 00:17:46,000
我们有个threshold

524
00:17:46,000 --> 00:17:48,000
所以已经在0.5以下了

525
00:17:48,000 --> 00:17:49,000
所以我们就不要这一块

526
00:17:49,000 --> 00:17:51,000
就是说已经有更好的

527
00:17:51,000 --> 00:17:52,000
能够表示这个东西了

528
00:17:52,000 --> 00:17:53,000
所以在狗来讲

529
00:17:53,000 --> 00:17:55,000
它没有更好的表示这一个

530
00:17:55,000 --> 00:17:57,000
所以我们还是把这个毛框留下来了

531
00:17:57,000 --> 00:17:58,000
所以就是说

532
00:17:58,000 --> 00:17:59,000
给大家大概解释一下

533
00:17:59,000 --> 00:18:01,000
整个标注什么样子

534
00:18:02,000 --> 00:18:03,000
那么接下来就是说

535
00:18:03,000 --> 00:18:05,000
中间那个就是mask

536
00:18:05,000 --> 00:18:06,000
mask就是说

537
00:18:06,000 --> 00:18:08,000
它的就是number

538
00:18:08,000 --> 00:18:10,000
就是毛框的个数乘4了

539
00:18:10,000 --> 00:18:11,000
然后000就表示说

540
00:18:11,000 --> 00:18:13,000
第一个毛框是背景

541
00:18:13,000 --> 00:18:14,000
接下来4个1

542
00:18:14,000 --> 00:18:16,000
就表示这一个毛框

543
00:18:16,000 --> 00:18:17,000
是对应的有类的

544
00:18:17,000 --> 00:18:18,000
接下来就有4个

545
00:18:18,000 --> 00:18:20,000
然后接下来是4个0

546
00:18:20,000 --> 00:18:21,000
那就表示这一个毛框

547
00:18:21,000 --> 00:18:23,000
它的不是背景类

548
00:18:23,000 --> 00:18:25,000
所以在mask这件事情

549
00:18:25,000 --> 00:18:27,000
就最后它是offset

550
00:18:27,000 --> 00:18:29,000
就它的偏移

551
00:18:29,000 --> 00:18:30,000
偏移的话

552
00:18:30,000 --> 00:18:32,000
也就是说每一个

553
00:18:32,000 --> 00:18:33,000
就每一个毛框

554
00:18:33,000 --> 00:18:35,000
就是有4个值了

555
00:18:35,000 --> 00:18:36,000
就你基本可以看到

556
00:18:36,000 --> 00:18:37,000
就是4个值

557
00:18:37,000 --> 00:18:39,000
就是有正有负了

558
00:18:39,000 --> 00:18:40,000
就是基本上给大家看到

559
00:18:40,000 --> 00:18:42,000
这个就行了

560
00:18:42,000 --> 00:18:44,000
就是每个毛框对应的过去

561
00:18:44,000 --> 00:18:45,000
就这个是0

562
00:18:45,000 --> 00:18:46,000
因为这个我不需要预测

563
00:18:46,000 --> 00:18:48,000
所以接下来就是

564
00:18:49,000 --> 00:18:50,000
接下来就是说

565
00:18:50,000 --> 00:18:52,000
这4个是有真实值的

566
00:18:52,000 --> 00:18:53,000
然后呢

567
00:18:53,000 --> 00:18:55,000
这个也是有真实的值的

568
00:18:55,000 --> 00:18:56,000
然后对于

569
00:18:56,000 --> 00:18:57,000
没有是背景类的话

570
00:18:57,000 --> 00:18:59,000
那当然是代表0

571
00:18:59,000 --> 00:19:00,000
OK

572
00:19:00,000 --> 00:19:01,000
所以这就是

573
00:19:01,000 --> 00:19:03,000
怎么样生成毛框

574
00:19:03,000 --> 00:19:05,000
以及把毛框

575
00:19:05,000 --> 00:19:06,000
映射到

576
00:19:08,000 --> 00:19:09,000
贴标号的过程

577
00:19:12,000 --> 00:19:13,000
当然另外一个是说

578
00:19:13,000 --> 00:19:14,000
你怎么样翻转回来

579
00:19:14,000 --> 00:19:16,000
怎么样给一个offset

580
00:19:16,000 --> 00:19:18,000
给一个毛框怎么样

581
00:19:18,000 --> 00:19:20,000
就把刚刚那个变换

582
00:19:20,000 --> 00:19:21,000
逆变换一下

583
00:19:21,000 --> 00:19:22,000
回来

584
00:19:23,000 --> 00:19:24,000
那么最后的话

585
00:19:24,000 --> 00:19:26,000
就是讲一下NMS

586
00:19:26,000 --> 00:19:27,000
就是给一个

587
00:19:27,000 --> 00:19:29,000
给一堆box

588
00:19:29,000 --> 00:19:31,000
给一个

589
00:19:31,000 --> 00:19:33,000
每一个它对应的预测值

590
00:19:33,000 --> 00:19:36,000
以及我的一个预值

591
00:19:37,000 --> 00:19:39,000
基本上就是我们刚刚那个事情

592
00:19:39,000 --> 00:19:40,000
就不给大家讲了

593
00:19:40,000 --> 00:19:41,000
就是基本上就是

594
00:19:42,000 --> 00:19:43,000
当你的b是大于

595
00:19:43,000 --> 00:19:45,000
就是说我们先排序

596
00:19:45,000 --> 00:19:46,000
按照score排序

597
00:19:47,000 --> 00:19:48,000
如果

598
00:19:48,000 --> 00:19:49,000
如果它大于0的话

599
00:19:49,000 --> 00:19:50,000
我们就一直去做这事情

600
00:19:50,000 --> 00:19:52,000
直到我们把所有的东西

601
00:19:52,000 --> 00:19:53,000
都防空过了

602
00:19:53,000 --> 00:19:55,000
首先是我们把最大的

603
00:19:55,000 --> 00:19:56,000
值拿出来

604
00:19:56,000 --> 00:19:57,000
因为排好序了

605
00:19:57,000 --> 00:19:58,000
就把b0拿出来

606
00:19:58,000 --> 00:20:00,000
然后把这个keep住

607
00:20:01,000 --> 00:20:02,000
然后

608
00:20:02,000 --> 00:20:04,000
接下来就是说

609
00:20:04,000 --> 00:20:05,000
我们算一下IOU

610
00:20:06,000 --> 00:20:07,000
跟它跟b0

611
00:20:07,000 --> 00:20:08,000
所有的IOU

612
00:20:08,000 --> 00:20:10,000
大于某一个值的

613
00:20:10,000 --> 00:20:11,000
全部

614
00:20:11,000 --> 00:20:12,000
去掉

615
00:20:12,000 --> 00:20:13,000
剩下的

616
00:20:14,000 --> 00:20:15,000
给成b

617
00:20:15,000 --> 00:20:16,000
然后继续再重复的做

618
00:20:16,000 --> 00:20:17,000
重复的做

619
00:20:17,000 --> 00:20:18,000
直到所有的东西流出来

620
00:20:18,000 --> 00:20:19,000
好

621
00:20:19,000 --> 00:20:20,000
这是NMS

622
00:20:20,000 --> 00:20:21,000
最后我们

623
00:20:22,000 --> 00:20:23,000
这个就是说

624
00:20:23,000 --> 00:20:25,000
这个我们也不给大家过一遍了

625
00:20:25,000 --> 00:20:26,000
就是

626
00:20:27,000 --> 00:20:28,000
这个东西干嘛呢

627
00:20:28,000 --> 00:20:29,000
就是说给每一个

628
00:20:30,000 --> 00:20:31,000
给一个batch size

629
00:20:31,000 --> 00:20:32,000
就给一个p量的话

630
00:20:32,000 --> 00:20:34,000
对于每一个样本

631
00:20:34,000 --> 00:20:35,000
做一次

632
00:20:37,000 --> 00:20:38,000
把预测值拿出来

633
00:20:38,000 --> 00:20:40,000
然后用一次NMS

634
00:20:41,000 --> 00:20:42,000
OK我们就是这个

635
00:20:42,000 --> 00:20:43,000
就是长的

636
00:20:43,000 --> 00:20:44,000
看上去长得比较

637
00:20:44,000 --> 00:20:45,000
啰里吧嗦的

638
00:20:45,000 --> 00:20:47,000
实际上就是做一次预测了

639
00:20:47,000 --> 00:20:48,000
所以它的预测

640
00:20:48,000 --> 00:20:50,000
比图片分类还要麻烦挺多的

641
00:20:52,000 --> 00:20:53,000
所以最后我们看一个样例

642
00:20:54,000 --> 00:20:55,000
就是这是我的

643
00:20:55,000 --> 00:20:56,000
四个毛框

644
00:20:57,000 --> 00:20:58,000
这是我的offset

645
00:20:58,000 --> 00:20:59,000
offset我们全是

646
00:20:59,000 --> 00:21:00,000
全是零了

647
00:21:01,000 --> 00:21:02,000
所以它的

648
00:21:02,000 --> 00:21:03,000
然后我们的就是

649
00:21:03,000 --> 00:21:05,000
这个类别的概率

650
00:21:05,000 --> 00:21:07,000
就是说因为我们这里是几个类

651
00:21:07,000 --> 00:21:08,000
我们是三个类

652
00:21:08,000 --> 00:21:09,000
三个类就是说

653
00:21:09,000 --> 00:21:10,000
我们说对于背景

654
00:21:10,000 --> 00:21:12,000
猫和狗的三个类的预测值

655
00:21:12,000 --> 00:21:13,000
所以每一

656
00:21:13,000 --> 00:21:15,000
就每一列就是一个

657
00:21:15,000 --> 00:21:16,000
一个那个

658
00:21:17,000 --> 00:21:18,000
一个毛框的预测

659
00:21:18,000 --> 00:21:20,000
OK所以每一列加下去

660
00:21:20,000 --> 00:21:21,000
就一了

661
00:21:22,000 --> 00:21:24,000
然后可以看到是说

662
00:21:24,000 --> 00:21:25,000
这个是

663
00:21:26,000 --> 00:21:27,000
也是刚刚我们那个图片

664
00:21:27,000 --> 00:21:29,000
就slide用的图片

665
00:21:29,000 --> 00:21:30,000
就是说

666
00:21:30,000 --> 00:21:32,000
假设没有做NMS的时候

667
00:21:32,000 --> 00:21:34,000
它就是四个预测值

668
00:21:34,000 --> 00:21:35,000
然后它的score

669
00:21:35,000 --> 00:21:37,000
它的位置都在这个地方

670
00:21:37,000 --> 00:21:39,000
如果你用了

671
00:21:40,000 --> 00:21:41,000
我们现在就

672
00:21:41,000 --> 00:21:43,000
就用了NMS之后

673
00:21:44,000 --> 00:21:46,000
基本就只剩我的狗和我的

674
00:21:46,000 --> 00:21:47,000
最大的那个狗和猫了

675
00:21:47,000 --> 00:21:49,000
就相对来说就比较简单了

676
00:21:50,000 --> 00:21:51,000
OK所以这就是

677
00:21:51,000 --> 00:21:55,000
我们对于毛框相关的一个代码的

678
00:21:55,000 --> 00:21:56,000
一个过一遍

679
00:21:56,000 --> 00:21:57,000
因为相对来说

680
00:21:57,000 --> 00:21:58,000
它代码比较多

681
00:21:58,000 --> 00:21:59,000
我们

682
00:22:00,000 --> 00:22:01,000
行数应该是

683
00:22:01,000 --> 00:22:02,000
这个代码行数

684
00:22:02,000 --> 00:22:04,000
比我们的之前的做图片分类

685
00:22:04,000 --> 00:22:06,000
完整的图片分类还要多很多

686
00:22:06,000 --> 00:22:08,000
这是因为毛框的引入

687
00:22:08,000 --> 00:22:10,000
让整个算法变得更加复杂了

688
00:22:10,000 --> 00:22:11,000
具体来说

689
00:22:11,000 --> 00:22:12,000
我们

690
00:22:12,000 --> 00:22:14,000
我们讲了三个

691
00:22:14,000 --> 00:22:15,000
那三个

692
00:22:15,000 --> 00:22:17,000
一个是怎么样

693
00:22:17,000 --> 00:22:19,000
对以每个像素为中心生成

694
00:22:19,000 --> 00:22:21,000
上百万个毛框出来

695
00:22:21,000 --> 00:22:22,000
第二

696
00:22:22,000 --> 00:22:24,000
对这几百万个毛框

697
00:22:24,000 --> 00:22:26,000
给定我这个图片里面的

698
00:22:26,000 --> 00:22:28,000
真实的边框

699
00:22:28,000 --> 00:22:29,000
给每个毛框

700
00:22:29,000 --> 00:22:30,000
要么是说

701
00:22:30,000 --> 00:22:32,000
它是对应的是背景

702
00:22:32,000 --> 00:22:33,000
要么是它对应的是

703
00:22:33,000 --> 00:22:35,000
某一个具体的物体

704
00:22:35,000 --> 00:22:36,000
以及它的offset

705
00:22:37,000 --> 00:22:38,000
当然具体是说

706
00:22:38,000 --> 00:22:39,000
你offset是怎么算出来的

707
00:22:39,000 --> 00:22:41,000
是有自己的公式算的

708
00:22:41,000 --> 00:22:43,000
不是一减就出来的

709
00:22:43,000 --> 00:22:45,000
最后一个是说

710
00:22:45,000 --> 00:22:46,000
在预测的时候

711
00:22:46,000 --> 00:22:47,000
对每个毛框有预测的

712
00:22:47,000 --> 00:22:48,000
毛框值

713
00:22:48,000 --> 00:22:51,000
预测值和标号的预测的时候

714
00:22:51,000 --> 00:22:53,000
我怎么样用NMS

715
00:22:53,000 --> 00:22:54,000
把整个预测值

716
00:22:54,000 --> 00:22:57,000
使得从更加简单

717
00:22:57,000 --> 00:22:59,000
把相似的东西全部去掉

718
00:22:59,000 --> 00:23:00,000
OK

719
00:23:00,000 --> 00:23:01,000
我们就讲到这三个技术

720
00:23:03,000 --> 00:23:05,000
有了我们的今天

721
00:23:06,000 --> 00:23:08,000
讲的怎么样读取一个目标数据

722
00:23:08,000 --> 00:23:10,000
以及怎么样生成毛框之后

723
00:23:10,000 --> 00:23:13,000
我们之后就可以直接来讲

724
00:23:13,000 --> 00:23:15,000
具体一个模型

725
00:23:15,000 --> 00:23:16,000
目标检测模型

726
00:23:16,000 --> 00:23:18,000
是怎么样利用这些信息

727
00:23:18,000 --> 00:23:19,000
来做预测的

