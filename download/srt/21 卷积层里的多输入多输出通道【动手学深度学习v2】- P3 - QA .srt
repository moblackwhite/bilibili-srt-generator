1
00:00:00,000 --> 00:00:01,159
好

2
00:00:01,179 --> 00:00:05,360
我们来看一下我们的多输入和多输出通道的代码实现

3
00:00:06,360 --> 00:00:08,919
我们直接从零开始来跟你实现一遍

4
00:00:08,939 --> 00:00:16,640
首先我们来实现一个我们2D互相关运算的

5
00:00:16,660 --> 00:00:19,320
但是能处理多个输入通道是怎么算的

6
00:00:19,320 --> 00:00:23,679
所以我们在Core2D这个函数

7
00:00:23,679 --> 00:00:27,039
其实已经在昨天我们已经讲过了怎么算的

8
00:00:27,039 --> 00:00:30,119
我们就存在D2L的小python文件里面

9
00:00:30,140 --> 00:00:31,519
我们现在可以直接调用它

10
00:00:32,799 --> 00:00:36,759
假设我的K是一个3D的话

11
00:00:36,780 --> 00:00:38,519
X和K都是3D的话

12
00:00:38,519 --> 00:00:39,439
那么我干嘛呢

13
00:00:39,439 --> 00:00:43,599
就是对于我把X和Kzip起来

14
00:00:43,799 --> 00:00:44,960
每次zip的话

15
00:00:44,960 --> 00:00:47,640
它就会对最外的通道

16
00:00:47,659 --> 00:00:50,159
就是输入通道那个维度做变立

17
00:00:50,599 --> 00:00:56,799
每一次这个for我就是拿出它对应的输入通道里面

18
00:00:56,800 --> 00:00:57,800
那个小矩阵

19
00:00:58,560 --> 00:01:02,920
然后我们把它做互相的运算

20
00:01:03,640 --> 00:01:05,359
然后最后按元素求和

21
00:01:05,359 --> 00:01:07,640
就是对没有所有的输入通道求和

22
00:01:08,159 --> 00:01:12,159
这就是多输入的时候怎么算互相关

23
00:01:13,840 --> 00:01:14,800
然后我们可以验证一下

24
00:01:14,800 --> 00:01:17,640
这个我们就不给大家仔细看了

25
00:01:17,640 --> 00:01:20,760
这个就是我们在我们的slice

26
00:01:20,760 --> 00:01:23,600
我们的幻灯片里面

27
00:01:23,600 --> 00:01:26,680
图里面那些数值

28
00:01:26,680 --> 00:01:28,200
我们把它敲进来

29
00:01:28,200 --> 00:01:30,320
可以看到我们的输出应该是

30
00:01:30,320 --> 00:01:32,600
大家可能记得还有56这个数字

31
00:01:32,760 --> 00:01:36,440
就跟我们的幻灯片是能够一一对应的

32
00:01:36,440 --> 00:01:39,160
就是验证一下我们的视线是正确的

33
00:01:42,160 --> 00:01:44,840
那么接下来多通道怎么做呢

34
00:01:45,600 --> 00:01:46,640
多通道就是说

35
00:01:46,640 --> 00:01:50,160
那么现在X还是一个3D的

36
00:01:50,160 --> 00:01:51,480
但是K是4D

37
00:01:52,120 --> 00:01:54,160
最外面那个位是输出通道

38
00:01:55,280 --> 00:01:56,040
那么怎么办呢

39
00:01:56,040 --> 00:02:00,439
就是说对每一个输出通道的K

40
00:02:00,439 --> 00:02:01,439
拿出他的小K

41
00:02:01,439 --> 00:02:03,040
小K是一个3D的一个tensor

42
00:02:04,040 --> 00:02:06,880
他跟你的完整的X

43
00:02:06,880 --> 00:02:10,680
做支持多输入通道的一个互相关运算

44
00:02:12,000 --> 00:02:14,680
这样子拿到一个2D的一个矩阵

45
00:02:14,680 --> 00:02:16,439
然后把所有东西都拿出来

46
00:02:16,439 --> 00:02:20,400
然后在0这个维度上

47
00:02:20,400 --> 00:02:21,960
就清净一个新的维度

48
00:02:21,960 --> 00:02:23,360
然后把你stack起来

49
00:02:23,360 --> 00:02:25,719
就是把你一个一个给你堆起来

50
00:02:26,360 --> 00:02:27,840
这就stack这个操作

51
00:02:29,840 --> 00:02:30,640
那么可以看一下

52
00:02:30,840 --> 00:02:32,319
假设我把我的K

53
00:02:33,719 --> 00:02:35,520
我们K之前是一个3D的东西

54
00:02:35,520 --> 00:02:39,200
我们说我们创建一个三个输出通道的话

55
00:02:39,280 --> 00:02:40,560
就是我把K

56
00:02:40,560 --> 00:02:42,120
我第二个输出通道是K加1

57
00:02:42,120 --> 00:02:43,520
第三个通道是K加2

58
00:02:43,800 --> 00:02:46,759
在0的这个维度上stack起来

59
00:02:47,000 --> 00:02:49,000
那么我们的K就是

60
00:02:49,000 --> 00:02:50,399
输出通道是3

61
00:02:51,000 --> 00:02:53,399
输入是2

62
00:02:53,879 --> 00:02:55,799
你的高和宽分别是2

63
00:02:57,159 --> 00:02:58,959
然后你做他的话

64
00:02:58,959 --> 00:03:01,199
那么就会得到你的每一个

65
00:03:01,759 --> 00:03:03,879
还是一样的

66
00:03:03,879 --> 00:03:05,799
之前就是多通道的时候

67
00:03:05,799 --> 00:03:07,599
你会得到一个2×2的一个输出

68
00:03:07,799 --> 00:03:10,280
但是你做了多的输出通道的话

69
00:03:10,280 --> 00:03:11,759
那就有三个这样子的东西

70
00:03:12,199 --> 00:03:15,000
那就一个3×2×2的一个输出了

71
00:03:15,199 --> 00:03:16,239
这是多通道

72
00:03:16,759 --> 00:03:21,120
那么接下来我们来验证一下

73
00:03:21,120 --> 00:03:24,919
我们说1×1的卷机等价于一个全连接

74
00:03:25,840 --> 00:03:27,719
我们来看一下具体是怎么过去的

75
00:03:29,840 --> 00:03:30,799
我们定一个

76
00:03:30,799 --> 00:03:33,120
假设是一个特殊的

77
00:03:33,120 --> 00:03:35,519
用全连接来实现一个1×1的

78
00:03:35,519 --> 00:03:39,439
多输入多输出通道的互相关操作

79
00:03:40,680 --> 00:03:43,280
首先我们拿到我们的X的shape

80
00:03:43,280 --> 00:03:45,759
就是CI H和W

81
00:03:47,039 --> 00:03:48,719
它的output就是CO

82
00:03:48,719 --> 00:03:51,000
就是你的K的第一个shape了

83
00:03:52,639 --> 00:03:53,679
那么接下来我们知道

84
00:03:53,799 --> 00:03:57,919
我们可以把Xreshape成一个CI

85
00:03:57,919 --> 00:04:01,439
因为我们的通道数在最临尾

86
00:04:01,599 --> 00:04:02,719
所以我们放在这里

87
00:04:02,840 --> 00:04:06,599
然后把你的高和宽就是拉成一条项链

88
00:04:08,759 --> 00:04:09,280
同样的话

89
00:04:09,280 --> 00:04:13,120
你的K就是一个CO×CI×1×1的东西

90
00:04:13,120 --> 00:04:15,239
我们就reshape把最后两个维度拿掉

91
00:04:15,239 --> 00:04:16,199
就变成一个矩阵

92
00:04:16,319 --> 00:04:19,079
那么这样子我的X和K都是一个矩阵了

93
00:04:19,759 --> 00:04:21,519
直接要用矩阵乘法

94
00:04:21,839 --> 00:04:24,120
K×X

95
00:04:25,079 --> 00:04:27,399
也就是说之前我们是反过来写的

96
00:04:27,519 --> 00:04:28,599
因为我们都转制了

97
00:04:28,599 --> 00:04:31,039
就这么K×X写过去

98
00:04:32,439 --> 00:04:34,639
最后你的Y就是你的输出

99
00:04:34,759 --> 00:04:36,120
就是一个CO不变

100
00:04:36,279 --> 00:04:39,480
那么你的后面列数

101
00:04:39,480 --> 00:04:40,839
它其实是一条向量

102
00:04:41,159 --> 00:04:43,639
那我再reshape成一个2D的东西

103
00:04:43,800 --> 00:04:45,599
H×W回去

104
00:04:46,199 --> 00:04:46,680
OK

105
00:04:46,680 --> 00:04:49,560
就是说怎么样通过reshape

106
00:04:49,560 --> 00:04:54,479
通过矩阵乘法来实现1×1的一个卷积操作

107
00:04:54,719 --> 00:04:56,879
这就是说1×1的卷积

108
00:04:56,879 --> 00:04:58,399
它等价于一个全连阶层

109
00:04:59,759 --> 00:05:00,079
OK

110
00:05:00,079 --> 00:05:01,000
我们来验证一下

111
00:05:01,399 --> 00:05:05,519
我们创建一个X是一个3×3×3

112
00:05:05,879 --> 00:05:08,759
然后我们的K就是输入通道是3

113
00:05:08,759 --> 00:05:09,480
因为这是3

114
00:05:09,480 --> 00:05:11,519
输出的是2

115
00:05:11,680 --> 00:05:13,039
颗浓数是1×1

116
00:05:14,240 --> 00:05:15,360
我们当然可以算一下

117
00:05:15,520 --> 00:05:17,720
我们按照我们定义的方法

118
00:05:17,720 --> 00:05:19,680
把X和K放进来

119
00:05:19,800 --> 00:05:21,160
和我们之前有算过

120
00:05:21,160 --> 00:05:22,639
我们之前定义过是怎么算的

121
00:05:22,759 --> 00:05:24,439
我们也把这个东西算放过去

122
00:05:24,439 --> 00:05:25,680
就之前我们实现的函数

123
00:05:26,319 --> 00:05:30,000
大家可以看到Y1应该是等于Y2

124
00:05:30,480 --> 00:05:33,319
他们之间应该是绝对值

125
00:05:33,560 --> 00:05:38,520
它的相减绝对值的求和是小于1亿富6的

126
00:05:39,520 --> 00:05:42,720
因为要1亿富6是因为有一点浮点的进度的区别

127
00:05:43,640 --> 00:05:45,120
我们很难保证全连

128
00:05:45,120 --> 00:05:47,480
但是小于1亿富6就意味着说

129
00:05:47,840 --> 00:05:50,000
几乎认为它完全一样了

130
00:05:50,880 --> 00:05:51,160
OK

131
00:05:51,160 --> 00:05:55,360
这就是我们说怎么要用全连接

132
00:05:55,360 --> 00:05:58,080
或者说局限乘法来实现一层一的卷迹

133
00:05:59,120 --> 00:05:59,280
好

134
00:05:59,280 --> 00:06:01,880
这个就是说我们给大家介绍了

135
00:06:01,880 --> 00:06:03,800
如何手写一遍

136
00:06:04,040 --> 00:06:07,040
怎么处理多输入和多输出通道

137
00:06:07,640 --> 00:06:10,040
然后你如果你具体要调用的

138
00:06:11,000 --> 00:06:14,319
我的PyTorch怎么调用的话

139
00:06:14,319 --> 00:06:15,240
我们之前讲过

140
00:06:15,879 --> 00:06:17,600
那么你要调用它的话

141
00:06:17,600 --> 00:06:22,040
那就是这个是你的输出通道

142
00:06:22,040 --> 00:06:24,920
那么这个就是你指定的输入通道就行了

143
00:06:25,400 --> 00:06:28,360
这就是另外两个最重要的超参数

144
00:06:29,080 --> 00:06:29,439
OK

145
00:06:30,080 --> 00:06:32,759
所以我们实现就讲到这里

146
00:06:32,759 --> 00:06:35,120
我们接下来看一下我们的QA

