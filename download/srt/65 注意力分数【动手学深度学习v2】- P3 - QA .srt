1
00:00:00,000 --> 00:00:04,480
OK,就是说我们来先讲注意力打分函数的实现

2
00:00:04,480 --> 00:00:05,719
然后给大家打一次1

3
00:00:05,719 --> 00:00:07,360
然后再往后跳

4
00:00:08,040 --> 00:00:11,880
打这个东西我们就会要稍微给大家讲一下代码

5
00:00:12,000 --> 00:00:13,040
就稍微长一点点

6
00:00:13,040 --> 00:00:15,720
因为毕竟它是比较重要的话题

7
00:00:16,839 --> 00:00:18,240
OK,注意力打分函数

8
00:00:18,240 --> 00:00:24,000
我们来实现刚刚讲过的加信和点击的两个版本

9
00:00:25,719 --> 00:00:27,120
首先我们要讲一个

10
00:00:27,199 --> 00:00:30,640
这个东西虽然我们现在还用不到

11
00:00:30,640 --> 00:00:33,039
但是我们在接下来会用到一个东西

12
00:00:33,039 --> 00:00:35,439
就是叫做Masked Softmax

13
00:00:35,439 --> 00:00:37,600
我们其实昨天已经看过了

14
00:00:37,600 --> 00:00:38,679
就是说上一次我们看过

15
00:00:38,679 --> 00:00:40,799
就是说在求softmax

16
00:00:40,799 --> 00:00:44,400
如果你一个序列你填充了一些东西的话

17
00:00:44,560 --> 00:00:49,159
那么我们就可以把那些填充的东西不算softmax

18
00:00:49,200 --> 00:00:51,560
不算在我的做cross-entropy的时候

19
00:00:51,560 --> 00:00:52,600
那个loss不算

20
00:00:53,840 --> 00:00:56,359
Softmax如果你叫valid length是什么意思

21
00:00:56,759 --> 00:00:57,960
就是valid length就是说

22
00:00:57,960 --> 00:01:01,359
我说我一个向量里面

23
00:01:01,880 --> 00:01:02,920
如果有n个值

24
00:01:03,280 --> 00:01:06,400
我算softmax就把n个值做一个exp

25
00:01:06,400 --> 00:01:08,280
然后把它加起来每一个除对吧

26
00:01:08,719 --> 00:01:09,920
但我现在告诉你说

27
00:01:09,920 --> 00:01:12,519
我虽然给你一个常为n的向量

28
00:01:12,560 --> 00:01:13,519
但是我告诉你说

29
00:01:13,519 --> 00:01:15,439
里面只有前两个是有效的

30
00:01:15,439 --> 00:01:17,000
后面是没有效的

31
00:01:17,480 --> 00:01:18,960
如果是这样子的情况下

32
00:01:18,960 --> 00:01:21,719
那么我就会把在算softmax的时候

33
00:01:21,719 --> 00:01:23,719
我就把后面那些值忽略掉

34
00:01:24,719 --> 00:01:25,519
Ok

35
00:01:25,879 --> 00:01:26,959
但你不能设成0

36
00:01:27,159 --> 00:01:29,280
你设成0是有问题

37
00:01:29,280 --> 00:01:30,560
做指数会有问题

38
00:01:30,560 --> 00:01:31,959
所以基本上就是说

39
00:01:31,959 --> 00:01:35,000
你把它设成一个很小的值

40
00:01:35,000 --> 00:01:37,039
使得它exp出来等于0

41
00:01:37,200 --> 00:01:39,359
然后这样子上softmax的时候

42
00:01:39,359 --> 00:01:41,960
我就把后面那些东西就不算进来了

43
00:01:42,000 --> 00:01:43,719
使得前两个加下等

44
00:01:43,719 --> 00:01:45,400
如果是valid length等于2的话

45
00:01:45,400 --> 00:01:47,359
就是前两个算出来的分数加下等于1

46
00:01:47,359 --> 00:01:48,759
后面那些东西都等于0

47
00:01:49,519 --> 00:01:50,159
Ok

48
00:01:50,159 --> 00:01:51,439
就实现来看就很简单

49
00:01:51,439 --> 00:01:53,799
就是说如果你的valid length是没有给的话

50
00:01:53,959 --> 00:01:54,879
就是一个softmax

51
00:01:54,879 --> 00:01:55,280
对吧

52
00:01:55,280 --> 00:01:57,359
就是一个正常的softmax

53
00:01:57,599 --> 00:01:58,759
如果给了的话

54
00:01:58,799 --> 00:01:59,599
就是当时说

55
00:01:59,599 --> 00:02:01,519
如果我要把形状做一些变形

56
00:02:01,560 --> 00:02:03,159
核心思想就是这个东西

57
00:02:03,480 --> 00:02:03,959
对吧

58
00:02:03,959 --> 00:02:06,599
核心思想是我们前面实现

59
00:02:06,799 --> 00:02:08,079
sequence的mask

60
00:02:08,560 --> 00:02:09,800
说白了就是说

61
00:02:10,639 --> 00:02:12,759
我给你x变形一下之后

62
00:02:12,759 --> 00:02:14,439
我给你一个把

63
00:02:16,120 --> 00:02:17,240
最后一个维度

64
00:02:17,680 --> 00:02:20,079
控制在前面全部是flatten掉

65
00:02:20,200 --> 00:02:21,520
给你一个valid length

66
00:02:21,520 --> 00:02:22,480
然后把那些

67
00:02:23,520 --> 00:02:24,880
不valid的那些东西

68
00:02:25,040 --> 00:02:27,600
填一个1-6进去

69
00:02:27,600 --> 00:02:29,720
就填一个很小的负数进去

70
00:02:29,960 --> 00:02:31,520
这样子算exp等于0

71
00:02:31,560 --> 00:02:33,720
然后就把它丢到softmax里面就出来

72
00:02:33,960 --> 00:02:34,520
Ok

73
00:02:35,120 --> 00:02:36,160
我们看一下效果

74
00:02:37,200 --> 00:02:38,640
效果是说

75
00:02:38,640 --> 00:02:41,640
假设给你一个224的一个东西

76
00:02:43,520 --> 00:02:44,720
我告诉你说

77
00:02:44,840 --> 00:02:47,080
第一个2是你的batch size

78
00:02:47,600 --> 00:02:48,280
我告诉你说

79
00:02:48,280 --> 00:02:49,040
第一个样本

80
00:02:49,759 --> 00:02:53,079
就前面两列是有效的

81
00:02:53,599 --> 00:02:54,479
然后第二个样本

82
00:02:54,639 --> 00:02:56,280
前面三列是有效的

83
00:02:56,400 --> 00:02:57,879
那么你做softmax出来之后

84
00:02:57,879 --> 00:02:59,319
你会发现是长成这个样子

85
00:02:59,319 --> 00:03:00,039
就是说

86
00:03:00,399 --> 00:03:01,239
这个第一个样本

87
00:03:01,399 --> 00:03:02,599
第一个样本就是第一行

88
00:03:02,599 --> 00:03:05,120
就是后面的两个东西就变成0了

89
00:03:05,399 --> 00:03:06,359
前面两个东西

90
00:03:06,840 --> 00:03:08,319
加起来是等于1的

91
00:03:08,759 --> 00:03:09,319
同样道理

92
00:03:09,639 --> 00:03:11,560
这个也是把后面两个变成0

93
00:03:12,239 --> 00:03:13,840
然后对第二个样本

94
00:03:13,959 --> 00:03:16,000
就是前面三个

95
00:03:17,000 --> 00:03:19,080
三个元素是留住了

96
00:03:19,080 --> 00:03:19,879
后面是变成0

97
00:03:19,879 --> 00:03:21,800
前面三个加起来等于1

98
00:03:22,639 --> 00:03:23,439
后面是一样的

99
00:03:24,360 --> 00:03:26,360
当然你还可以做的稍微fancy一点

100
00:03:26,360 --> 00:03:27,039
就是说

101
00:03:27,199 --> 00:03:28,199
我可以

102
00:03:28,400 --> 00:03:29,560
假设我这里面

103
00:03:29,560 --> 00:03:31,120
我可以给定说

104
00:03:33,080 --> 00:03:35,439
每一个具体最后那个东西

105
00:03:35,639 --> 00:03:36,920
就是给个22的话

106
00:03:36,920 --> 00:03:39,360
我可以给一个2×2的一个value length

107
00:03:39,400 --> 00:03:40,439
告诉你说

108
00:03:40,479 --> 00:03:41,759
第一个样本

109
00:03:41,800 --> 00:03:43,920
它是第一个元素是valid

110
00:03:43,920 --> 00:03:44,840
后面全是0

111
00:03:44,840 --> 00:03:46,319
所以它就是一个全一

112
00:03:47,200 --> 00:03:48,400
第二个元素

113
00:03:48,400 --> 00:03:50,080
前面三个是有效的

114
00:03:50,280 --> 00:03:51,360
三个是有效的

115
00:03:51,360 --> 00:03:52,360
后面是等于0

116
00:03:53,039 --> 00:03:55,240
第三个前面两个是有效的

117
00:03:55,480 --> 00:03:57,000
第四个是全部有效的

118
00:03:58,439 --> 00:04:00,159
这基本上让你控制说

119
00:04:00,199 --> 00:04:02,360
你最后算softmax

120
00:04:02,360 --> 00:04:04,000
在softmax的维度上

121
00:04:04,840 --> 00:04:06,719
我要保留前几个

122
00:04:06,719 --> 00:04:07,920
后面拿几个不要

123
00:04:07,920 --> 00:04:09,800
就是这个Mask干的事情

124
00:04:10,480 --> 00:04:12,080
我们等会给大家是解

125
00:04:12,120 --> 00:04:13,480
看到实际的时候

126
00:04:13,520 --> 00:04:14,840
就看到seq

127
00:04:14,840 --> 00:04:15,720
seq to seq的时候

128
00:04:15,720 --> 00:04:16,400
给大家讲一下

129
00:04:16,400 --> 00:04:17,560
为什么要这个东西

130
00:04:17,800 --> 00:04:19,480
但我们先把这个函数实现好

131
00:04:21,360 --> 00:04:21,640
好

132
00:04:21,640 --> 00:04:22,600
我们接下来实现

133
00:04:22,600 --> 00:04:24,319
我们的加性注意力

134
00:04:25,400 --> 00:04:26,160
加性注意力

135
00:04:26,160 --> 00:04:27,480
反正你实现起来

136
00:04:27,480 --> 00:04:28,640
就是大家知道

137
00:04:28,640 --> 00:04:30,800
就是三个可以学的东西

138
00:04:30,800 --> 00:04:33,319
就是假设我告诉你的key size

139
00:04:33,360 --> 00:04:34,360
就那个K

140
00:04:34,360 --> 00:04:35,280
Q size

141
00:04:35,400 --> 00:04:36,879
Q number of hinted

142
00:04:36,879 --> 00:04:37,920
就算H

143
00:04:38,040 --> 00:04:40,480
然后就行了

144
00:04:40,759 --> 00:04:42,400
你的value size

145
00:04:42,400 --> 00:04:43,000
我比较知道

146
00:04:43,000 --> 00:04:44,519
因为我的科学的参数

147
00:04:44,519 --> 00:04:45,319
跟他无关

148
00:04:46,079 --> 00:04:47,000
第一个就是Wk

149
00:04:47,000 --> 00:04:47,800
就是一个线性层

150
00:04:48,000 --> 00:04:49,839
就是K到H

151
00:04:50,120 --> 00:04:51,639
Wq也是一个线性层

152
00:04:51,759 --> 00:04:53,319
就是Q到H

153
00:04:53,519 --> 00:04:54,399
然后你的Wv

154
00:04:54,399 --> 00:04:56,240
就是最后是你个H到E的

155
00:04:56,240 --> 00:04:56,959
一个东西

156
00:04:57,120 --> 00:04:58,959
我们把bios测成了false

157
00:04:58,959 --> 00:05:00,160
就是说你不需要bios

158
00:05:00,160 --> 00:05:01,240
因为我们之前

159
00:05:01,360 --> 00:05:03,000
之前没有写bios在里面

160
00:05:03,600 --> 00:05:04,560
另外一个不一样的

161
00:05:04,560 --> 00:05:05,920
说我可以做一个dropout

162
00:05:06,399 --> 00:05:07,639
就是可以让你做一点

163
00:05:10,160 --> 00:05:11,160
正哲化

164
00:05:12,240 --> 00:05:12,439
好

165
00:05:12,439 --> 00:05:13,800
接下来看到个forward

166
00:05:15,639 --> 00:05:17,920
forward给你query

167
00:05:18,319 --> 00:05:18,959
keys

168
00:05:18,959 --> 00:05:19,800
values

169
00:05:20,120 --> 00:05:21,600
value length是什么呢

170
00:05:22,439 --> 00:05:23,920
value length是说

171
00:05:23,920 --> 00:05:27,839
你有多少对key value pair

172
00:05:27,839 --> 00:05:28,959
是需要的

173
00:05:29,800 --> 00:05:32,519
就是说我在查query的时候

174
00:05:32,959 --> 00:05:34,240
我就说对每

175
00:05:34,240 --> 00:05:35,199
它的长度

176
00:05:35,199 --> 00:05:37,240
应该是等价于query的长度

177
00:05:37,279 --> 00:05:38,680
对每一个query

178
00:05:39,040 --> 00:05:41,480
我应该考虑前

179
00:05:42,560 --> 00:05:44,240
多少个key value pair

180
00:05:45,719 --> 00:05:46,040
对

181
00:05:46,040 --> 00:05:47,639
这个value length干这个事情了

182
00:05:48,120 --> 00:05:49,680
这样子导致说你在

183
00:05:49,719 --> 00:05:51,079
之后我们再做sequence

184
00:05:51,079 --> 00:05:52,279
如果是key value

185
00:05:52,279 --> 00:05:53,560
是pad出来的话

186
00:05:53,920 --> 00:05:54,519
所以这样子

187
00:05:54,519 --> 00:05:55,959
我就可以把通过这个东西

188
00:05:55,959 --> 00:05:57,920
把那些pad的出来的东西

189
00:05:57,920 --> 00:05:59,560
那些key和value就不要

190
00:06:00,920 --> 00:06:01,240
OK

191
00:06:01,279 --> 00:06:02,319
我们来看一下实相

192
00:06:03,800 --> 00:06:05,720
query丢进Wq

193
00:06:05,720 --> 00:06:07,360
会得到我的

194
00:06:07,560 --> 00:06:08,519
那个

195
00:06:08,519 --> 00:06:11,519
就做过惩罚之后的query

196
00:06:11,719 --> 00:06:13,719
然后key也是一样的

197
00:06:13,719 --> 00:06:14,599
得到keys

198
00:06:15,719 --> 00:06:16,240
好

199
00:06:16,240 --> 00:06:17,799
接下来我们把它加起来

200
00:06:17,839 --> 00:06:20,399
加起来这个东西就比较好玩一点

201
00:06:20,399 --> 00:06:21,079
是说

202
00:06:21,759 --> 00:06:22,959
我们这个东西出来

203
00:06:23,319 --> 00:06:25,159
是一个二维的东西

204
00:06:25,599 --> 00:06:26,359
是一个

205
00:06:27,240 --> 00:06:28,079
三维的东西

206
00:06:28,199 --> 00:06:29,959
这个东西是一个batch size

207
00:06:30,359 --> 00:06:31,319
是第一位

208
00:06:31,359 --> 00:06:33,560
第二位是number of queries

209
00:06:33,599 --> 00:06:35,000
第三位是h

210
00:06:35,439 --> 00:06:37,519
这个东西是batch size

211
00:06:37,680 --> 00:06:38,919
number of keys

212
00:06:39,199 --> 00:06:40,399
然后是h

213
00:06:41,280 --> 00:06:42,200
我不能直接加

214
00:06:42,200 --> 00:06:42,520
对吧

215
00:06:42,520 --> 00:06:44,760
我中间那个维度不一样

216
00:06:44,760 --> 00:06:46,960
而且我需要对每一个query

217
00:06:46,960 --> 00:06:48,600
和每一个key加起来

218
00:06:48,880 --> 00:06:49,240
怎么做

219
00:06:49,360 --> 00:06:50,480
我可以做broadcasting

220
00:06:50,600 --> 00:06:51,680
就是说我把query

221
00:06:52,160 --> 00:06:54,600
在第二个维度那里加一位进去

222
00:06:54,600 --> 00:06:56,080
它就变成了一个

223
00:06:56,320 --> 00:06:57,440
batch size

224
00:06:59,000 --> 00:07:01,240
query的个数1

225
00:07:01,280 --> 00:07:02,040
h

226
00:07:02,360 --> 00:07:03,800
key就会变成了一个

227
00:07:03,800 --> 00:07:04,640
在第一位加一个

228
00:07:04,640 --> 00:07:05,800
就变成了batch size

229
00:07:05,840 --> 00:07:06,360
1

230
00:07:06,400 --> 00:07:07,480
number of keys

231
00:07:07,520 --> 00:07:08,840
然后和h

232
00:07:09,400 --> 00:07:10,200
这样子加的话

233
00:07:10,400 --> 00:07:11,560
对每一个key value

234
00:07:11,560 --> 00:07:12,160
就会加一下

235
00:07:12,200 --> 00:07:13,320
那么feature就会出来

236
00:07:13,320 --> 00:07:14,920
是一个batch size

237
00:07:14,960 --> 00:07:16,080
number of keys

238
00:07:16,120 --> 00:07:17,040
sorry

239
00:07:17,080 --> 00:07:17,960
batch size

240
00:07:18,000 --> 00:07:19,120
number of queries

241
00:07:19,160 --> 00:07:20,760
number of keys和h

242
00:07:21,240 --> 00:07:21,520
对吧

243
00:07:21,520 --> 00:07:22,480
就出来一个

244
00:07:22,520 --> 00:07:24,000
就对每一个query和每个key

245
00:07:24,000 --> 00:07:24,880
都加起来了

246
00:07:25,720 --> 00:07:27,320
这也是项链号的版本

247
00:07:27,440 --> 00:07:28,240
刚刚我们

248
00:07:28,280 --> 00:07:30,960
然后对它做一个激活

249
00:07:31,160 --> 00:07:32,000
激活之后

250
00:07:32,200 --> 00:07:34,880
就是把feature丢进去

251
00:07:36,320 --> 00:07:37,080
跟它做

252
00:07:37,080 --> 00:07:37,800
跟它做完之后

253
00:07:38,079 --> 00:07:38,920
会出来一个什么东西

254
00:07:39,000 --> 00:07:40,360
它就是一个

255
00:07:41,199 --> 00:07:42,439
p端大小

256
00:07:43,360 --> 00:07:44,360
key的个数

257
00:07:44,400 --> 00:07:45,600
query的个数

258
00:07:45,600 --> 00:07:46,280
key的个数

259
00:07:46,280 --> 00:07:46,680
1

260
00:07:46,680 --> 00:07:47,319
最后是个1

261
00:07:47,319 --> 00:07:48,720
因为你的东西

262
00:07:48,720 --> 00:07:50,080
是把h变成了1的

263
00:07:50,080 --> 00:07:50,560
对吧

264
00:07:51,199 --> 00:07:52,759
我们再squeeze掉最后一个维度

265
00:07:52,759 --> 00:07:53,040
就是说

266
00:07:53,040 --> 00:07:53,879
把最后一个维度是1

267
00:07:53,879 --> 00:07:54,519
就不要

268
00:07:54,519 --> 00:07:56,199
那么就sqloss就变成了

269
00:07:56,920 --> 00:07:57,879
p端大小

270
00:07:58,160 --> 00:07:59,280
query的个数

271
00:07:59,280 --> 00:08:01,519
和你的key的个数

272
00:08:02,240 --> 00:08:02,840
OK

273
00:08:02,960 --> 00:08:03,639
这就正常了

274
00:08:03,639 --> 00:08:04,000
对吧

275
00:08:04,000 --> 00:08:05,480
对每一个样本来讲

276
00:08:05,480 --> 00:08:06,480
那么你的

277
00:08:06,520 --> 00:08:08,040
权重就是应该

278
00:08:08,680 --> 00:08:09,520
query的个数

279
00:08:09,520 --> 00:08:10,520
和key的个数

280
00:08:10,520 --> 00:08:11,160
那个东西

281
00:08:12,080 --> 00:08:14,120
然后你再做softmax

282
00:08:14,120 --> 00:08:14,480
对吧

283
00:08:14,480 --> 00:08:16,480
对它做一个mask softmax

284
00:08:16,800 --> 00:08:17,800
然后就是说

285
00:08:18,680 --> 00:08:19,840
这样子过滤掉那些

286
00:08:19,840 --> 00:08:21,000
我不需要的

287
00:08:21,000 --> 00:08:22,400
那些key value pairs

288
00:08:22,800 --> 00:08:23,520
做在这个地方

289
00:08:23,520 --> 00:08:24,680
在sql上做

290
00:08:24,759 --> 00:08:27,319
然后如果你需要

291
00:08:27,319 --> 00:08:28,960
如果你dropout的话

292
00:08:29,200 --> 00:08:32,000
对它对weight做dropout

293
00:08:32,039 --> 00:08:33,159
意思是说

294
00:08:33,200 --> 00:08:34,759
对哪一些key value pairs

295
00:08:34,759 --> 00:08:35,759
我不需要看

296
00:08:36,480 --> 00:08:37,720
就直接dropout掉了

297
00:08:37,920 --> 00:08:39,039
而且dropout是保证

298
00:08:39,039 --> 00:08:39,800
那scale的

299
00:08:39,840 --> 00:08:40,960
所以是它加起来

300
00:08:40,960 --> 00:08:41,800
还是等于1的

301
00:08:41,800 --> 00:08:42,080
就是说

302
00:08:42,080 --> 00:08:43,399
把其中更多的项

303
00:08:43,399 --> 00:08:44,240
变成了0

304
00:08:44,279 --> 00:08:44,680
就是说

305
00:08:44,680 --> 00:08:47,440
我丢掉了更多的key value pair

306
00:08:47,800 --> 00:08:49,519
最后做bmm

307
00:08:49,519 --> 00:08:50,960
就是batch mm

308
00:08:51,039 --> 00:08:52,159
就对每一个样本

309
00:08:52,240 --> 00:08:53,480
因为它是一个

310
00:08:53,519 --> 00:08:56,680
query数乘以key数的东西

311
00:08:56,960 --> 00:08:58,639
query数乘以key数的东西

312
00:08:58,680 --> 00:08:59,480
乘以value

313
00:08:59,480 --> 00:09:00,800
就变成了一个

314
00:09:02,039 --> 00:09:03,240
number of query数

315
00:09:03,240 --> 00:09:03,840
和你的

316
00:09:03,840 --> 00:09:04,680
最后你的value的

317
00:09:04,680 --> 00:09:05,560
长度的一个矩阵

318
00:09:05,640 --> 00:09:07,920
然后第1个维度是batch size

319
00:09:09,040 --> 00:09:09,720
OK

320
00:09:09,920 --> 00:09:11,520
所以基本上这个就是

321
00:09:11,880 --> 00:09:12,560
相对来说

322
00:09:12,560 --> 00:09:13,840
比较复杂的一个实相

323
00:09:14,360 --> 00:09:16,400
要主要是你们涉及到了

324
00:09:16,400 --> 00:09:17,760
要升到4维

325
00:09:18,160 --> 00:09:19,120
然后

326
00:09:20,160 --> 00:09:20,800
说白了

327
00:09:20,800 --> 00:09:21,840
就是它的复杂度

328
00:09:21,840 --> 00:09:22,200
来自于

329
00:09:22,200 --> 00:09:23,600
我们要把刚刚那一个东西

330
00:09:23,720 --> 00:09:25,360
做成一个向量化的版本

331
00:09:25,360 --> 00:09:27,600
就刚刚拼进去

332
00:09:27,600 --> 00:09:29,200
丢到一个mlp里面

333
00:09:29,200 --> 00:09:30,680
做成一个向量版本

334
00:09:30,680 --> 00:09:31,800
就是有4维了

335
00:09:32,000 --> 00:09:33,560
正常的mlp

336
00:09:33,560 --> 00:09:34,600
就是一个2维的东西

337
00:09:34,600 --> 00:09:34,880
对吧

338
00:09:34,879 --> 00:09:35,960
要升到4维

339
00:09:36,639 --> 00:09:37,320
这导致了

340
00:09:37,320 --> 00:09:38,960
那里面出来一点点的

341
00:09:39,320 --> 00:09:40,519
写起来就相对来说

342
00:09:40,519 --> 00:09:41,480
会显得长一点

343
00:09:42,240 --> 00:09:42,879
OK

344
00:09:42,879 --> 00:09:44,720
这就是加逊的tension

345
00:09:46,639 --> 00:09:47,480
然后我们就是

346
00:09:47,480 --> 00:09:48,200
当然可以看一下

347
00:09:48,439 --> 00:09:48,759
就是说

348
00:09:48,759 --> 00:09:50,200
我们现在不能训练

349
00:09:50,360 --> 00:09:51,200
所以我们可以看一下

350
00:09:51,200 --> 00:09:51,759
一个结果

351
00:09:51,759 --> 00:09:52,399
就是说

352
00:09:52,759 --> 00:09:53,840
你的query

353
00:09:54,519 --> 00:09:55,639
query是一个

354
00:09:55,679 --> 00:09:57,759
给你一个2 1 20的

355
00:09:57,759 --> 00:09:58,320
是什么意思

356
00:09:58,439 --> 00:10:00,279
就是batch size是2

357
00:10:00,279 --> 00:10:01,320
一个query

358
00:10:01,320 --> 00:10:03,080
然后query长度是20

359
00:10:03,240 --> 00:10:04,360
key是什么意思

360
00:10:04,440 --> 00:10:05,600
我有10个key

361
00:10:06,120 --> 00:10:06,519
就是说

362
00:10:06,519 --> 00:10:07,800
我有2

363
00:10:07,800 --> 00:10:08,919
batch size是2

364
00:10:09,279 --> 00:10:10,240
我有10个key

365
00:10:10,240 --> 00:10:11,639
然后key的长度是2

366
00:10:13,039 --> 00:10:14,399
接下来你的value

367
00:10:14,560 --> 00:10:15,360
value就是一个

368
00:10:15,360 --> 00:10:16,080
range出来的东西

369
00:10:16,080 --> 00:10:17,159
就是一个2 1 1

370
00:10:17,159 --> 00:10:17,840
就是

371
00:10:19,680 --> 00:10:20,320
不是2 1 1

372
00:10:20,320 --> 00:10:23,360
是2 14

373
00:10:23,360 --> 00:10:24,960
就是repeat 2了

374
00:10:24,960 --> 00:10:25,519
这个地方

375
00:10:25,519 --> 00:10:26,600
所以这个会变成2

376
00:10:26,600 --> 00:10:27,519
就是10和4

377
00:10:27,519 --> 00:10:29,560
就是你有10个value

378
00:10:29,560 --> 00:10:31,279
然后value的长度是4

379
00:10:33,159 --> 00:10:33,399
好

380
00:10:33,399 --> 00:10:34,159
value length

381
00:10:34,360 --> 00:10:34,759
就是说

382
00:10:34,759 --> 00:10:36,199
我说我第一个样本

383
00:10:36,360 --> 00:10:38,240
去看前两个

384
00:10:38,799 --> 00:10:39,679
查query的时候

385
00:10:39,679 --> 00:10:41,399
去看前两个key value pair

386
00:10:41,439 --> 00:10:42,559
然后第二个是说

387
00:10:42,559 --> 00:10:44,600
我去看前6个key value pair

388
00:10:45,079 --> 00:10:47,079
然后我们构造出来之后

389
00:10:47,079 --> 00:10:47,719
看一下结果

390
00:10:47,799 --> 00:10:49,159
就是query key

391
00:10:49,159 --> 00:10:49,519
value

392
00:10:49,519 --> 00:10:50,120
value length

393
00:10:50,120 --> 00:10:51,839
就会出来一个

394
00:10:51,879 --> 00:10:53,639
2乘以1

395
00:10:53,639 --> 00:10:54,360
乘以1

396
00:10:54,360 --> 00:10:55,519
加乘以4

397
00:10:55,600 --> 00:10:56,600
4是value的

398
00:10:56,600 --> 00:10:58,879
是你的value的东西

399
00:10:59,519 --> 00:11:00,319
基本上一看到

400
00:11:00,319 --> 00:11:01,360
因为他们是一样的

401
00:11:01,360 --> 00:11:02,279
所以因为

402
00:11:02,279 --> 00:11:05,000
所以就会

403
00:11:05,360 --> 00:11:06,600
基本上是一个

404
00:11:06,600 --> 00:11:08,039
差不多三倍的关系

405
00:11:08,120 --> 00:11:10,000
因为这个是length会不一样

406
00:11:10,120 --> 00:11:10,600
对吧

407
00:11:10,600 --> 00:11:12,360
因为前面只看了两个

408
00:11:12,399 --> 00:11:14,240
看的是前面那些小的

409
00:11:14,240 --> 00:11:14,399
纸

410
00:11:14,399 --> 00:11:15,360
后面看了6个

411
00:11:15,360 --> 00:11:16,439
看的纸稍微大一点

412
00:11:16,439 --> 00:11:17,720
所以就会有导致

413
00:11:17,720 --> 00:11:19,039
虽然就是说

414
00:11:19,079 --> 00:11:19,839
前面的东西

415
00:11:19,839 --> 00:11:21,079
应该是都是

416
00:11:22,399 --> 00:11:23,360
会有点不一样了

417
00:11:23,360 --> 00:11:23,959
就是value

418
00:11:23,959 --> 00:11:25,120
虽然value是一样的

419
00:11:25,120 --> 00:11:26,399
但是query和key不一样

420
00:11:26,399 --> 00:11:28,439
而且看的东西不一样

421
00:11:28,480 --> 00:11:29,279
所以导致说

422
00:11:29,279 --> 00:11:30,279
这个东西出来的

423
00:11:30,279 --> 00:11:32,039
纸会是不一样的

424
00:11:32,919 --> 00:11:33,399
Ok

425
00:11:33,399 --> 00:11:35,399
所以这个就是加性的

426
00:11:35,439 --> 00:11:36,199
attention

427
00:11:37,159 --> 00:11:38,240
然后可以看到是说

428
00:11:38,240 --> 00:11:39,159
假设我们画一画

429
00:11:39,559 --> 00:11:41,279
把tension weight出来画一画

430
00:11:43,000 --> 00:11:44,319
可以看到是说

431
00:11:44,319 --> 00:11:44,720
是什么

432
00:11:44,959 --> 00:11:45,319
key

433
00:11:45,319 --> 00:11:46,600
就是说横着是key

434
00:11:46,600 --> 00:11:48,120
就是说你有10个key

435
00:11:48,120 --> 00:11:48,639
对吧

436
00:11:48,679 --> 00:11:50,360
你中间你的是

437
00:11:51,679 --> 00:11:52,120
query

438
00:11:52,120 --> 00:11:53,959
我们有就看这

439
00:11:53,959 --> 00:11:56,279
就两个样本

440
00:11:56,720 --> 00:11:57,360
两个样本

441
00:11:57,360 --> 00:11:59,039
就是说byte size2

442
00:11:59,360 --> 00:12:00,919
然后就看到是说

443
00:12:01,000 --> 00:12:01,679
第一

444
00:12:02,519 --> 00:12:03,679
第一个看到

445
00:12:03,679 --> 00:12:04,559
第一个的weight

446
00:12:04,559 --> 00:12:06,639
全部给了前面的两个

447
00:12:06,799 --> 00:12:07,959
是因为后面那些key

448
00:12:07,959 --> 00:12:08,360
value pair

449
00:12:08,360 --> 00:12:10,439
我们把它过滤掉了

450
00:12:10,439 --> 00:12:11,639
用value length设

451
00:12:11,639 --> 00:12:13,159
设没了

452
00:12:13,159 --> 00:12:14,439
所以就是它等于零

453
00:12:14,439 --> 00:12:15,519
所以前面的

454
00:12:15,559 --> 00:12:16,599
基本就在这个地方

455
00:12:16,879 --> 00:12:18,599
而且因为它都是长一样的

456
00:12:18,919 --> 00:12:21,599
所以权重都是分配均匀的

457
00:12:22,519 --> 00:12:23,759
第二个是说

458
00:12:25,120 --> 00:12:26,199
我的

459
00:12:27,319 --> 00:12:28,679
因为我看前6个

460
00:12:29,079 --> 00:12:29,599
前6个

461
00:12:29,600 --> 00:12:31,600
所以是前6个是有值的

462
00:12:31,600 --> 00:12:32,320
而且是一样的

463
00:12:32,320 --> 00:12:34,480
因为它query是一个

464
00:12:34,480 --> 00:12:36,320
你的key也是长一样的

465
00:12:36,600 --> 00:12:38,759
但是后面4个

466
00:12:38,759 --> 00:12:39,920
我们就没考虑了

467
00:12:39,920 --> 00:12:41,639
所以这个就是权重

468
00:12:41,639 --> 00:12:42,360
就是画出来

469
00:12:42,360 --> 00:12:43,360
就是这个效果

470
00:12:46,759 --> 00:12:47,200
好

471
00:12:47,200 --> 00:12:48,320
然后我们就是看

472
00:12:48,879 --> 00:12:50,759
dot product scale的

473
00:12:50,759 --> 00:12:53,399
就是缩放点击注意力

474
00:12:54,600 --> 00:12:55,879
它就比较简单了

475
00:12:56,519 --> 00:12:57,560
它就是

476
00:12:58,080 --> 00:12:59,200
你的我先拿到

477
00:12:59,200 --> 00:13:01,120
我的假设query和key的

478
00:13:01,120 --> 00:13:02,160
dimension都是d

479
00:13:02,840 --> 00:13:05,280
然后直接query和key

480
00:13:05,560 --> 00:13:06,560
做一个

481
00:13:06,560 --> 00:13:07,840
当key要做转制

482
00:13:09,960 --> 00:13:11,040
做一个

483
00:13:11,480 --> 00:13:12,600
把它转制完之后

484
00:13:12,720 --> 00:13:14,400
做一个bmm

485
00:13:15,160 --> 00:13:16,440
bmm再除以

486
00:13:16,800 --> 00:13:17,600
就每一个batch

487
00:13:17,720 --> 00:13:19,200
就是做一个矩阵乘法

488
00:13:19,200 --> 00:13:21,720
那再除以你d的开平方

489
00:13:21,800 --> 00:13:23,920
然后再丢到你的softmax里面

490
00:13:23,920 --> 00:13:25,760
算你的attention weight

491
00:13:25,880 --> 00:13:27,440
然后一样的

492
00:13:27,440 --> 00:13:28,960
你要dropout出来

493
00:13:28,960 --> 00:13:32,120
然后跟你的value做bmm出来

494
00:13:32,120 --> 00:13:34,560
就会得到你最后的出来的值

495
00:13:35,600 --> 00:13:37,080
所以这个东西的好处

496
00:13:37,080 --> 00:13:38,680
是说你不需要学任何东西

497
00:13:40,080 --> 00:13:42,200
所以你的唯一的

498
00:13:42,600 --> 00:13:45,320
你的唯一的科学的超差

499
00:13:45,320 --> 00:13:46,960
就是你的dropout的

500
00:13:47,320 --> 00:13:47,680
OK

501
00:13:47,680 --> 00:13:49,640
别的应该是都不用管的

502
00:13:49,800 --> 00:13:50,800
这是它的好处

503
00:13:51,400 --> 00:13:52,400
它的当然是好处

504
00:13:52,400 --> 00:13:54,560
就是说你实现简单

505
00:13:54,560 --> 00:13:56,240
然后不需要算东西

506
00:13:56,240 --> 00:13:57,480
但坏处是说

507
00:13:57,799 --> 00:14:00,080
你学的东西就会变少一点

508
00:14:02,080 --> 00:14:02,639
OK

509
00:14:03,120 --> 00:14:04,039
所以我们就不

510
00:14:04,039 --> 00:14:05,120
就还是刚刚那个东西

511
00:14:05,320 --> 00:14:06,240
刚刚那个东西

512
00:14:07,799 --> 00:14:09,159
同样道理拿进去算一算

513
00:14:09,159 --> 00:14:10,120
会出来这个结果

514
00:14:10,120 --> 00:14:12,240
就不给大家仔细过一遍了

515
00:14:12,480 --> 00:14:13,799
另外看你的权重

516
00:14:13,799 --> 00:14:14,639
权重也是一样的

517
00:14:14,759 --> 00:14:15,600
因为我们

518
00:14:16,120 --> 00:14:17,440
就是把过滤掉了

519
00:14:17,440 --> 00:14:18,000
所以

520
00:14:18,000 --> 00:14:18,680
而且

521
00:14:18,879 --> 00:14:19,919
score算出来

522
00:14:19,919 --> 00:14:22,279
每个对每个key的score是一样的话

523
00:14:22,279 --> 00:14:23,799
那么就是说前面两个是有

524
00:14:23,799 --> 00:14:24,720
前面6个是有

525
00:14:24,720 --> 00:14:26,440
就是刚刚那个东西

526
00:14:27,440 --> 00:14:28,000
OK

527
00:14:28,000 --> 00:14:29,920
所以我们就给大家讲了

528
00:14:29,920 --> 00:14:30,399
说

529
00:14:30,759 --> 00:14:33,440
怎么样实现加信的tension

530
00:14:33,440 --> 00:14:36,879
和我的scale过的

531
00:14:36,879 --> 00:14:37,960
电器的tension

532
00:14:38,960 --> 00:14:40,800
后者实现起来比较简单

533
00:14:41,200 --> 00:14:43,840
前者实现起来就是稍微复杂一点

534
00:14:45,200 --> 00:14:46,480
然后这里面

535
00:14:46,639 --> 00:14:48,600
另外一个跟我们之前的

536
00:14:48,600 --> 00:14:50,519
那些网络看起来不一样的

537
00:14:50,519 --> 00:14:51,960
是有key有value

538
00:14:52,200 --> 00:14:53,080
有query

539
00:14:53,440 --> 00:14:55,400
这东西跟我们之前就长得不一样

540
00:14:55,840 --> 00:14:57,520
接下来我们会说

541
00:14:57,720 --> 00:14:59,280
接下来我们之后所有的应用

542
00:14:59,280 --> 00:15:00,080
就给大家讲

543
00:15:00,080 --> 00:15:01,840
到底key是什么

544
00:15:01,960 --> 00:15:03,040
value是什么

545
00:15:03,200 --> 00:15:04,240
query是什么

546
00:15:04,520 --> 00:15:05,080
OK

547
00:15:05,080 --> 00:15:06,560
就根据你的网络的不一样

548
00:15:06,560 --> 00:15:08,680
我这些东西设置可以设的不一样

549
00:15:09,240 --> 00:15:10,759
就是说其实也就是

550
00:15:11,080 --> 00:15:12,440
怎么样把tension

551
00:15:12,440 --> 00:15:14,800
应用到其他网络中间

552
00:15:14,800 --> 00:15:16,200
应用到各个应用里面

553
00:15:16,200 --> 00:15:18,080
你要去设计谁是query

554
00:15:18,080 --> 00:15:18,680
谁是key

555
00:15:18,680 --> 00:15:19,520
谁是value

